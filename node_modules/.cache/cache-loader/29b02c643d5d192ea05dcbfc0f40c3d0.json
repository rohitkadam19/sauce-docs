{"remainingRequest":"/Users/nancysweeney/GH/sauce-docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/theme-search-algolia/src/theme/SearchBar/index.js","dependencies":[{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/theme-search-algolia/src/theme/SearchBar/index.js","mtime":1605895629031},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/cache-loader/dist/cjs.js","mtime":1602877854626},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/babel-loader/lib/index.js","mtime":1605895626604}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiO3ZhciBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZD1yZXF1aXJlKCIvVXNlcnMvbmFuY3lzd2VlbmV5L0dIL3NhdWNlLWRvY3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIpO3ZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0PXJlcXVpcmUoIi9Vc2Vycy9uYW5jeXN3ZWVuZXkvR0gvc2F1Y2UtZG9jcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQiKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywiX19lc01vZHVsZSIse3ZhbHVlOnRydWV9KTtleHBvcnRzLmRlZmF1bHQ9dm9pZCAwO3ZhciBfZXh0ZW5kczI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIvVXNlcnMvbmFuY3lzd2VlbmV5L0dIL3NhdWNlLWRvY3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiKSk7dmFyIF9yZWFjdD1faW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCJyZWFjdCIpKTt2YXIgX3JlYWN0RG9tPXJlcXVpcmUoInJlYWN0LWRvbSIpO3ZhciBfdXNlRG9jdXNhdXJ1c0NvbnRleHQ9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJAZG9jdXNhdXJ1cy91c2VEb2N1c2F1cnVzQ29udGV4dCIpKTt2YXIgX3JvdXRlcj1yZXF1aXJlKCJAZG9jdXNhdXJ1cy9yb3V0ZXIiKTt2YXIgX3VzZUJhc2VVcmw9cmVxdWlyZSgiQGRvY3VzYXVydXMvdXNlQmFzZVVybCIpO3ZhciBfTGluaz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkBkb2N1c2F1cnVzL0xpbmsiKSk7dmFyIF9IZWFkPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiQGRvY3VzYXVydXMvSGVhZCIpKTt2YXIgX3VzZVNlYXJjaFF1ZXJ5PV9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiQHRoZW1lL2hvb2tzL3VzZVNlYXJjaFF1ZXJ5IikpO3ZhciBfcmVhY3QyPXJlcXVpcmUoIkBkb2NzZWFyY2gvcmVhY3QiKTt2YXIgX2FsZ29saWFTZWFyY2hVdGlscz1yZXF1aXJlKCIuLi8uLi91dGlscy9hbGdvbGlhU2VhcmNoVXRpbHMiKTsvKioKICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuCiAqCiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZQogKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuCiAqL2xldCBEb2NTZWFyY2hNb2RhbD1udWxsO2Z1bmN0aW9uIEhpdCh7aGl0LGNoaWxkcmVufSl7cmV0dXJuLyojX19QVVJFX18qL19yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX0xpbmsuZGVmYXVsdCx7dG86aGl0LnVybH0sY2hpbGRyZW4pO31mdW5jdGlvbiBSZXN1bHRzRm9vdGVyKHtzdGF0ZSxvbkNsb3NlfSl7Y29uc3R7Z2VuZXJhdGVTZWFyY2hQYWdlTGlua309KDAsX3VzZVNlYXJjaFF1ZXJ5LmRlZmF1bHQpKCk7cmV0dXJuLyojX19QVVJFX18qL19yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX0xpbmsuZGVmYXVsdCx7dG86Z2VuZXJhdGVTZWFyY2hQYWdlTGluayhzdGF0ZS5xdWVyeSksb25DbGljazpvbkNsb3NlfSwiU2VlIGFsbCAiLHN0YXRlLmNvbnRleHQubmJIaXRzLCIgcmVzdWx0cyIpO31mdW5jdGlvbiBEb2NTZWFyY2goe2NvbnRleHR1YWxTZWFyY2gsLi4ucHJvcHN9KXtjb25zdHtzaXRlTWV0YWRhdGF9PSgwLF91c2VEb2N1c2F1cnVzQ29udGV4dC5kZWZhdWx0KSgpO2NvbnN0IGNvbnRleHR1YWxTZWFyY2hQYXJhbWV0ZXJzPSgwLF9hbGdvbGlhU2VhcmNoVXRpbHMudXNlQWxnb2xpYUNvbnRleHR1YWxTZWFyY2hQYXJhbWV0ZXJzKSgpOy8vIHdlIGxldCB1c2VyIG92ZXJyaWRlIGRlZmF1bHQgc2VhcmNoUGFyYW1ldGVycyBpZiBoZSB3YW50cyB0bwpjb25zdCBzZWFyY2hQYXJhbWV0ZXJzPXsuLi4oY29udGV4dHVhbFNlYXJjaD9jb250ZXh0dWFsU2VhcmNoUGFyYW1ldGVyczp7fSksLi4ucHJvcHMuc2VhcmNoUGFyYW1ldGVyc307Y29uc3R7d2l0aEJhc2VVcmx9PSgwLF91c2VCYXNlVXJsLnVzZUJhc2VVcmxVdGlscykoKTtjb25zdCBoaXN0b3J5PSgwLF9yb3V0ZXIudXNlSGlzdG9yeSkoKTtjb25zdCBzZWFyY2hCdXR0b25SZWY9KDAsX3JlYWN0LnVzZVJlZikobnVsbCk7Y29uc3RbaXNPcGVuLHNldElzT3Blbl09KDAsX3JlYWN0LnVzZVN0YXRlKShmYWxzZSk7Y29uc3RbaW5pdGlhbFF1ZXJ5LHNldEluaXRpYWxRdWVyeV09KDAsX3JlYWN0LnVzZVN0YXRlKShudWxsKTtjb25zdCBpbXBvcnREb2NTZWFyY2hNb2RhbElmTmVlZGVkPSgwLF9yZWFjdC51c2VDYWxsYmFjaykoKCk9PntpZihEb2NTZWFyY2hNb2RhbCl7cmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO31yZXR1cm4gUHJvbWlzZS5hbGwoW2ltcG9ydCgnQGRvY3NlYXJjaC9yZWFjdC9tb2RhbCcpLGltcG9ydCgnQGRvY3NlYXJjaC9yZWFjdC9zdHlsZScpLGltcG9ydCgnLi9zdHlsZXMuY3NzJyldKS50aGVuKChbe0RvY1NlYXJjaE1vZGFsOk1vZGFsfV0pPT57RG9jU2VhcmNoTW9kYWw9TW9kYWw7fSk7fSxbXSk7Y29uc3Qgb25PcGVuPSgwLF9yZWFjdC51c2VDYWxsYmFjaykoKCk9PntpbXBvcnREb2NTZWFyY2hNb2RhbElmTmVlZGVkKCkudGhlbigoKT0+e3NldElzT3Blbih0cnVlKTt9KTt9LFtpbXBvcnREb2NTZWFyY2hNb2RhbElmTmVlZGVkLHNldElzT3Blbl0pO2NvbnN0IG9uQ2xvc2U9KDAsX3JlYWN0LnVzZUNhbGxiYWNrKSgoKT0+e3NldElzT3BlbihmYWxzZSk7fSxbc2V0SXNPcGVuXSk7Y29uc3Qgb25JbnB1dD0oMCxfcmVhY3QudXNlQ2FsbGJhY2spKGV2ZW50PT57aW1wb3J0RG9jU2VhcmNoTW9kYWxJZk5lZWRlZCgpLnRoZW4oKCk9PntzZXRJc09wZW4odHJ1ZSk7c2V0SW5pdGlhbFF1ZXJ5KGV2ZW50LmtleSk7fSk7fSxbaW1wb3J0RG9jU2VhcmNoTW9kYWxJZk5lZWRlZCxzZXRJc09wZW4sc2V0SW5pdGlhbFF1ZXJ5XSk7Y29uc3QgbmF2aWdhdG9yPSgwLF9yZWFjdC51c2VSZWYpKHtuYXZpZ2F0ZSh7c3VnZ2VzdGlvblVybH0pe2hpc3RvcnkucHVzaChzdWdnZXN0aW9uVXJsKTt9fSkuY3VycmVudDtjb25zdCB0cmFuc2Zvcm1JdGVtcz0oMCxfcmVhY3QudXNlUmVmKShpdGVtcz0+e3JldHVybiBpdGVtcy5tYXAoaXRlbT0+ey8vIFdlIHRyYW5zZm9ybSB0aGUgYWJzb2x1dGUgVVJMIGludG8gYSByZWxhdGl2ZSBVUkwuCi8vIEFsdGVybmF0aXZlbHksIHdlIGNhbiB1c2UgYG5ldyBVUkwoaXRlbS51cmwpYCBidXQgaXQncyBub3QKLy8gc3VwcG9ydGVkIGluIElFLgpjb25zdCBhPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTthLmhyZWY9aXRlbS51cmw7cmV0dXJuey4uLml0ZW0sdXJsOndpdGhCYXNlVXJsKGAke2EucGF0aG5hbWV9JHthLmhhc2h9YCl9O30pO30pLmN1cnJlbnQ7Y29uc3QgcmVzdWx0c0Zvb3RlckNvbXBvbmVudD0oMCxfcmVhY3QudXNlTWVtbykoKCk9PmZvb3RlclByb3BzPT4vKiNfX1BVUkVfXyovX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChSZXN1bHRzRm9vdGVyLCgwLF9leHRlbmRzMi5kZWZhdWx0KSh7fSxmb290ZXJQcm9wcyx7b25DbG9zZTpvbkNsb3NlfSkpLFtvbkNsb3NlXSk7Y29uc3QgdHJhbnNmb3JtU2VhcmNoQ2xpZW50PSgwLF9yZWFjdC51c2VDYWxsYmFjaykoc2VhcmNoQ2xpZW50PT57c2VhcmNoQ2xpZW50LmFkZEFsZ29saWFBZ2VudCgnZG9jdXNhdXJ1cycsc2l0ZU1ldGFkYXRhLmRvY3VzYXVydXNWZXJzaW9uKTtyZXR1cm4gc2VhcmNoQ2xpZW50O30sW3NpdGVNZXRhZGF0YS5kb2N1c2F1cnVzVmVyc2lvbl0pOygwLF9yZWFjdDIudXNlRG9jU2VhcmNoS2V5Ym9hcmRFdmVudHMpKHtpc09wZW4sb25PcGVuLG9uQ2xvc2Usb25JbnB1dCxzZWFyY2hCdXR0b25SZWZ9KTtyZXR1cm4vKiNfX1BVUkVfXyovX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuZGVmYXVsdC5GcmFnbWVudCxudWxsLC8qI19fUFVSRV9fKi9fcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9IZWFkLmRlZmF1bHQsbnVsbCwvKiNfX1BVUkVfXyovX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudCgibGluayIse3JlbDoicHJlY29ubmVjdCIsaHJlZjpgaHR0cHM6Ly8ke3Byb3BzLmFwcElkfS1kc24uYWxnb2xpYS5uZXRgLGNyb3NzT3JpZ2luOiJhbm9ueW1vdXMifSkpLC8qI19fUFVSRV9fKi9fcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdDIuRG9jU2VhcmNoQnV0dG9uLHtvblRvdWNoU3RhcnQ6aW1wb3J0RG9jU2VhcmNoTW9kYWxJZk5lZWRlZCxvbkZvY3VzOmltcG9ydERvY1NlYXJjaE1vZGFsSWZOZWVkZWQsb25Nb3VzZU92ZXI6aW1wb3J0RG9jU2VhcmNoTW9kYWxJZk5lZWRlZCxvbkNsaWNrOm9uT3BlbixyZWY6c2VhcmNoQnV0dG9uUmVmfSksaXNPcGVuJiYvKiNfX1BVUkVfXyovKDAsX3JlYWN0RG9tLmNyZWF0ZVBvcnRhbCkoLyojX19QVVJFX18qL19yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoRG9jU2VhcmNoTW9kYWwsKDAsX2V4dGVuZHMyLmRlZmF1bHQpKHtvbkNsb3NlOm9uQ2xvc2UsaW5pdGlhbFNjcm9sbFk6d2luZG93LnNjcm9sbFksaW5pdGlhbFF1ZXJ5OmluaXRpYWxRdWVyeSxuYXZpZ2F0b3I6bmF2aWdhdG9yLHRyYW5zZm9ybUl0ZW1zOnRyYW5zZm9ybUl0ZW1zLGhpdENvbXBvbmVudDpIaXQscmVzdWx0c0Zvb3RlckNvbXBvbmVudDpyZXN1bHRzRm9vdGVyQ29tcG9uZW50LHRyYW5zZm9ybVNlYXJjaENsaWVudDp0cmFuc2Zvcm1TZWFyY2hDbGllbnR9LHByb3BzLHtzZWFyY2hQYXJhbWV0ZXJzOnNlYXJjaFBhcmFtZXRlcnN9KSksZG9jdW1lbnQuYm9keSkpO31mdW5jdGlvbiBTZWFyY2hCYXIoKXtjb25zdHtzaXRlQ29uZmlnfT0oMCxfdXNlRG9jdXNhdXJ1c0NvbnRleHQuZGVmYXVsdCkoKTtyZXR1cm4vKiNfX1BVUkVfXyovX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChEb2NTZWFyY2gsc2l0ZUNvbmZpZy50aGVtZUNvbmZpZy5hbGdvbGlhKTt9dmFyIF9kZWZhdWx0PVNlYXJjaEJhcjtleHBvcnRzLmRlZmF1bHQ9X2RlZmF1bHQ7"},{"version":3,"sources":["/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/theme-search-algolia/src/theme/SearchBar/index.js"],"names":["DocSearchModal","Hit","hit","children","url","ResultsFooter","state","onClose","generateSearchPageLink","query","context","nbHits","DocSearch","contextualSearch","props","siteMetadata","contextualSearchParameters","searchParameters","withBaseUrl","history","searchButtonRef","isOpen","setIsOpen","initialQuery","setInitialQuery","importDocSearchModalIfNeeded","Promise","resolve","all","then","Modal","onOpen","onInput","event","key","navigator","navigate","suggestionUrl","push","current","transformItems","items","map","item","a","document","createElement","href","pathname","hash","resultsFooterComponent","footerProps","transformSearchClient","searchClient","addAlgoliaAgent","docusaurusVersion","appId","window","scrollY","body","SearchBar","siteConfig","themeConfig","algolia"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, {useState, useRef, useCallback, useMemo} from 'react';\nimport {createPortal} from 'react-dom';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport {useHistory} from '@docusaurus/router';\nimport {useBaseUrlUtils} from '@docusaurus/useBaseUrl';\nimport Link from '@docusaurus/Link';\nimport Head from '@docusaurus/Head';\nimport useSearchQuery from '@theme/hooks/useSearchQuery';\nimport {DocSearchButton, useDocSearchKeyboardEvents} from '@docsearch/react';\nimport {useAlgoliaContextualSearchParameters} from '../../utils/algoliaSearchUtils';\n\nlet DocSearchModal = null;\n\nfunction Hit({hit, children}) {\n  return <Link to={hit.url}>{children}</Link>;\n}\n\nfunction ResultsFooter({state, onClose}) {\n  const {generateSearchPageLink} = useSearchQuery();\n\n  return (\n    <Link to={generateSearchPageLink(state.query)} onClick={onClose}>\n      See all {state.context.nbHits} results\n    </Link>\n  );\n}\n\nfunction DocSearch({contextualSearch, ...props}) {\n  const {siteMetadata} = useDocusaurusContext();\n\n  const contextualSearchParameters = useAlgoliaContextualSearchParameters();\n\n  // we let user override default searchParameters if he wants to\n  const searchParameters = {\n    ...(contextualSearch ? contextualSearchParameters : {}),\n    ...props.searchParameters,\n  };\n\n  const {withBaseUrl} = useBaseUrlUtils();\n  const history = useHistory();\n  const searchButtonRef = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [initialQuery, setInitialQuery] = useState(null);\n\n  const importDocSearchModalIfNeeded = useCallback(() => {\n    if (DocSearchModal) {\n      return Promise.resolve();\n    }\n\n    return Promise.all([\n      import('@docsearch/react/modal'),\n      import('@docsearch/react/style'),\n      import('./styles.css'),\n    ]).then(([{DocSearchModal: Modal}]) => {\n      DocSearchModal = Modal;\n    });\n  }, []);\n\n  const onOpen = useCallback(() => {\n    importDocSearchModalIfNeeded().then(() => {\n      setIsOpen(true);\n    });\n  }, [importDocSearchModalIfNeeded, setIsOpen]);\n\n  const onClose = useCallback(() => {\n    setIsOpen(false);\n  }, [setIsOpen]);\n\n  const onInput = useCallback(\n    (event) => {\n      importDocSearchModalIfNeeded().then(() => {\n        setIsOpen(true);\n        setInitialQuery(event.key);\n      });\n    },\n    [importDocSearchModalIfNeeded, setIsOpen, setInitialQuery],\n  );\n\n  const navigator = useRef({\n    navigate({suggestionUrl}) {\n      history.push(suggestionUrl);\n    },\n  }).current;\n\n  const transformItems = useRef((items) => {\n    return items.map((item) => {\n      // We transform the absolute URL into a relative URL.\n      // Alternatively, we can use `new URL(item.url)` but it's not\n      // supported in IE.\n      const a = document.createElement('a');\n      a.href = item.url;\n\n      return {\n        ...item,\n        url: withBaseUrl(`${a.pathname}${a.hash}`),\n      };\n    });\n  }).current;\n\n  const resultsFooterComponent = useMemo(\n    () => (footerProps) => <ResultsFooter {...footerProps} onClose={onClose} />,\n    [onClose],\n  );\n\n  const transformSearchClient = useCallback(\n    (searchClient) => {\n      searchClient.addAlgoliaAgent(\n        'docusaurus',\n        siteMetadata.docusaurusVersion,\n      );\n\n      return searchClient;\n    },\n    [siteMetadata.docusaurusVersion],\n  );\n\n  useDocSearchKeyboardEvents({\n    isOpen,\n    onOpen,\n    onClose,\n    onInput,\n    searchButtonRef,\n  });\n\n  return (\n    <>\n      <Head>\n        {/* This hints the browser that the website will load data from Algolia,\n        and allows it to preconnect to the DocSearch cluster. It makes the first\n        query faster, especially on mobile. */}\n        <link\n          rel=\"preconnect\"\n          href={`https://${props.appId}-dsn.algolia.net`}\n          crossOrigin=\"anonymous\"\n        />\n      </Head>\n\n      <DocSearchButton\n        onTouchStart={importDocSearchModalIfNeeded}\n        onFocus={importDocSearchModalIfNeeded}\n        onMouseOver={importDocSearchModalIfNeeded}\n        onClick={onOpen}\n        ref={searchButtonRef}\n      />\n\n      {isOpen &&\n        createPortal(\n          <DocSearchModal\n            onClose={onClose}\n            initialScrollY={window.scrollY}\n            initialQuery={initialQuery}\n            navigator={navigator}\n            transformItems={transformItems}\n            hitComponent={Hit}\n            resultsFooterComponent={resultsFooterComponent}\n            transformSearchClient={transformSearchClient}\n            {...props}\n            searchParameters={searchParameters}\n          />,\n          document.body,\n        )}\n    </>\n  );\n}\n\nfunction SearchBar() {\n  const {siteConfig} = useDocusaurusContext();\n  return <DocSearch {...siteConfig.themeConfig.algolia} />;\n}\n\nexport default SearchBar;\n"]}]}