{"remainingRequest":"/Users/nancysweeney/GH/sauce-docs/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/nancysweeney/GH/sauce-docs/docs/performance/transitions.md","dependencies":[{"path":"/Users/nancysweeney/GH/sauce-docs/docs/performance/transitions.md","mtime":1612905946069},{"path":"/Users/nancysweeney/GH/sauce-docs/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-performance-transitions-md-4f6.json","mtime":1614090150578},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/cache-loader/dist/cjs.js","mtime":1602877854626},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/babel-loader/lib/index.js","mtime":1605895626604},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1613152382570},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1613152382276}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/nancysweeney/GH/sauce-docs/docs/performance/transitions.md"],"names":["React","mdx","frontMatter","id","title","sidebar_label","description","metadata","useBaseUrl","Tabs","TabItem","toc","value","children","layoutProps","MDXLayout","MDXContent","components","props","label","isMDXComponent"],"mappings":"wGACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,CAC5BC,EAAE,CAAE,aADwB,CAE5BC,KAAK,CAAE,yCAFqB,CAG5BC,aAAa,CAAE,kBAHa,CAI5BC,WAAW,CAAE,wHAJe,CAApB,CAMT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,gBAAiB,yBADK,CAEtB,KAAM,yBAFgB,CAGtB,iBAAkB,KAHI,CAItB,QAAS,yCAJa,CAKtB,cAAe,wHALO,CAMtB,SAAU,uCANY,CAOtB,OAAQ,0BAPc,CAQtB,YAAa,0BARS,CAStB,UAAW,qFATW,CAUtB,UAAW,SAVW,CAWtB,gBAAiB,QAXK,CAYtB,gBAAiB,UAZK,CAatB,gBAAiB,kBAbK,CActB,UAAW,aAdW,CAetB,WAAY,CACV,QAAS,8CADC,CAEV,YAAa,uBAFH,CAfU,CAmBtB,OAAQ,CACN,QAAS,kCADH,CAEN,YAAa,qBAFP,CAnBc,CAAjB,CAwBL,yB,CACF,cACA,MAAOC,CAAAA,UAAP,KAAuB,wBAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,gBAApB,CACA,MAAO,MAAMC,CAAAA,GAAG,CAAG,CAAC,CAClBC,KAAK,CAAE,uBADW,CAElBT,EAAE,CAAE,kBAFc,CAGlBU,QAAQ,CAAE,CAAC,CACTD,KAAK,CAAE,sBADE,CAETT,EAAE,CAAE,iBAFK,CAGTU,QAAQ,CAAE,EAHD,CAAD,CAHQ,CAAD,CAQhB,CACDD,KAAK,CAAE,kCADN,CAEDT,EAAE,CAAE,kCAFH,CAGDU,QAAQ,CAAE,EAHT,CARgB,CAYhB,CACDD,KAAK,CAAE,gDADN,CAEDT,EAAE,CAAE,gDAFH,CAGDU,QAAQ,CAAE,CAAC,CACTD,KAAK,CAAE,SADE,CAETT,EAAE,CAAE,SAFK,CAGTU,QAAQ,CAAE,EAHD,CAAD,CAIP,CACDD,KAAK,CAAE,WADN,CAEDT,EAAE,CAAE,WAFH,CAGDU,QAAQ,CAAE,EAHT,CAJO,CAQP,CACDD,KAAK,CAAE,iBADN,CAEDT,EAAE,CAAE,iBAFH,CAGDU,QAAQ,CAAE,EAHT,CARO,CAHT,CAZgB,CA4BhB,CACDD,KAAK,CAAE,kCADN,CAEDT,EAAE,CAAE,kCAFH,CAGDU,QAAQ,CAAE,CAAC,CACTD,KAAK,CAAE,SADE,CAETT,EAAE,CAAE,SAFK,CAGTU,QAAQ,CAAE,EAHD,CAAD,CAHT,CA5BgB,CAoChB,CACDD,KAAK,CAAE,+BADN,CAEDT,EAAE,CAAE,+BAFH,CAGDU,QAAQ,CAAE,EAHT,CApCgB,CAwChB,CACDD,KAAK,CAAE,sBADN,CAEDT,EAAE,CAAE,sBAFH,CAGDU,QAAQ,CAAE,EAHT,CAxCgB,CA4ChB,CACDD,KAAK,CAAE,6BADN,CAEDT,EAAE,CAAE,6BAFH,CAGDU,QAAQ,CAAE,EAHT,CA5CgB,CAAZ,CAkDP,KAAMC,CAAAA,WAAW,CAAG,CAClBH,GADkB,CAApB,CAGA,KAAMI,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGC,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeJ,WAAf,CAAgCI,KAAhC,EAAuC,UAAU,CAAED,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAGL,aAAK,oeAAL,CAHK,CAIL,sBACE,SAAG,UAAU,CAAC,YAAd,EAA2B,cAAQ,UAAU,CAAC,GAAnB,EAAyB,OAAzB,CAA3B,CAAsE,0VAAtE,CADF,CAJK,CAOL,SAAQ,CACN,KAAM,kBADA,CAAR,CAEK,mBAFL,CAPK,CAUL,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,qDAAtB,CADF,CAEE,UAAI,UAAU,CAAC,IAAf,EAAsB,mDAAtB,CAFF,CAGE,UAAI,UAAU,CAAC,IAAf,EAAsB,2BAAtB,CAHF,CAIE,UAAI,UAAU,CAAC,IAAf,EAAsB,+CAAtB,CAJF,CAKE,UAAI,UAAU,CAAC,IAAf,EAAsB,0BAAtB,CALF,CAVK,CAiBL,SAAQ,CACN,KAAM,iBADA,CAAR,CAEK,kBAFL,CAjBK,CAoBL,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,0EAAtB,CADF,CAEE,UAAI,UAAU,CAAC,IAAf,EAAsB,kEAAtB,CAFF,CAGE,UAAI,UAAU,CAAC,IAAf,EAAsB,+GAAtB,CAHF,CApBK,CAyBL,SAAQ,CACN,KAAM,kCADA,CAAR,CAEK,kCAFL,CAzBK,CA4BL,aAAK,0LAAL,CAA+L,kBAAY,UAAU,CAAC,GAAvB,EAA6B,mBAA7B,CAA/L,CAA8P,OAA9P,CAAqQ,kBAAY,UAAU,CAAC,GAAvB,EAA6B,oBAA7B,CAArQ,CAAqU,+BAArU,CAAoW,kBAAY,UAAU,CAAC,GAAvB,EAA6B,MAA7B,CAApW,CAAsZ,qDAAtZ,CAA2c,kBAAY,UAAU,CAAC,GAAvB,EAA6B,eAA7B,CAA3c,CAAsgB,qDAAtgB,CA5BK,CA6BL,IAAC,IAAD,EAAM,YAAY,CAAC,QAAnB,CAA4B,MAAM,CAAE,CAAC,CACnCE,KAAK,CAAE,QAD4B,CAEnCP,KAAK,CAAE,QAF4B,CAAD,CAGjC,CACDO,KAAK,CAAE,YADN,CAEDP,KAAK,CAAE,IAFN,CAHiC,CAMjC,CACDO,KAAK,CAAE,MADN,CAEDP,KAAK,CAAE,MAFN,CANiC,CAApC,CASI,OAAO,CAAC,MATZ,EAUE,IAAC,OAAD,EAAS,KAAK,CAAC,QAAf,CAAwB,OAAO,CAAC,SAAhC,EACE,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAE5B,aAAc,OAFc,CAG5B,QAAS,IAHmB,CAA3B,EAIE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArBa,CAAL,CADF,CAVF,CAkCE,IAAC,OAAD,EAAS,KAAK,CAAC,IAAf,CAAoB,OAAO,CAAC,SAA5B,EACE,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAE5B,aAAc,OAFc,CAG5B,QAAS,IAHmB,CAA3B,EAIE;AACf;AACA;AACA;AACA;AACA;AACA;AACA,CAXa,CAAL,CADF,CAlCF,CAgDE,IAAC,OAAD,EAAS,KAAK,CAAC,MAAf,CAAsB,OAAO,CAAC,SAA9B,EACE,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAE5B,aAAc,SAFc,CAG5B,UAAW,IAHiB,CAA3B,EAIE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfa,CAAL,CADF,CAhDF,CA7BK,CAgGL,SAAQ,CACN,KAAM,gDADA,CAAR,CAEK,gDAFL,CAhGK,CAmGL,aAAK,aAAL,CAAkB,kBAAY,UAAU,CAAC,GAAvB,EAA6B,mBAA7B,CAAlB,CAAiF,sQAAjF,CAAuV,kBAAY,UAAU,CAAC,GAAvB,EAA6B,MAA7B,CAAvV,CAAyY,kEAAzY,CAA2c,kBAAY,UAAU,CAAC,GAAvB,EAA6B,MAA7B,CAA3c,CAA6f,4FAA7f,CAAylB,kBAAG,UAAU,CAAC,GAAd,EAAsB,CAC3mB,OAAQ,qBADmmB,CAAtB,EAEllB,aAFklB,CAAzlB,CAE0B,GAF1B,CAnGK,CAsGL,SAAQ,CACN,KAAM,SADA,CAAR,CAEK,SAFL,CAtGK,CAyGL,aAAG,kBAAY,UAAU,CAAC,GAAvB,EAA6B,mBAA7B,CAAH,CAzGK,CA0GL,SAAQ,CACN,KAAM,WADA,CAAR,CAEK,WAFL,CA1GK,CA6GL,iBACE,aAAO,UAAU,CAAC,OAAlB,EACE,UAAI,UAAU,CAAC,OAAf,EACE,mBAAI,UAAU,CAAC,IAAf,EAAwB,CACtB,QAAS,IADa,CAAxB,EAEK,UAFL,CADF,CAIE,mBAAI,UAAU,CAAC,IAAf,EAAwB,CACtB,QAAS,IADa,CAAxB,EAEK,aAFL,CAJF,CADF,CADF,CAWE,aAAO,UAAU,CAAC,OAAlB,EACE,UAAI,UAAU,CAAC,OAAf,EACE,mBAAI,UAAU,CAAC,IAAf,EAAwB,CACtB,QAAS,IADa,CAAxB,EAEG,kBAAY,UAAU,CAAC,IAAvB,EAA8B,MAA9B,CAFH,CAEoD,cAFpD,CAE0D,YAAM,IAAI,CAAC,GAAX,EAAiB,UAAjB,CAF1D,CADF,CAIE,mBAAI,UAAU,CAAC,IAAf,EAAwB,CACtB,QAAS,IADa,CAAxB,EAEK,sEAFL,CAJF,CADF,CASE,UAAI,UAAU,CAAC,OAAf,EACE,mBAAI,UAAU,CAAC,IAAf,EAAwB,CACtB,QAAS,IADa,CAAxB,EAEG,kBAAY,UAAU,CAAC,IAAvB,EAA8B,SAA9B,CAFH,CAEuD,cAFvD,CAE6D,YAAM,IAAI,CAAC,GAAX,EAAiB,UAAjB,CAF7D,CADF,CAIE,mBAAI,UAAU,CAAC,IAAf,EAAwB,CACtB,QAAS,IADa,CAAxB,EAEK,uMAFL,CAE4M,cAF5M,CAEoN,MAFpN,CAE0N,kBAAG,UAAU,CAAC,IAAd,EAAuB,CAC7O,OAAQ,qCADqO,CAAvB,EAEnN,eAFmN,CAF1N,CAI4B,2CAJ5B,CAJF,CATF,CAXF,CA7GK,CA6IL,SAAQ,CACN,KAAM,iBADA,CAAR,CAEK,iBAFL,CA7IK,CAgJL,aAAK,8CAAL,CAAmD,kBAAG,UAAU,CAAC,GAAd,EAAsB,CACrE,OAAQ,uCAD6D,CAAtB,EAE5C,iBAF4C,CAAnD,CAE8B,oHAF9B,CAEkJ,kBAAY,UAAU,CAAC,GAAvB,EAA6B,mBAA7B,CAFlJ,CAEiN,4CAFjN,CAhJK,CAmJL,IAAC,IAAD,EAAM,YAAY,CAAC,QAAnB,CAA4B,MAAM,CAAE,CAAC,CACnCO,KAAK,CAAE,QAD4B,CAEnCP,KAAK,CAAE,QAF4B,CAAD,CAGjC,CACDO,KAAK,CAAE,YADN,CAEDP,KAAK,CAAE,IAFN,CAHiC,CAApC,CAMI,OAAO,CAAC,MANZ,EAOE,IAAC,OAAD,EAAS,KAAK,CAAC,QAAf,CAAwB,OAAO,CAAC,SAAhC,EACE,aAAK,mBAAL,CAAwB,kBAAG,UAAU,CAAC,GAAd,EAAsB,CAC1C,OAAQ,mDADkC,CAAtB,EAEjB,yBAFiB,CAAxB,CAEsC,GAFtC,CADF,CAIE,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,EAEE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVa,CAAL,CAJF,CAPF,CAuBE,IAAC,OAAD,EAAS,KAAK,CAAC,IAAf,CAAoB,OAAO,CAAC,SAA5B,EACE,aAAK,mBAAL,CAAwB,kBAAG,UAAU,CAAC,GAAd,EAAsB,CAC1C,OAAQ,gGADkC,CAAtB,EAEjB,6BAFiB,CAAxB,CAE0C,GAF1C,CADF,CAIE,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,EAEE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA/Da,CAAL,CAJF,CAvBF,CAnJK,CAgPL,SAAQ,CACN,KAAM,kCADA,CAAR,CAEK,kCAFL,CAhPK,CAmPL,aAAK,kBAAL,CAAuB,kBAAY,UAAU,CAAC,GAAvB,EAA6B,0BAA7B,CAAvB,CAA6F,OAA7F,CAAoG,kBAAY,UAAU,CAAC,GAAvB,EAA6B,yBAA7B,CAApG,CAAyK,oRAAzK,CAnPK,CAoPL,SAAQ,CACN,KAAM,SADA,CAAR,CAEK,SAFL,CApPK,CAuPL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAE5B,aAAc,uCAFc,CAG5B,QAAS,MAHmB,CAI5B,cAAe,IAJa,CAK5B,QAAS,IALmB,CAM5B,WAAY,IANgB,CAA3B,EAOE;AACX;AACA;AACA;AACA;AACA,CAZS,CAAL,CAvPK,CAoQL,aAAK,2EAAL,CAAgF,kBAAY,UAAU,CAAC,GAAvB,EAA6B,qBAA7B,CAAhF,CAAiJ,GAAjJ,CApQK,CAqQL,SAAQ,CACN,KAAM,+BADA,CAAR,CAEK,+BAFL,CArQK,CAwQL,aAAK,gSAAL,CAxQK,CAyQL,aAAK,2GAAL,CAzQK,CA0QL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,eADe,CAE5B,aAAc,uBAFc,CAG5B,QAAS,iBAHmB,CAA3B,EAIE;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdS,CAAL,CA1QK,CAyRL,aAAK,yJAAL,CAzRK,CA+RL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAE5B,aAAc,aAFc,CAG5B,cAAe,IAHa,CAA3B,EAIE;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBS,CAAL,CA/RK,CAiTL,SAAQ,CACN,KAAM,sBADA,CAAR,CAEK,sBAFL,CAjTK,CAoTL,aAAK,iRAAL,CAAsR,kBAAG,UAAU,CAAC,GAAd,EAAsB,CACxS,OAAQ,wDADgS,CAAtB,EAE/Q,qBAF+Q,CAAtR,CAEkC,mPAFlC,CApTK,CAuTL,aAAK,wQAAL,CAvTK,CAwTL,sBACE,SAAG,UAAU,CAAC,YAAd,EAA2B,cAAQ,UAAU,CAAC,GAAnB,EAAyB,OAAzB,CAA3B,CAAsE,GAAtE,CAAyE,kBAAY,UAAU,CAAC,GAAvB,EAA6B,mBAA7B,CAAzE,CAAwI,gRAAxI,CAAwZ,kBAAY,UAAU,CAAC,GAAvB,EAA6B,iBAA7B,CAAxZ,CAAqd,OAArd,CADF,CAxTK,CA2TL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBS,CAAL,CA3TK,CAgVL,SAAQ,CACN,KAAM,iBADA,CAAR,CAEK,iBAFL,CAhVK,CAmVL,aAAK,8FAAL,CAnVK,CAoVL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,EAA3B,EAAiC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATS,CAAL,CApVK,CA8VL,SAAQ,CACN,KAAM,6BADA,CAAR,CAEK,6BAFL,CA9VK,CAiWL,aAAK,sHAAL,CAA2H,kBAAY,UAAU,CAAC,GAAvB,EAA6B,mBAA7B,CAA3H,CAA0L,2EAA1L,CAjWK,CAkWL,IAAC,IAAD,EAAM,YAAY,CAAC,QAAnB,CAA4B,MAAM,CAAE,CAAC,CACnCO,KAAK,CAAE,QAD4B,CAEnCP,KAAK,CAAE,QAF4B,CAAD,CAGjC,CACDO,KAAK,CAAE,YADN,CAEDP,KAAK,CAAE,IAFN,CAHiC,CAApC,CAMI,OAAO,CAAC,MANZ,EAOE,IAAC,OAAD,EAAS,KAAK,CAAC,QAAf,CAAwB,OAAO,CAAC,SAAhC,EACE,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAE5B,aAAc,KAFc,CAG5B,MAAO,IAHqB,CAA3B,EAIE;AACf;AACA;AACA;AACA;AACA;AACA;AACA,CAXa,CAAL,CADF,CAPF,CAqBE,IAAC,OAAD,EAAS,KAAK,CAAC,IAAf,CAAoB,OAAO,CAAC,SAA5B,EACE,aAAK,mBAAL,CAAwB,kBAAG,UAAU,CAAC,GAAd,EAAsB,CAC1C,OAAQ,+CADkC,CAAtB,EAEjB,6BAFiB,CAAxB,CAE0C,GAF1C,CADF,CAIE,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAE5B,aAAc,KAFc,CAG5B,MAAO,IAHqB,CAA3B,EAIE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3Ba,CAAL,CAJF,CArBF,CAlWK,CAyZL,aAAK,8BAAL,CAzZK,CA0ZL,aAAG,kBAAY,UAAU,CAAC,GAAvB,EAA6B,2DAA7B,CAAH,CA1ZK,CA2ZL,sBACE,SAAG,UAAU,CAAC,YAAd,EAA2B,cAAQ,UAAU,CAAC,GAAnB,EAAyB,OAAzB,CAA3B,CAAsE,OAAtE,CAA6E,kBAAG,UAAU,CAAC,GAAd,EAAsB,CAC/F,OAAQ,6GADuF,CAAtB,EAEtE,8BAFsE,CAA7E,CAE2C,8EAF3C,CADF,CA3ZK,CAAP,CAiaD,CAED,CACAI,UAAU,CAACI,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'transitions',\n\ttitle: 'Measuring Page Transitions with Scripts',\n\tsidebar_label: 'Page Transitions',\n\tdescription: 'Use Sauce Performance in an automation scripts to test page load performance during typical interaction with your app.'\n};\nexport const metadata = {\n  \"unversionedId\": \"performance/transitions\",\n  \"id\": \"performance/transitions\",\n  \"isDocsHomePage\": false,\n  \"title\": \"Measuring Page Transitions with Scripts\",\n  \"description\": \"Use Sauce Performance in an automation scripts to test page load performance during typical interaction with your app.\",\n  \"source\": \"@site/docs/performance/transitions.md\",\n  \"slug\": \"/performance/transitions\",\n  \"permalink\": \"/performance/transitions\",\n  \"editUrl\": \"https://github.com/saucelabs/sauce-docs/edit/master/docs/performance/transitions.md\",\n  \"version\": \"current\",\n  \"lastUpdatedBy\": \"Author\",\n  \"lastUpdatedAt\": 1539502055,\n  \"sidebar_label\": \"Page Transitions\",\n  \"sidebar\": \"someSidebar\",\n  \"previous\": {\n    \"title\": \"Collecting Single URL Performance Statistics\",\n    \"permalink\": \"/performance/one-page\"\n  },\n  \"next\": {\n    \"title\": \"Measuring On-Page Motion Effects\",\n    \"permalink\": \"/performance/motion\"\n  }\n};\n  /* @jsxRuntime classic */\n/* @jsx mdx */\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nexport const toc = [{\n  value: 'What You&#39;ll Learn',\n  id: 'what-youll-learn',\n  children: [{\n    value: 'What You&#39;ll Need',\n    id: 'what-youll-need',\n    children: []\n  }]\n}, {\n  value: 'Setting Performance Capabilities',\n  id: 'setting-performance-capabilities',\n  children: []\n}, {\n  value: 'Implementing the Performance Command Assertion',\n  id: 'implementing-the-performance-command-assertion',\n  children: [{\n    value: 'Command',\n    id: 'command',\n    children: []\n  }, {\n    value: 'Arguments',\n    id: 'arguments',\n    children: []\n  }, {\n    value: 'Script Examples',\n    id: 'script-examples',\n    children: []\n  }]\n}, {\n  value: 'Target Specific URLs in a Script',\n  id: 'target-specific-urls-in-a-script',\n  children: [{\n    value: 'Example',\n    id: 'example',\n    children: []\n  }]\n}, {\n  value: 'Defining a Performance Budget',\n  id: 'defining-a-performance-budget',\n  children: []\n}, {\n  value: 'Handling Regressions',\n  id: 'handling-regressions',\n  children: []\n}, {\n  value: 'Logging Performance Results',\n  id: 'logging-performance-results',\n  children: []\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Capturing page load performance for a specific URL is a great start to detect opportunities to improve performance, but some performance testing requires user interaction to facilitate, such as page load following a successful login or submission of a form. The Sauce Labs custom WebDriver command allows you to trigger performance capturing within an automation script at a precise point of interaction, ensuring you can isolate any issues related to the current application state.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`NOTE:`}</strong>{` Using automation to test performance after targeted interaction with your application in no way implies that you should integrate performance testing in your existing functional test suite. Testing function and performance in the same test is likely to result in compromised results for both objectives and can obscure failure troubleshooting.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"what-youll-learn\"\n    }}>{`What You'll Learn`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`How to enable performance in your automation script`}</li>\n      <li parentName=\"ul\">{`How to measure performance as the automation runs`}</li>\n      <li parentName=\"ul\">{`How to detect regressions`}</li>\n      <li parentName=\"ul\">{`How to write the performance results to a log`}</li>\n      <li parentName=\"ul\">{`How to view your results`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"what-youll-need\"\n    }}>{`What You'll Need`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Google Chrome (no older than 3 versions from latest) as the test browser`}</li>\n      <li parentName=\"ul\">{`SAUCE_USERNAME and SAUCE_ACCESS_KEY defined for your environment`}</li>\n      <li parentName=\"ul\">{`An automation script that performs the interaction with your app during which you want to measure performance`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"setting-performance-capabilities\"\n    }}>{`Setting Performance Capabilities`}</h2>\n    <p>{`Before you configure your script to capture performance metrics as it executes, you must update your capabilities configuration file to enable performance actions. To do this, set the `}<inlineCode parentName=\"p\">{`extendedDebugging`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`capturePerformance`}</inlineCode>{` sauce:options attributes to `}<inlineCode parentName=\"p\">{`True`}</inlineCode>{`. The following excerpts show you the Webdriver.io `}<inlineCode parentName=\"p\">{`sauce:options`}</inlineCode>{` code samples for a variety of supported languages.`}</p>\n    <Tabs defaultValue=\"python\" values={[{\n      label: 'Python',\n      value: 'python'\n    }, {\n      label: 'JavaScript',\n      value: 'js'\n    }, {\n      label: 'Ruby',\n      value: 'ruby'\n    }]} mdxType=\"Tabs\">\n      <TabItem value=\"python\" mdxType=\"TabItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-py\",\n            \"metastring\": \"{8,9}\",\n            \"{8,9}\": true\n          }}>{`def driver(request):\n    sauceOptions = {\n        \"screenResolution\": \"1280x768\",\n        \"platformName\": \"Windows 10\",\n        \"browserVersion\": \"61.0\",\n        \"seleniumVersion\": \"3.11.0\",\n        'name': 'Pytest Chrome W3C Sample',\n        'extendedDebugging': 'true',\n        'capturePerformance': 'true'\n    }\n    chromeOpts =  {\n        'platformName':\"Windows 10\",\n        'browserName': \"chrome\",\n        'browserVersion': '61.0',\n        'goog:chromeOptions': {'w3c': True},\n        'sauce:options': sauceOptions\n    }\n`}</code></pre>\n      </TabItem>\n      <TabItem value=\"js\" mdxType=\"TabItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-js\",\n            \"metastring\": \"{5,6}\",\n            \"{5,6}\": true\n          }}>{`const {config} = require('./wdio.shared.conf');\nconst defaultBrowserSauceOptions = {\n    build: \\`WebdriverIO-V6 Front-End Performance-\\${new Date().getTime()}\\`,\n    name: \\`WebdriverIO-V6 Front-End Performance-\\${new Date().getTime()}\\`,\n    extendedDebugging: true,\n    capturePerformance: true,\n};\n`}</code></pre>\n      </TabItem>\n      <TabItem value=\"ruby\" mdxType=\"TabItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-ruby\",\n            \"metastring\": \"{10,11}\",\n            \"{10,11}\": true\n          }}>{`browser_name = ENV['BROWSER_NAME'] || 'chrome'\n\noptions = {browser_name: browser_name,\n           platform_name: ENV['PLATFORM_NAME'] || 'Windows 10',\n           browser_version: ENV['BROWSER_VERSION'] || 'latest',\n           'sauce:options': {name: \"#{scenario.feature.name} - #{scenario.name}\",\n                             build: build_name,\n                             username: ENV['SAUCE_USERNAME'],\n                             access_key: ENV['SAUCE_ACCESS_KEY'],\n                             extended_debugging: true,\n                             capture_performance: true }}\n`}</code></pre>\n      </TabItem>\n    </Tabs>\n    <h2 {...{\n      \"id\": \"implementing-the-performance-command-assertion\"\n    }}>{`Implementing the Performance Command Assertion`}</h2>\n    <p>{`The custom `}<inlineCode parentName=\"p\">{`sauce:performance`}</inlineCode>{` command measures the performance output against a baseline of previously accepted performance values. If no baseline has been set, the Performance test will create one by measuring performance output 10 times to get an aggregate baseline. The command returns `}<inlineCode parentName=\"p\">{`pass`}</inlineCode>{` when the current results are within the baseline allowances or `}<inlineCode parentName=\"p\">{`fail`}</inlineCode>{` when the results fall outside the baseline. A fail result gives you the option to handle `}<a parentName=\"p\" {...{\n        \"href\": \"#handle-regressions\"\n      }}>{`regressions`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"command\"\n    }}>{`Command`}</h3>\n    <p><inlineCode parentName=\"p\">{`sauce:performance`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"arguments\"\n    }}>{`Arguments`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Argument`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`name`}</inlineCode><br /><font size=\"2\">{`Required`}</font></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`A name of the test as it would appear in the Sauce Labs application.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`metrics`}</inlineCode><br /><font size=\"2\">{`Optional`}</font></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Specifies one or more specific metrics you want to assert. If not specified, the test defaults to score, which automatically tests all metrics that currently make up a Lighthouse Performance Score.`}<br />{`See `}<a parentName=\"td\" {...{\n              \"href\": \"/performance/one-page#metric-values\"\n            }}>{`Metric Values`}</a>{` for the list of supported metric values.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"script-examples\"\n    }}>{`Script Examples`}</h3>\n    <p>{`The following samples are excerpts from the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/saucelabs-training\"\n      }}>{`Sauce Labs Demo`}</a>{` repo, where you can find code samples for many test scenarios in our supported languages. These samples show the `}<inlineCode parentName=\"p\">{`sauce:performance`}</inlineCode>{` assertion used in a Selenium test script.`}</p>\n    <Tabs defaultValue=\"python\" values={[{\n      label: 'Python',\n      value: 'python'\n    }, {\n      label: 'JavaScript',\n      value: 'js'\n    }]} mdxType=\"Tabs\">\n      <TabItem value=\"python\" mdxType=\"TabItem\">\n        <p>{`See the complete `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/saucelabs-training/demo-python\"\n          }}>{`Python performance demo`}</a>{`.`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-py\"\n          }}>{`def test_performance_firstInteractive(self, driver, request):\n      self.setUpClass(driver)\n      performance = driver.execute_script(\"sauce:performance\", {\n                                          \"name\": request.node.name, \"metrics\": [\"firstInteractive\"]})\n      if(performance[\"result\"] != \"pass\"):\n          assert performance[\"details\"][\"firstInteractive\"][\"actual \"] < 5000\n      else:\n          assert performance[\"result\"] == \"pass\"\n`}</code></pre>\n      </TabItem>\n      <TabItem value=\"js\" mdxType=\"TabItem\">\n        <p>{`See the complete `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/saucelabs-training/demo-js/tree/master/webdriverio/web/examples/performance\"\n          }}>{`JavaScript performance demo`}</a>{`.`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`describe('Sauce Labs Front-End Performance', () => {\n  beforeEach(() => {\n    //\n    // Adding extra logs to the Sauce Commands Dashboard\n    browser.execute('sauce:context=########## Start beforeEach ##########');\n    //\n    // Now load the url and wait for it to be displayed\n    browser.url('');\n\n    //\n    // Adding extra logs to the Sauce Commands Dashboard\n    browser.execute('sauce:context=########## End beforeEach ##########');\n  });\n\n  afterEach(() => {\n    //\n    // Adding extra logs to the Sauce Commands Dashboard\n    browser.execute('sauce:context=########## Enf of test ##########');\n  });\n\n  it('logs (sauce:performance) should check if all metrics were captured', () => {\n    //\n    // The expected metrics\n    const metrics = [\n      'load',\n      'speedIndex',\n      'firstInteractive',\n      'firstVisualChange',\n      'lastVisualChange',\n      'firstMeaningfulPaint',\n      'firstCPUIdle',\n      'timeToFirstByte',\n      'firstPaint',\n      'estimatedInputLatency',\n      'firstContentfulPaint',\n      'totalBlockingTime',\n      'score',\n      'domContentLoaded',\n      'cumulativeLayoutShift',\n      'serverResponseTime',\n      'largestContentfulPaint',\n    ];\n    //\n    // Get the performance logs\n    const performance = browser.execute('sauce:log', {type: 'sauce:performance'});\n\n    //\n    // Verify that all logs have been captured\n    metrics.forEach(metric => expect(metric in performance, \\`\\${metric} metric is missing\\`));\n  });\n\n  it('(sauce:performance) should validate speedIndex', () => {\n    //\n    // Get the performance logs\n    const performance = browser.execute('sauce:log', {type: 'sauce:performance'});\n\n    //\n    // Verify that all logs have been captured\n    expect(performance.speedIndex < 1000, \\`\\${performance.speedIndex} is equal or bigger than 100\\`);\n  });\n});\n`}</code></pre>\n      </TabItem>\n    </Tabs>\n    <h2 {...{\n      \"id\": \"target-specific-urls-in-a-script\"\n    }}>{`Target Specific URLs in a Script`}</h2>\n    <p>{`You can use the `}<inlineCode parentName=\"p\">{`sauce:performanceDisable`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`sauce:performanceEnable`}</inlineCode>{` commands to limit the collection of performance metrics to specific URL pages. Implementing these pauses in metrics collection allows you to bypass navigational pages such as login so your tests are faster and more efficient, and your performance results are more relevant.`}</p>\n    <h3 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\",\n        \"metastring\": \"title=\\\"JS Performance Pause Sample\\\"\",\n        \"title\": \"\\\"JS\",\n        \"Performance\": true,\n        \"Pause\": true,\n        \"Sample\\\"\": true\n      }}>{`\nbrowser.execute('sauce:performanceDisable')\nbrowser.url('https://www.json.org/json-en.html')\nbrowser.execute('sauce:performanceEnable')\nbrowser.url('https://example.com')\n`}</code></pre>\n    <p>{`In the preceding example, performance metrics will only be collected for `}<inlineCode parentName=\"p\">{`https://example.com`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"defining-a-performance-budget\"\n    }}>{`Defining a Performance Budget`}</h2>\n    <p>{`Rather than letting a baseline determine the acceptable metric values for your pages, you can define your own metric value limits for individual pages in your app and then assert against those values to ensure your performance results are always within the range that your deem optimal.`}</p>\n    <p>{`First, create a separate file in which you define your target metric limits, as in the following example.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\",\n        \"metastring\": \"title=\\\"budget.json\\\"\",\n        \"title\": \"\\\"budget.json\\\"\"\n      }}>{`{\n  \"https://saucelabs.com/\": {\n    \"speedIndex\": 2300,\n    \"lastVisualChange\": 2200,\n    \"load\": 4200\n  },\n  \"https://saucelabs.com/platform/analytics-performance/sauce-performance\": {\n    \"score\": 0.78\n  }\n}\n`}</code></pre>\n    <p>{`Then, import your budget file in your test script and assert your performance call against the values in your budget, as shown in the following sample.`}</p>\n    {\n      /*\n      > <font color=\"pink\">**Nancy:** Would be great if we could get at least a Python code sample, for consistency.</font>\n      */\n    }\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\",\n        \"metastring\": \"{1,9,19,11}\",\n        \"{1,9,19,11}\": true\n      }}>{`const budgets = require('./budget.json')\n\nfor (const [url, budget] of Object.entries(budgets)) {\n    await browser.url(url)\n    const performanceLogs = await browser.execute(\n        'sauce:log',\n        { type: 'sauce:performance' })\n\n    for (const [metric, value] of Object.keys(budget)) {\n        assert.ok(performanceLogs[metric] < value\n            \\`metric \\${metric} is over the performance budget\\`)\n    }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"handling-regressions\"\n    }}>{`Handling Regressions`}</h2>\n    <p>{`When one or more metric evaluations fail because the result falls outside the established baseline, it is considered a regression and the tester has an option to either troubleshoot and resolve the source of the regression to get the test back into the baseline range or `}<a parentName=\"p\" {...{\n        \"href\": \"/performance/analyze#reset-baselines-for-a-failed-test\"\n      }}>{`update the baseline`}</a>{` with the new performance values. If new baselines are accepted, the command will measure performance against those new values until another regression is detected, when you will again have the option to troubleshoot or update the baselines.`}</p>\n    <p>{`Since the command can be called throughout the test script, create tests that check for performance regressions across core business flows and screens. For example, evaluate pages that load following a successful login event or require multiple steps to trigger.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`NOTE:`}</strong>{` `}<inlineCode parentName=\"p\">{`sauce:performance`}</inlineCode>{` is only aware of the performance metrics of the get URL command that was called before it and not able to capture metrics for views that were navigated via webdriver actions (e.g button clicks). In this example, the custom command returns performance metrics for the \\``}<inlineCode parentName=\"p\">{`/inventory.html`}</inlineCode>{` URL.`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{}}>{`describe('Performance Demo Test', function () {\n    const { title } = this;\n\n    it('Asserts for regressions on the inventory page', () => {\n        // log into the app\n        browser.url('https://www.saucedemo.com');\n        const username = $('[data-test=\"username\"]');\n        username.setValue('standard_user');\n        const password = $('[data-test=\"password\"]');\n        password.setValue('secret_sauce');\n        const loginButton = $('.login-button');\n        loginButton.click();\n        browser.url('/inventory.html');\n        // assert performance of pageLoad has not regressed.\n        const performanceOutput = browser.execute('sauce:performance', {\n        name: title,\n        metrics: ['load'] });\n        assert.equal(performanceOutput.result, 'pass', performanceOutput.reason);\n    });\n});\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"sample-response\"\n    }}>{`Sample Response`}</h4>\n    <p>{`The following response is returned when the Page Load metric is above the expected baseline.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`\"reason\": \"Metrics [load] are significantly out of the baseline\",\n\"result\": \"fail\",\n\"details\": {\n \"load\": {\n   \"actual\": 12178,\n   \"lowerLimit\": 813.6839391929948,\n   \"upperLimit\": 2910.759098781689\n }\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"logging-performance-results\"\n    }}>{`Logging Performance Results`}</h2>\n    <p>{`If you would rather send your performance results to a log instead of asserting on them in your test, configure the `}<inlineCode parentName=\"p\">{`sauce:performance`}</inlineCode>{` command to export to a log file, as shown in the following code samples:`}</p>\n    <Tabs defaultValue=\"python\" values={[{\n      label: 'Python',\n      value: 'python'\n    }, {\n      label: 'JavaScript',\n      value: 'js'\n    }]} mdxType=\"Tabs\">\n      <TabItem value=\"python\" mdxType=\"TabItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-py\",\n            \"metastring\": \"{5}\",\n            \"{5}\": true\n          }}>{`def test_speed_index(self, driver):\n    self.setUpClass(driver)\n    metrics = [\"load\", \"speedIndex\", \"pageWeight\", \"pageWeightEncoded\", \"timeToFirstByte\",\n               \"timeToFirstInteractive\", \"firstContentfulPaint\", \"perceptualSpeedIndex\", \"domContentLoaded\"]\n    performance = driver.execute_script(\"sauce:log\", {\"type\": \"sauce:performance\"})\n    for metric in metrics:\n        assert performance[\"speedIndex\"] < 1000\n`}</code></pre>\n      </TabItem>\n      <TabItem value=\"js\" mdxType=\"TabItem\">\n        <p>{`See the complete `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/saucelabs-training/demo-js\"\n          }}>{`JavaScript performance demo`}</a>{`.`}</p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-js\",\n            \"metastring\": \"{1}\",\n            \"{1}\": true\n          }}>{`it('logs (sauce:performance) should check if all metrics were captured', () => {\n    //\n    // The expected metrics\n    const metrics = [\n      'load',\n      'speedIndex',\n      'firstInteractive',\n      'firstVisualChange',\n      'lastVisualChange',\n      'firstMeaningfulPaint',\n      'firstCPUIdle',\n      'timeToFirstByte',\n      'firstPaint',\n      'estimatedInputLatency',\n      'firstContentfulPaint',\n      'totalBlockingTime',\n      'score',\n      'domContentLoaded',\n      'cumulativeLayoutShift',\n      'serverResponseTime',\n      'largestContentfulPaint',\n    ];\n    //\n`}</code></pre>\n      </TabItem>\n    </Tabs>\n    <p>{`Retrieve the log by calling:`}</p>\n    <p><inlineCode parentName=\"p\">{`driver.execute('sauce:log', {type: 'sauce:performance'});`}</inlineCode></p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`NOTE:`}</strong>{` See `}<a parentName=\"p\" {...{\n          \"href\": \"https://wiki.saucelabs.com/display/DOCS/Custom+Sauce+Labs+WebDriver+Extensions+for+Network+and+Log+Commands\"\n        }}>{`Custom Sauce Labs Extensions`}</a>{` for additional network and logging options enabled with extended debugging.`}</p>\n    </blockquote>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}