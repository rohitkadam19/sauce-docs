{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{105:function(e,t,a){\"use strict\";a.r(t),a.d(t,\"frontMatter\",(function(){return s})),a.d(t,\"metadata\",(function(){return c})),a.d(t,\"toc\",(function(){return d})),a.d(t,\"default\",(function(){return m}));var n=a(3),i=a(8),r=(a(0),a(222)),o=a(223),l=a.n(o),s=(a(228),a(229),{id:\"real-device-testing\",title:\"Real Device Testing with Espresso and XCUITest\",sidebar_label:\"Real Device Testing\"}),c={unversionedId:\"mobile-apps/automated-testing/espresso-xcuitest/real-device-testing\",id:\"mobile-apps/automated-testing/espresso-xcuitest/real-device-testing\",isDocsHomePage:!1,title:\"Real Device Testing with Espresso and XCUITest\",description:\"Espresso and XCUITest real device testing is supported on TestObject, our Legacy Real Device Cloud Platform, which you can access via Sauce Apps > Legacy RDC.\",source:\"@site/docs/mobile-apps/automated-testing/espresso-xcuitest/real-device-testing.md\",slug:\"/mobile-apps/automated-testing/espresso-xcuitest/real-device-testing\",permalink:\"/mobile-apps/automated-testing/espresso-xcuitest/real-device-testing\",editUrl:\"https://github.com/saucelabs/sauce-docs/edit/master/docs/mobile-apps/automated-testing/espresso-xcuitest/real-device-testing.md\",version:\"current\",lastUpdatedBy:\"Kim\",lastUpdatedAt:1613123011,sidebar_label:\"Real Device Testing\",sidebar:\"someSidebar\",previous:{title:\"Mobile App Testing with Espresso and XCUITest\",permalink:\"/mobile-apps/automated-testing/espresso-xcuitest\"},next:{title:\"Virtual Device Testing with Espresso\",permalink:\"/mobile-apps/automated-testing/espresso-xcuitest/virtual-device-testing\"}},d=[{value:\"What You&#39;ll Need\",id:\"what-youll-need\",children:[]},{value:\"System Requirements\",id:\"system-requirements\",children:[]},{value:\"Download\",id:\"download\",children:[]},{value:\"Configuration\",id:\"configuration\",children:[]},{value:\"Using Espresso\",id:\"using-espresso\",children:[]},{value:\"Using XCUITest\",id:\"using-xcuitest\",children:[{value:\"Creating an .ipa File\",id:\"creating-an-ipa-file\",children:[]},{value:\"iOS Apps\",id:\"ios-apps\",children:[]},{value:\"Building an .ipa File\",id:\"building-an-ipa-file\",children:[]},{value:\"XCUITest Test Package\",id:\"xcuitest-test-package\",children:[]},{value:\"Configuring Test Files for Sauce Runner\",id:\"configuring-test-files-for-sauce-runner\",children:[]},{value:\"Executing Your Test\",id:\"executing-your-test\",children:[]}]}],p={toc:d};function m(e){var t=e.components,a=Object(i.default)(e,[\"components\"]);return Object(r.mdx)(\"wrapper\",Object(n.default)({},p,a,{components:t,mdxType:\"MDXLayout\"}),Object(r.mdx)(\"div\",{className:\"admonition admonition-warning alert alert--danger\"},Object(r.mdx)(\"div\",Object(n.default)({parentName:\"div\"},{className:\"admonition-heading\"}),Object(r.mdx)(\"h5\",{parentName:\"div\"},Object(r.mdx)(\"span\",Object(n.default)({parentName:\"h5\"},{className:\"admonition-icon\"}),Object(r.mdx)(\"svg\",Object(n.default)({parentName:\"span\"},{xmlns:\"http://www.w3.org/2000/svg\",width:\"12\",height:\"16\",viewBox:\"0 0 12 16\"}),Object(r.mdx)(\"path\",Object(n.default)({parentName:\"svg\"},{fillRule:\"evenodd\",d:\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"})))),\"Only Available in TestObject\")),Object(r.mdx)(\"div\",Object(n.default)({parentName:\"div\"},{className:\"admonition-content\"}),Object(r.mdx)(\"p\",{parentName:\"div\"},\"Espresso and XCUITest real device testing is supported on TestObject, our \",Object(r.mdx)(\"a\",Object(n.default)({parentName:\"p\"},{href:\"https://wiki.saucelabs.com/pages/viewpage.action?pageId=102721177\"}),\"Legacy Real Device Cloud Platform\"),\", which you can access via \",Object(r.mdx)(\"strong\",{parentName:\"p\"},\"Sauce Apps\"),\" > \",Object(r.mdx)(\"strong\",{parentName:\"p\"},\"Legacy RDC\"),\".\"),Object(r.mdx)(\"p\",{parentName:\"div\"},\"In early 2021, support will be moving from TestObject to Sauce Labs. See \",Object(r.mdx)(\"a\",Object(n.default)({parentName:\"p\"},{href:\"https://wiki.saucelabs.com/display/DOCS/Real+Device+Testing+in+Sauce+Labs+Feature+Preview\"}),\"Real Device Testing in Sauce Labs Feature Preview\"),\" for more information.\"))),Object(r.mdx)(\"p\",null,\"Automated testing is included in the two most common integrated development environments (IDEs) used for making mobile apps:\"),Object(r.mdx)(\"ul\",null,Object(r.mdx)(\"li\",{parentName:\"ul\"},\"Android Studio, published by Google, provides automated testing capability by way of Espresso\"),Object(r.mdx)(\"li\",{parentName:\"ul\"},\"XCode, the standard development environment for creating Apple iOS apps, uses XCUITest\")),Object(r.mdx)(\"p\",null,\"Our Sauce Runner for Real Devices test runner enables you to integrate Espresso and XCUITest with Sauce Labs real device testing. Leverage the power of our 2,000+ Android and iOS devices to run mobile app user interface (UI) tests, accelerate test execution with parallel testing, and gain immediate insight with test reporting comprised of video, screenshots, and logs.\"),Object(r.mdx)(\"h2\",{id:\"what-youll-need\"},\"What You'll Need\"),Object(r.mdx)(\"p\",null,\"To get started, you'll need to download and configure Sauce Runner for Real Devices, which is parameterized for use in your CI/CD environments. When you launch a test, the runner authenticates access to Espresso and XCUITest testing using the API key inside runner file. Finally, it validates your mobile app and test files before uploading to our real device cloud.\"),Object(r.mdx)(\"ul\",null,Object(r.mdx)(\"li\",{parentName:\"ul\"},\"The mobile app file (.ipa for iOS; .apk for Android) for both your app and tests\"),Object(r.mdx)(\"li\",{parentName:\"ul\"},\"Set up your mobile app testing project (see \",Object(r.mdx)(\"a\",Object(n.default)({parentName:\"li\"},{href:\"https://wiki.saucelabs.com/pages/viewpage.action?pageId=92677287\"}),\"Application and Project Management for Real Devices\"),\")\")),Object(r.mdx)(\"h2\",{id:\"system-requirements\"},\"System Requirements\"),Object(r.mdx)(\"p\",null,\"Minimum requirements for installing Sauce Runner for Real Devices:\"),Object(r.mdx)(\"ul\",null,Object(r.mdx)(\"li\",{parentName:\"ul\"},\"Java 8 or later installed on your local machine\")),Object(r.mdx)(\"h2\",{id:\"download\"},\"Download\"),Object(r.mdx)(\"p\",null,\"Click here below to download the Sauce Runner for Real Devices .jar file.\"),Object(r.mdx)(\"p\",null,Object(r.mdx)(\"button\",{class:\"badge-download\"},Object(r.mdx)(\"a\",{href:\"https://s3.amazonaws.com/saucelabs-runner/v1.9/runner.jar\"},\"Download\"))),Object(r.mdx)(\"h2\",{id:\"configuration\"},\"Configuration\"),Object(r.mdx)(\"p\",null,\"Here's how to configure Sauce Runner for Real Devices with Espresso and XCUITest.\"),Object(r.mdx)(\"ol\",null,Object(r.mdx)(\"li\",{parentName:\"ol\"},\"Choose one of the following commands to add to your code:\")),Object(r.mdx)(\"ul\",null,Object(r.mdx)(\"li\",{parentName:\"ul\"},Object(r.mdx)(\"p\",{parentName:\"li\"},Object(r.mdx)(\"inlineCode\",{parentName:\"p\"},\"xcuitest\"),\" Defines XCUITest as the test framework to use for your native iOS app tests\")),Object(r.mdx)(\"li\",{parentName:\"ul\"},Object(r.mdx)(\"p\",{parentName:\"li\"},Object(r.mdx)(\"inlineCode\",{parentName:\"p\"},\"espresso\"),\" Defines Espresso as the test framework to use for your native Android app tests\"))),Object(r.mdx)(\"ol\",{start:2},Object(r.mdx)(\"li\",{parentName:\"ol\"},\"Choose one of the following ways to set your test parameters:\")),Object(r.mdx)(\"ul\",null,Object(r.mdx)(\"li\",{parentName:\"ul\"},Object(r.mdx)(\"p\",{parentName:\"li\"},Object(r.mdx)(\"strong\",{parentName:\"p\"},\"Using the command line interface\"),\": Sauce Runner for Real Devices will execute tests based on the parameters you set in the file. First, you'll need to add the \",Object(r.mdx)(\"inlineCode\",{parentName:\"p\"},\"config\"),\" command to your code. The config command only accepts two parameters: \",Object(r.mdx)(\"inlineCode\",{parentName:\"p\"},\"--path <path to config.yml>\"),\" and \",Object(r.mdx)(\"inlineCode\",{parentName:\"p\"},\"--apikey <apikey>\"),\". See the full list at \",Object(r.mdx)(\"a\",Object(n.default)({parentName:\"p\"},{href:\"/dev/cli/espresso-xcuitest\"}),\"Sauce Runner for Real Devices command line options\"),\". Here's an example:\"),Object(r.mdx)(\"pre\",{parentName:\"li\"},Object(r.mdx)(\"code\",Object(n.default)({parentName:\"pre\"},{className:\"language-js\"}),\"JAVA_HOME=$(/usr/libexec/java_home --version 8) java -jar runner.jar config --path <path to config.yml> --apikey <apikey>\\n\"))),Object(r.mdx)(\"li\",{parentName:\"ul\"},Object(r.mdx)(\"p\",{parentName:\"li\"},Object(r.mdx)(\"strong\",{parentName:\"p\"},\"Create a YAML configuration file\"),\": see \",Object(r.mdx)(\"a\",Object(n.default)({parentName:\"p\"},{href:\"/mobile-apps/automated-testing/espresso-xcuitest/example-configurations\"}),\"Example Configurations\")))),Object(r.mdx)(\"h2\",{id:\"using-espresso\"},\"Using Espresso\"),Object(r.mdx)(\"p\",null,\"There are two ways you can run Espresso and UI Automator tests against Sauce Labs real devices:\"),Object(r.mdx)(\"ul\",null,Object(r.mdx)(\"li\",{parentName:\"ul\"},\"By using our test runner, which is parameterized for use in CI/CD environment\"),Object(r.mdx)(\"li\",{parentName:\"ul\"},\"By using our \",Object(r.mdx)(\"a\",Object(n.default)({parentName:\"li\"},{href:\"https://app.saucelabs.com\"}),\"web interface\"))),Object(r.mdx)(\"h2\",{id:\"using-xcuitest\"},\"Using XCUITest\"),Object(r.mdx)(\"h3\",{id:\"creating-an-ipa-file\"},\"Creating an .ipa File\"),Object(r.mdx)(\"p\",null,\"Learn how to create an .ipa file using self-signed application files and .app files with our XCUITest test runner.\"),Object(r.mdx)(\"div\",{className:\"admonition admonition-tip alert alert--success\"},Object(r.mdx)(\"div\",Object(n.default)({parentName:\"div\"},{className:\"admonition-heading\"}),Object(r.mdx)(\"h5\",{parentName:\"div\"},Object(r.mdx)(\"span\",Object(n.default)({parentName:\"h5\"},{className:\"admonition-icon\"}),Object(r.mdx)(\"svg\",Object(n.default)({parentName:\"span\"},{xmlns:\"http://www.w3.org/2000/svg\",width:\"12\",height:\"16\",viewBox:\"0 0 12 16\"}),Object(r.mdx)(\"path\",Object(n.default)({parentName:\"svg\"},{fillRule:\"evenodd\",d:\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"})))),\"tip\")),Object(r.mdx)(\"div\",Object(n.default)({parentName:\"div\"},{className:\"admonition-content\"}),Object(r.mdx)(\"p\",{parentName:\"div\"},\"If you need to maintain your own provisioning profile in the .ipa file, you should disable the \",Object(r.mdx)(\"strong\",{parentName:\"p\"},\"App Resigning\"),\" option when you set the Device Settings for your app in the cloud.\"),Object(r.mdx)(\"p\",{parentName:\"div\"},\"You can also use the Appium capability \",Object(r.mdx)(\"inlineCode\",{parentName:\"p\"},\"resigningEnabled=false\"),\" to disable app resigning. This option is available for private devices only.\"))),Object(r.mdx)(\"div\",{className:\"admonition admonition-tip alert alert--success\"},Object(r.mdx)(\"div\",Object(n.default)({parentName:\"div\"},{className:\"admonition-heading\"}),Object(r.mdx)(\"h5\",{parentName:\"div\"},Object(r.mdx)(\"span\",Object(n.default)({parentName:\"h5\"},{className:\"admonition-icon\"}),Object(r.mdx)(\"svg\",Object(n.default)({parentName:\"span\"},{xmlns:\"http://www.w3.org/2000/svg\",width:\"12\",height:\"16\",viewBox:\"0 0 12 16\"}),Object(r.mdx)(\"path\",Object(n.default)({parentName:\"svg\"},{fillRule:\"evenodd\",d:\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"})))),\"tip\")),Object(r.mdx)(\"div\",Object(n.default)({parentName:\"div\"},{className:\"admonition-content\"}),Object(r.mdx)(\"p\",{parentName:\"div\"},\"Our XCUITest test runner accepts both .app and .ipa file formats for the \",Object(r.mdx)(\"inlineCode\",{parentName:\"p\"},\"--app\"),\" and \",Object(r.mdx)(\"inlineCode\",{parentName:\"p\"},\"--test\"),\" parameters.\"))),Object(r.mdx)(\"h3\",{id:\"ios-apps\"},\"iOS Apps\"),Object(r.mdx)(\"p\",null,\"All of the build types listed below are supported, since we use a resigning process to embed our own provisioning profile into the uploaded .ipa file. With our own profile in place, the app will be allowed to install and launch on the cloud devices. The functionality of the app itself remains completely unmodified.\"),Object(r.mdx)(\"p\",null,\"You can also use .ipa files generated by build tools outside of Xcode.\"),Object(r.mdx)(\"h4\",{id:\"building-an-app-bundle\"},\"Building an .app Bundle\"),Object(r.mdx)(\"ol\",null,Object(r.mdx)(\"li\",{parentName:\"ol\"},\"Open your application project in Xcode.\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"Select your product's device target:\",Object(r.mdx)(\"ol\",{parentName:\"li\"},Object(r.mdx)(\"li\",{parentName:\"ol\"},\"On an RDC: Select \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Generic iOS Device\"),\".\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"On a simulator: Select any available simulator.\"))),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"In the \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Product\"),\" menu, select \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Clean\"),\".\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"In the \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Product\"),\" menu, select \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Build\"),\".\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"Navigate to your Xcode project's \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Products\"),\" directory and find the generated \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\".app\"),\" file.\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"Create an empty directory with the name \",Object(r.mdx)(\"inlineCode\",{parentName:\"li\"},\"Payload\"),\".\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"Move the \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\".app\"),\" file inside the Payload directory.\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"Compress the \",Object(r.mdx)(\"inlineCode\",{parentName:\"li\"},\"Payload\"),\" directory into an archive (.zip file) and give it a new name with .ipa appended to the end of the file name.\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"The .ipa file is now ready for upload to Sauce Labs.\")),Object(r.mdx)(\"h3\",{id:\"building-an-ipa-file\"},\"Building an .ipa File\"),Object(r.mdx)(\"p\",null,\"You can use any of the existing methods of distribution for your iOS app, except for the \",Object(r.mdx)(\"strong\",{parentName:\"p\"},\"App Store\"),\" type. This means that you can choose any of the three other export methods: \",Object(r.mdx)(\"strong\",{parentName:\"p\"},\"Ad Hoc\"),\", \",Object(r.mdx)(\"strong\",{parentName:\"p\"},\"Enterprise\"),\", or \",Object(r.mdx)(\"strong\",{parentName:\"p\"},\"Development\"),\".\"),Object(r.mdx)(\"ol\",null,Object(r.mdx)(\"li\",{parentName:\"ol\"},\"Open your app project in Xcode.\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"Select \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Generic iOS Device\"),\" as your project's device target.\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"In the \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Product\"),\" menu, select \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Clean\"),\".\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"In the \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Product\"),\" menu, select \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Archive\"),\". When the archiving process completes, you'll see your app listed under \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Archives\"),\".\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"Select your app and click \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Export\"),\".\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"When prompted for an export method, select \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Ad Hoc, Enterprise\"),\" or \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Development\"),\".\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"Set these \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Distribution\"),\" options:\",Object(r.mdx)(\"ol\",{parentName:\"li\"},Object(r.mdx)(\"li\",{parentName:\"ol\"},\"App Thinning: None.\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"Clear the selection \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Rebuild from Bitcode\"),\".\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Strip Swift symbols\"),\" is optional.\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"Clear the selection \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Include manifest for over-the-air installation\"),\".\"))),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"Select your \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Distribution Certificate\"),\" and \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Provisioning Profile\"),\" (\",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Automatic\"),\" or \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Manual\"),\"). This will generate the .ipa file.\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"When the file generation process completes, click \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Export\"),\" and choose where to save the .ipa file.\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"This .ipa file is now ready for upload to Sauce Labs.\")),Object(r.mdx)(\"h3\",{id:\"xcuitest-test-package\"},\"XCUITest Test Package\"),Object(r.mdx)(\"h4\",{id:\"-runnerapp\"},\"-Runner.app\"),Object(r.mdx)(\"ol\",null,Object(r.mdx)(\"li\",{parentName:\"ol\"},\"Open your application project in Xcode.\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"Select \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Generic iOS Device\"),\" as your project's device target.\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"Make sure that the your UI tests are part of a \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Target Membership\"),\" and that those Targets are selected to be built in your Xcode \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Build scheme\"),\". \",Object(r.mdx)(\"em\",{parentName:\"li\"},'Targets containing UI Tests are typically selected to be built at the \"Test\" build action.'),Object(r.mdx)(\"img\",{src:l()(\"img/xcuitest/xcode-build.png\"),alt:\"Xcode Build Options\",width:\"800\"}))),Object(r.mdx)(\"ol\",{start:4},Object(r.mdx)(\"li\",{parentName:\"ol\"},\"Launch the \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Build\"),\" action, which is set to generate your test packages.\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"Navigate to your Xcode project's \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"Products\"),\" directory and find the generated \",Object(r.mdx)(\"strong\",{parentName:\"li\"},\"-Runner.app\"),\" files.\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"The -Runner.app files are ready to be used in the \",Object(r.mdx)(\"inlineCode\",{parentName:\"li\"},\"--test\"),\" parameter of our XCUI test runner.\")),Object(r.mdx)(\"h4\",{id:\"ipa-optional\"},\".ipa (Optional)\"),Object(r.mdx)(\"ol\",null,Object(r.mdx)(\"li\",{parentName:\"ol\"},\"Create an empty directory name \",Object(r.mdx)(\"inlineCode\",{parentName:\"li\"},\"Payload\"),\".\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"Move the -Runner.app to the \",Object(r.mdx)(\"inlineCode\",{parentName:\"li\"},\"Payload\"),\" directory.\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"Compress the Payload directory into an archive (.zip file) and give it a new name with .ipa file format ending.\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},\"The .ipa file is ready to be used in the \",Object(r.mdx)(\"inlineCode\",{parentName:\"li\"},\"--test\"),\" parameter of our XCUITest test runner.\")),Object(r.mdx)(\"h3\",{id:\"configuring-test-files-for-sauce-runner\"},\"Configuring Test Files for Sauce Runner\"),Object(r.mdx)(\"p\",null,\"Once you've written your iOS app test in ObjectiveC/Swift, you'll need to build it as an .ipa file for use with Sauce Runner for Real Devices. For instructions, see \",Object(r.mdx)(\"a\",Object(n.default)({parentName:\"p\"},{href:\"https://wiki.saucelabs.com/pages/viewpage.action?pageId=67767691\"}),\"Creating an .ipa File\"),\".\"),Object(r.mdx)(\"p\",null,\"Under \",Object(r.mdx)(\"strong\",{parentName:\"p\"},\"iOS Deployment Target\"),\", ensure that you set the same iOS version for both the app and your test runner. If these don't match, your tests will run locally, but fail when you run them against Sauce Labs real devices. From your Xcode \",Object(r.mdx)(\"strong\",{parentName:\"p\"},\"Build Settings\"),\":\"),Object(r.mdx)(\"ol\",null,Object(r.mdx)(\"li\",{parentName:\"ol\"},Object(r.mdx)(\"p\",{parentName:\"li\"},Object(r.mdx)(\"strong\",{parentName:\"p\"},\"Select Your App Project\"),\": Select the Project you want to build, and under \",Object(r.mdx)(\"strong\",{parentName:\"p\"},\"Build Settings\"),\", set the iOS Deployment Target to the iOS operating system version you want to use in your test. All target outputs of this project, including the application and your test runner, will be set to the same operating system version.\")),Object(r.mdx)(\"li\",{parentName:\"ol\"},Object(r.mdx)(\"p\",{parentName:\"li\"},Object(r.mdx)(\"strong\",{parentName:\"p\"},\"Select Your App Target\"),\": Select the \",Object(r.mdx)(\"strong\",{parentName:\"p\"},\"Target\"),\" for your Project, and under \",Object(r.mdx)(\"strong\",{parentName:\"p\"},\"Build Settings\"),\", set the \",Object(r.mdx)(\"strong\",{parentName:\"p\"},\"iOS Deployment Target\"),\" to the iOS operating system version you want to use in your test. This will also overwrite the Build Settings at the Project level to that operating system version, so if you use this method, be aware that your Targets can become out of sync with each other and the Project settings, and your tests will break. If you change the iOS version for one target output, you may want to build the Project again to make sure all your targets are in sync.\"))),Object(r.mdx)(\"h3\",{id:\"executing-your-test\"},\"Executing Your Test\"),Object(r.mdx)(\"p\",null,\"Load and execute your .ipa file on the real mobile device, along with the app you're testing.\"),Object(r.mdx)(\"p\",null,Object(r.mdx)(\"strong\",{parentName:\"p\"},\"NOTE\"),\": The maximum execution time for a single XCUITest test is one hour. As a best practice, we recommend designing your tests as \",Object(r.mdx)(\"a\",Object(n.default)({parentName:\"p\"},{href:\"https://wiki.saucelabs.com/pages/viewpage.action?pageId=48365933\"}),\"small, atomic, autonomous\"),\", and setting maximum execution times in minutes or seconds, so you can get the most efficiency for your builds.\"))}m.isMDXComponent=!0},222:function(e,t,a){\"use strict\";a.r(t),a.d(t,\"MDXContext\",(function(){return d})),a.d(t,\"MDXProvider\",(function(){return u})),a.d(t,\"mdx\",(function(){return O})),a.d(t,\"useMDXComponents\",(function(){return m})),a.d(t,\"withMDXComponents\",(function(){return p}));var n=a(0),i=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var d=i.a.createContext({}),p=function(e){return function(t){var a=m(t.components);return i.a.createElement(e,o({},t,{components:a}))}},m=function(e){var t=i.a.useContext(d),a=t;return e&&(a=\"function\"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=m(e.components);return i.a.createElement(d.Provider,{value:t},e.children)},b={inlineCode:\"code\",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},f=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,l=c(e,[\"components\",\"mdxType\",\"originalType\",\"parentName\"]),d=m(a),p=n,u=d[\"\".concat(o,\".\").concat(p)]||d[p]||b[p]||r;return a?i.a.createElement(u,s(s({ref:t},l),{},{components:a})):i.a.createElement(u,s({ref:t},l))}));function O(e,t){var a=arguments,n=t&&t.mdxType;if(\"string\"==typeof e||n){var r=a.length,o=new Array(r);o[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType=\"string\"==typeof e?e:n,o[1]=l;for(var c=2;c<r;c++)o[c]=a[c];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,a)}f.displayName=\"MDXCreateElement\"},223:function(e,t,a){\"use strict\";var n=a(4);Object.defineProperty(t,\"__esModule\",{value:!0}),t.useBaseUrlUtils=o,t.default=function(e,t){void 0===t&&(t={});return(0,o().withBaseUrl)(e,t)};var i=n(a(29)),r=a(224);function o(){var e=(0,i.default)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,a=void 0===t?\"/\":t,n=e.url;return{withBaseUrl:function(e,t){return function(e,t,a,n){var i=void 0===n?{}:n,o=i.forcePrependBaseUrl,l=void 0!==o&&o,s=i.absolute,c=void 0!==s&&s;if(!a)return a;if(a.startsWith(\"#\"))return a;if((0,r.hasProtocol)(a))return a;if(l)return t+a;var d=a.startsWith(t)?a:t+a.replace(/^\\//,\"\");return c?e+d:d}(n,a,e,t)}}}},224:function(e,t,a){\"use strict\";function n(e){return!0===/^(\\w*:|\\/\\/)/.test(e)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.hasProtocol=n,t.default=function(e){return void 0!==e&&!n(e)}},225:function(e,t,a){\"use strict\";function n(e){var t,a,i=\"\";if(\"string\"==typeof e||\"number\"==typeof e)i+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(i&&(i+=\" \"),i+=a);else for(t in e)e[t]&&(i&&(i+=\" \"),i+=t);return i}a.r(t),t.default=function(){for(var e,t,a=0,i=\"\";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(i&&(i+=\" \"),i+=t);return i}},226:function(e,t,a){\"use strict\";var n=a(4);Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var i=a(0),r=n(a(227));var o=function(){var e=(0,i.useContext)(r.default);if(null==e)throw new Error(\"`useUserPreferencesContext` is used outside of `Layout` Component.\");return e};t.default=o},227:function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var n=(0,a(0).createContext)(void 0);t.default=n},228:function(e,t,a){\"use strict\";var n=a(4),i=a(30);Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var r=i(a(0)),o=n(a(226)),l=n(a(225)),s=n(a(199)),c=37,d=39;var p=function(e){var t=e.lazy,a=e.block,n=e.defaultValue,i=e.values,p=e.groupId,m=e.className,u=(0,o.default)(),b=u.tabGroupChoices,f=u.setTabGroupChoices,O=(0,r.useState)(n),g=O[0],h=O[1],j=r.Children.toArray(e.children);if(null!=p){var x=b[p];null!=x&&x!==g&&i.some((function(e){return e.value===x}))&&h(x)}var v=function(e){h(e),null!=p&&f(p,e)},y=[];return r.default.createElement(\"div\",null,r.default.createElement(\"ul\",{role:\"tablist\",\"aria-orientation\":\"horizontal\",className:(0,l.default)(\"tabs\",{\"tabs--block\":a},m)},i.map((function(e){var t=e.value,a=e.label;return r.default.createElement(\"li\",{role:\"tab\",tabIndex:0,\"aria-selected\":g===t,className:(0,l.default)(\"tabs__item\",s.default.tabItem,{\"tabs__item--active\":g===t}),key:t,ref:function(e){return y.push(e)},onKeyDown:function(e){!function(e,t,a){switch(a.keyCode){case d:!function(e,t){var a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()}(e,t);break;case c:!function(e,t){var a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()}(e,t)}}(y,e.target,e)},onFocus:function(){return v(t)},onClick:function(){v(t)}},a)}))),t?(0,r.cloneElement)(j.filter((function(e){return e.props.value===g}))[0],{className:\"margin-vert--md\"}):r.default.createElement(\"div\",{className:\"margin-vert--md\"},j.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==g})}))))};t.default=p},229:function(e,t,a){\"use strict\";var n=a(4);Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var i=n(a(3)),r=n(a(0));var o=function(e){var t=e.children,a=e.hidden,n=e.className;return r.default.createElement(\"div\",(0,i.default)({role:\"tabpanel\"},{hidden:a,className:n}),t)};t.default=o}}]);","name":"8fd5d51e.033c5563.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[73],{\n\n/***/ 105:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"frontMatter\", function() { return frontMatter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"metadata\", function() { return metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toc\", function() { return toc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MDXContent; });\n/* harmony import */ var _Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);\n/* harmony import */ var _Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(222);\n/* harmony import */ var _docusaurus_useBaseUrl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(223);\n/* harmony import */ var _docusaurus_useBaseUrl__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_docusaurus_useBaseUrl__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _theme_Tabs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(228);\n/* harmony import */ var _theme_Tabs__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_theme_Tabs__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _theme_TabItem__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(229);\n/* harmony import */ var _theme_TabItem__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_theme_TabItem__WEBPACK_IMPORTED_MODULE_6__);\nvar frontMatter={id:'real-device-testing',title:'Real Device Testing with Espresso and XCUITest',sidebar_label:'Real Device Testing'};var metadata={\"unversionedId\":\"mobile-apps/automated-testing/espresso-xcuitest/real-device-testing\",\"id\":\"mobile-apps/automated-testing/espresso-xcuitest/real-device-testing\",\"isDocsHomePage\":false,\"title\":\"Real Device Testing with Espresso and XCUITest\",\"description\":\"Espresso and XCUITest real device testing is supported on TestObject, our Legacy Real Device Cloud Platform, which you can access via Sauce Apps > Legacy RDC.\",\"source\":\"@site/docs/mobile-apps/automated-testing/espresso-xcuitest/real-device-testing.md\",\"slug\":\"/mobile-apps/automated-testing/espresso-xcuitest/real-device-testing\",\"permalink\":\"/mobile-apps/automated-testing/espresso-xcuitest/real-device-testing\",\"editUrl\":\"https://github.com/saucelabs/sauce-docs/edit/master/docs/mobile-apps/automated-testing/espresso-xcuitest/real-device-testing.md\",\"version\":\"current\",\"lastUpdatedBy\":\"Kim\",\"lastUpdatedAt\":1613123011,\"sidebar_label\":\"Real Device Testing\",\"sidebar\":\"someSidebar\",\"previous\":{\"title\":\"Mobile App Testing with Espresso and XCUITest\",\"permalink\":\"/mobile-apps/automated-testing/espresso-xcuitest\"},\"next\":{\"title\":\"Virtual Device Testing with Espresso\",\"permalink\":\"/mobile-apps/automated-testing/espresso-xcuitest/virtual-device-testing\"}};/* @jsxRuntime classic */ /* @jsx mdx */var toc=[{value:'What You&#39;ll Need',id:'what-youll-need',children:[]},{value:'System Requirements',id:'system-requirements',children:[]},{value:'Download',id:'download',children:[]},{value:'Configuration',id:'configuration',children:[]},{value:'Using Espresso',id:'using-espresso',children:[]},{value:'Using XCUITest',id:'using-xcuitest',children:[{value:'Creating an .ipa File',id:'creating-an-ipa-file',children:[]},{value:'iOS Apps',id:'ios-apps',children:[]},{value:'Building an .ipa File',id:'building-an-ipa-file',children:[]},{value:'XCUITest Test Package',id:'xcuitest-test-package',children:[]},{value:'Configuring Test Files for Sauce Runner',id:'configuring-test-files-for-sauce-runner',children:[]},{value:'Executing Your Test',id:'executing-your-test',children:[]}]}];var layoutProps={toc:toc};var MDXLayout=\"wrapper\";function MDXContent(_ref){var components=_ref.components,props=Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_ref,[\"components\"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(MDXLayout,Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({},layoutProps,props,{components:components,mdxType:\"MDXLayout\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"div\",{\"className\":\"admonition admonition-warning alert alert--danger\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"div\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"div\"},{\"className\":\"admonition-heading\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h5\",{parentName:\"div\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"span\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"h5\"},{\"className\":\"admonition-icon\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"svg\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"span\"},{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"12\",\"height\":\"16\",\"viewBox\":\"0 0 12 16\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"path\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"svg\"},{\"fillRule\":\"evenodd\",\"d\":\"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z\"})))),\"Only Available in TestObject\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"div\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"div\"},{\"className\":\"admonition-content\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",{parentName:\"div\"},\"Espresso and XCUITest real device testing is supported on TestObject, our \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"https://wiki.saucelabs.com/pages/viewpage.action?pageId=102721177\"}),\"Legacy Real Device Cloud Platform\"),\", which you can access via \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"Sauce Apps\"),\" > \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"Legacy RDC\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",{parentName:\"div\"},\"In early 2021, support will be moving from TestObject to Sauce Labs. See \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"https://wiki.saucelabs.com/display/DOCS/Real+Device+Testing+in+Sauce+Labs+Feature+Preview\"}),\"Real Device Testing in Sauce Labs Feature Preview\"),\" for more information.\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Automated testing is included in the two most common integrated development environments (IDEs) used for making mobile apps:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"Android Studio, published by Google, provides automated testing capability by way of Espresso\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"XCode, the standard development environment for creating Apple iOS apps, uses XCUITest\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Our Sauce Runner for Real Devices test runner enables you to integrate Espresso and XCUITest with Sauce Labs real device testing. Leverage the power of our 2,000+ Android and iOS devices to run mobile app user interface (UI) tests, accelerate test execution with parallel testing, and gain immediate insight with test reporting comprised of video, screenshots, and logs.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\",{\"id\":\"what-youll-need\"},\"What You'll Need\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"To get started, you'll need to download and configure Sauce Runner for Real Devices, which is parameterized for use in your CI/CD environments. When you launch a test, the runner authenticates access to Espresso and XCUITest testing using the API key inside runner file. Finally, it validates your mobile app and test files before uploading to our real device cloud.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"The mobile app file (.ipa for iOS; .apk for Android) for both your app and tests\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"Set up your mobile app testing project (see \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"li\"},{\"href\":\"https://wiki.saucelabs.com/pages/viewpage.action?pageId=92677287\"}),\"Application and Project Management for Real Devices\"),\")\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\",{\"id\":\"system-requirements\"},\"System Requirements\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Minimum requirements for installing Sauce Runner for Real Devices:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"Java 8 or later installed on your local machine\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\",{\"id\":\"download\"},\"Download\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Click here below to download the Sauce Runner for Real Devices .jar file.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"button\",{class:\"badge-download\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",{href:\"https://s3.amazonaws.com/saucelabs-runner/v1.9/runner.jar\"},\"Download\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\",{\"id\":\"configuration\"},\"Configuration\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Here's how to configure Sauce Runner for Real Devices with Espresso and XCUITest.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ol\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Choose one of the following commands to add to your code:\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"p\"},\"xcuitest\"),\" Defines XCUITest as the test framework to use for your native iOS app tests\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"p\"},\"espresso\"),\" Defines Espresso as the test framework to use for your native Android app tests\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ol\",{\"start\":2},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Choose one of the following ways to set your test parameters:\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"Using the command line interface\"),\": Sauce Runner for Real Devices will execute tests based on the parameters you set in the file. First, you'll need to add the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"p\"},\"config\"),\" command to your code. The config command only accepts two parameters: \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"p\"},\"--path <path to config.yml>\"),\" and \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"p\"},\"--apikey <apikey>\"),\". See the full list at \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"/dev/cli/espresso-xcuitest\"}),\"Sauce Runner for Real Devices command line options\"),\". Here's an example:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"pre\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"code\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"pre\"},{\"className\":\"language-js\"}),\"JAVA_HOME=$(/usr/libexec/java_home --version 8) java -jar runner.jar config --path <path to config.yml> --apikey <apikey>\\n\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"Create a YAML configuration file\"),\": see \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"/mobile-apps/automated-testing/espresso-xcuitest/example-configurations\"}),\"Example Configurations\")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\",{\"id\":\"using-espresso\"},\"Using Espresso\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"There are two ways you can run Espresso and UI Automator tests against Sauce Labs real devices:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"By using our test runner, which is parameterized for use in CI/CD environment\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"By using our \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"li\"},{\"href\":\"https://app.saucelabs.com\"}),\"web interface\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\",{\"id\":\"using-xcuitest\"},\"Using XCUITest\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h3\",{\"id\":\"creating-an-ipa-file\"},\"Creating an .ipa File\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Learn how to create an .ipa file using self-signed application files and .app files with our XCUITest test runner.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"div\",{\"className\":\"admonition admonition-tip alert alert--success\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"div\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"div\"},{\"className\":\"admonition-heading\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h5\",{parentName:\"div\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"span\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"h5\"},{\"className\":\"admonition-icon\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"svg\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"span\"},{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"12\",\"height\":\"16\",\"viewBox\":\"0 0 12 16\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"path\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"svg\"},{\"fillRule\":\"evenodd\",\"d\":\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"})))),\"tip\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"div\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"div\"},{\"className\":\"admonition-content\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",{parentName:\"div\"},\"If you need to maintain your own provisioning profile in the .ipa file, you should disable the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"App Resigning\"),\" option when you set the Device Settings for your app in the cloud.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",{parentName:\"div\"},\"You can also use the Appium capability \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"p\"},\"resigningEnabled=false\"),\" to disable app resigning. This option is available for private devices only.\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"div\",{\"className\":\"admonition admonition-tip alert alert--success\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"div\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"div\"},{\"className\":\"admonition-heading\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h5\",{parentName:\"div\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"span\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"h5\"},{\"className\":\"admonition-icon\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"svg\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"span\"},{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"12\",\"height\":\"16\",\"viewBox\":\"0 0 12 16\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"path\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"svg\"},{\"fillRule\":\"evenodd\",\"d\":\"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"})))),\"tip\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"div\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"div\"},{\"className\":\"admonition-content\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",{parentName:\"div\"},\"Our XCUITest test runner accepts both .app and .ipa file formats for the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"p\"},\"--app\"),\" and \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"p\"},\"--test\"),\" parameters.\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h3\",{\"id\":\"ios-apps\"},\"iOS Apps\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"All of the build types listed below are supported, since we use a resigning process to embed our own provisioning profile into the uploaded .ipa file. With our own profile in place, the app will be allowed to install and launch on the cloud devices. The functionality of the app itself remains completely unmodified.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"You can also use .ipa files generated by build tools outside of Xcode.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h4\",{\"id\":\"building-an-app-bundle\"},\"Building an .app Bundle\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ol\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Open your application project in Xcode.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Select your product's device target:\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ol\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"On an RDC: Select \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Generic iOS Device\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"On a simulator: Select any available simulator.\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"In the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Product\"),\" menu, select \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Clean\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"In the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Product\"),\" menu, select \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Build\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Navigate to your Xcode project's \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Products\"),\" directory and find the generated \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\".app\"),\" file.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Create an empty directory with the name \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"li\"},\"Payload\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Move the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\".app\"),\" file inside the Payload directory.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Compress the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"li\"},\"Payload\"),\" directory into an archive (.zip file) and give it a new name with .ipa appended to the end of the file name.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"The .ipa file is now ready for upload to Sauce Labs.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h3\",{\"id\":\"building-an-ipa-file\"},\"Building an .ipa File\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"You can use any of the existing methods of distribution for your iOS app, except for the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"App Store\"),\" type. This means that you can choose any of the three other export methods: \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"Ad Hoc\"),\", \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"Enterprise\"),\", or \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"Development\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ol\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Open your app project in Xcode.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Select \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Generic iOS Device\"),\" as your project's device target.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"In the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Product\"),\" menu, select \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Clean\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"In the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Product\"),\" menu, select \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Archive\"),\". When the archiving process completes, you'll see your app listed under \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Archives\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Select your app and click \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Export\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"When prompted for an export method, select \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Ad Hoc, Enterprise\"),\" or \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Development\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Set these \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Distribution\"),\" options:\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ol\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"App Thinning: None.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Clear the selection \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Rebuild from Bitcode\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Strip Swift symbols\"),\" is optional.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Clear the selection \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Include manifest for over-the-air installation\"),\".\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Select your \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Distribution Certificate\"),\" and \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Provisioning Profile\"),\" (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Automatic\"),\" or \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Manual\"),\"). This will generate the .ipa file.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"When the file generation process completes, click \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Export\"),\" and choose where to save the .ipa file.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"This .ipa file is now ready for upload to Sauce Labs.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h3\",{\"id\":\"xcuitest-test-package\"},\"XCUITest Test Package\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h4\",{\"id\":\"-runnerapp\"},\"-Runner.app\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ol\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Open your application project in Xcode.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Select \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Generic iOS Device\"),\" as your project's device target.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Make sure that the your UI tests are part of a \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Target Membership\"),\" and that those Targets are selected to be built in your Xcode \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Build scheme\"),\". \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"em\",{parentName:\"li\"},\"Targets containing UI Tests are typically selected to be built at the \\\"Test\\\" build action.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"img\",{src:_docusaurus_useBaseUrl__WEBPACK_IMPORTED_MODULE_4___default()('img/xcuitest/xcode-build.png'),alt:\"Xcode Build Options\",width:\"800\"}))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ol\",{\"start\":4},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Launch the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Build\"),\" action, which is set to generate your test packages.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Navigate to your Xcode project's \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Products\"),\" directory and find the generated \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"-Runner.app\"),\" files.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"The -Runner.app files are ready to be used in the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"li\"},\"--test\"),\" parameter of our XCUI test runner.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h4\",{\"id\":\"ipa-optional\"},\".ipa (Optional)\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ol\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Create an empty directory name \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"li\"},\"Payload\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Move the -Runner.app to the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"li\"},\"Payload\"),\" directory.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Compress the Payload directory into an archive (.zip file) and give it a new name with .ipa file format ending.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"The .ipa file is ready to be used in the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"li\"},\"--test\"),\" parameter of our XCUITest test runner.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h3\",{\"id\":\"configuring-test-files-for-sauce-runner\"},\"Configuring Test Files for Sauce Runner\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Once you've written your iOS app test in ObjectiveC/Swift, you'll need to build it as an .ipa file for use with Sauce Runner for Real Devices. For instructions, see \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"https://wiki.saucelabs.com/pages/viewpage.action?pageId=67767691\"}),\"Creating an .ipa File\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Under \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"iOS Deployment Target\"),\", ensure that you set the same iOS version for both the app and your test runner. If these don't match, your tests will run locally, but fail when you run them against Sauce Labs real devices. From your Xcode \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"Build Settings\"),\":\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ol\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"Select Your App Project\"),\": Select the Project you want to build, and under \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"Build Settings\"),\", set the iOS Deployment Target to the iOS operating system version you want to use in your test. All target outputs of this project, including the application and your test runner, will be set to the same operating system version.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"Select Your App Target\"),\": Select the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"Target\"),\" for your Project, and under \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"Build Settings\"),\", set the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"iOS Deployment Target\"),\" to the iOS operating system version you want to use in your test. This will also overwrite the Build Settings at the Project level to that operating system version, so if you use this method, be aware that your Targets can become out of sync with each other and the Project settings, and your tests will break. If you change the iOS version for one target output, you may want to build the Project again to make sure all your targets are in sync.\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h3\",{\"id\":\"executing-your-test\"},\"Executing Your Test\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Load and execute your .ipa file on the real mobile device, along with the app you're testing.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"NOTE\"),\": The maximum execution time for a single XCUITest test is one hour. As a best practice, we recommend designing your tests as \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"https://wiki.saucelabs.com/pages/viewpage.action?pageId=48365933\"}),\"small, atomic, autonomous\"),\", and setting maximum execution times in minutes or seconds, so you can get the most efficiency for your builds.\"));};MDXContent.isMDXComponent=true;\n\n/***/ }),\n\n/***/ 222:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDXContext\", function() { return MDXContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDXProvider\", function() { return MDXProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mdx\", function() { return createElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useMDXComponents\", function() { return useMDXComponents; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withMDXComponents\", function() { return withMDXComponents; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = react__WEBPACK_IMPORTED_MODULE_0___default.a.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, createElementArgArray);\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, args);\n}\n\n\n\n\n/***/ }),\n\n/***/ 223:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar _interopRequireDefault=__webpack_require__(4);Object.defineProperty(exports,\"__esModule\",{value:true});exports.useBaseUrlUtils=useBaseUrlUtils;exports.default=useBaseUrl;var _useDocusaurusContext4=_interopRequireDefault(__webpack_require__(29));var _isInternalUrl=__webpack_require__(224);/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */function addBaseUrl(siteUrl,baseUrl,url,_temp){var _ref=_temp===void 0?{}:_temp,_ref$forcePrependBase=_ref.forcePrependBaseUrl,forcePrependBaseUrl=_ref$forcePrependBase===void 0?false:_ref$forcePrependBase,_ref$absolute=_ref.absolute,absolute=_ref$absolute===void 0?false:_ref$absolute;if(!url){return url;}// it never makes sense to add a base url to a local anchor url\nif(url.startsWith('#')){return url;}// it never makes sense to add a base url to an url with a protocol\nif((0,_isInternalUrl.hasProtocol)(url)){return url;}if(forcePrependBaseUrl){return baseUrl+url;}// We should avoid adding the baseurl twice if it's already there\nvar shouldAddBaseUrl=!url.startsWith(baseUrl);var basePath=shouldAddBaseUrl?baseUrl+url.replace(/^\\//,''):url;return absolute?siteUrl+basePath:basePath;}function useBaseUrlUtils(){var _useDocusaurusContext=(0,_useDocusaurusContext4.default)(),_useDocusaurusContext2=_useDocusaurusContext.siteConfig;_useDocusaurusContext2=_useDocusaurusContext2===void 0?{}:_useDocusaurusContext2;var _useDocusaurusContext3=_useDocusaurusContext2.baseUrl,baseUrl=_useDocusaurusContext3===void 0?'/':_useDocusaurusContext3,siteUrl=_useDocusaurusContext2.url;return{withBaseUrl:function withBaseUrl(url,options){return addBaseUrl(siteUrl,baseUrl,url,options);}};}function useBaseUrl(url,options){if(options===void 0){options={};}var _useBaseUrlUtils=useBaseUrlUtils(),withBaseUrl=_useBaseUrlUtils.withBaseUrl;return withBaseUrl(url,options);}\n\n/***/ }),\n\n/***/ 224:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.hasProtocol=hasProtocol;exports.default=isInternalUrl;/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */function hasProtocol(url){return /^(\\w*:|\\/\\/)/.test(url)===true;}function isInternalUrl(url){return typeof url!=='undefined'&&!hasProtocol(url);}\n\n/***/ }),\n\n/***/ 225:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\nfunction toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n});\n\n\n/***/ }),\n\n/***/ 226:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar _interopRequireDefault=__webpack_require__(4);Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _react=__webpack_require__(0);var _UserPreferencesContext=_interopRequireDefault(__webpack_require__(227));/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */function useUserPreferencesContext(){var context=(0,_react.useContext)(_UserPreferencesContext.default);if(context==null){throw new Error('`useUserPreferencesContext` is used outside of `Layout` Component.');}return context;}var _default=useUserPreferencesContext;exports.default=_default;\n\n/***/ }),\n\n/***/ 227:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _react=__webpack_require__(0);/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */var UserPreferencesContext=/*#__PURE__*/(0,_react.createContext)(undefined);var _default=UserPreferencesContext;exports.default=_default;\n\n/***/ }),\n\n/***/ 228:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar _interopRequireDefault=__webpack_require__(4);var _interopRequireWildcard=__webpack_require__(30);Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _react=_interopRequireWildcard(__webpack_require__(0));var _useUserPreferencesContext=_interopRequireDefault(__webpack_require__(226));var _clsx=_interopRequireDefault(__webpack_require__(225));var _stylesModule=_interopRequireDefault(__webpack_require__(199));/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */var keys={left:37,right:39};function Tabs(props){var lazy=props.lazy,block=props.block,defaultValue=props.defaultValue,values=props.values,groupId=props.groupId,className=props.className;var _useUserPreferencesCo=(0,_useUserPreferencesContext.default)(),tabGroupChoices=_useUserPreferencesCo.tabGroupChoices,setTabGroupChoices=_useUserPreferencesCo.setTabGroupChoices;var _useState=(0,_react.useState)(defaultValue),selectedValue=_useState[0],setSelectedValue=_useState[1];var children=_react.Children.toArray(props.children);if(groupId!=null){var relevantTabGroupChoice=tabGroupChoices[groupId];if(relevantTabGroupChoice!=null&&relevantTabGroupChoice!==selectedValue&&values.some(function(value){return value.value===relevantTabGroupChoice;})){setSelectedValue(relevantTabGroupChoice);}}var changeSelectedValue=function changeSelectedValue(newValue){setSelectedValue(newValue);if(groupId!=null){setTabGroupChoices(groupId,newValue);}};var tabRefs=[];var focusNextTab=function focusNextTab(tabs,target){var next=tabs.indexOf(target)+1;if(!tabs[next]){tabs[0].focus();}else{tabs[next].focus();}};var focusPreviousTab=function focusPreviousTab(tabs,target){var prev=tabs.indexOf(target)-1;if(!tabs[prev]){tabs[tabs.length-1].focus();}else{tabs[prev].focus();}};var handleKeydown=function handleKeydown(tabs,target,event){switch(event.keyCode){case keys.right:focusNextTab(tabs,target);break;case keys.left:focusPreviousTab(tabs,target);break;default:break;}};return/*#__PURE__*/_react.default.createElement(\"div\",null,/*#__PURE__*/_react.default.createElement(\"ul\",{role:\"tablist\",\"aria-orientation\":\"horizontal\",className:(0,_clsx.default)('tabs',{'tabs--block':block},className)},values.map(function(_ref){var value=_ref.value,label=_ref.label;return/*#__PURE__*/_react.default.createElement(\"li\",{role:\"tab\",tabIndex:0,\"aria-selected\":selectedValue===value,className:(0,_clsx.default)('tabs__item',_stylesModule.default.tabItem,{'tabs__item--active':selectedValue===value}),key:value,ref:function ref(tabControl){return tabRefs.push(tabControl);},onKeyDown:function onKeyDown(event){handleKeydown(tabRefs,event.target,event);},onFocus:function onFocus(){return changeSelectedValue(value);},onClick:function onClick(){changeSelectedValue(value);}},label);})),lazy?/*#__PURE__*/(0,_react.cloneElement)(children.filter(function(tabItem){return tabItem.props.value===selectedValue;})[0],{className:'margin-vert--md'}):/*#__PURE__*/_react.default.createElement(\"div\",{className:\"margin-vert--md\"},children.map(function(tabItem,i){return/*#__PURE__*/(0,_react.cloneElement)(tabItem,{key:i,hidden:tabItem.props.value!==selectedValue});})));}var _default=Tabs;exports.default=_default;\n\n/***/ }),\n\n/***/ 229:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar _interopRequireDefault=__webpack_require__(4);Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(__webpack_require__(3));var _react=_interopRequireDefault(__webpack_require__(0));/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */function TabItem(_ref){var children=_ref.children,hidden=_ref.hidden,className=_ref.className;return/*#__PURE__*/_react.default.createElement(\"div\",(0,_extends2.default)({role:\"tabpanel\"},{hidden:hidden,className:className}),children);}var _default=TabItem;exports.default=_default;\n\n/***/ })\n\n}]);","inputSourceMap":null}