{"remainingRequest":"/Users/nancysweeney/GH/sauce-docs/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/nancysweeney/GH/sauce-docs/docs/mobile-apps/automated-testing/espresso-xcuitest/real-devices.md","dependencies":[{"path":"/Users/nancysweeney/GH/sauce-docs/docs/mobile-apps/automated-testing/espresso-xcuitest/real-devices.md","mtime":1614024697406},{"path":"/Users/nancysweeney/GH/sauce-docs/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-mobile-apps-automated-testing-espresso-xcuitest-real-devices-md-516.json","mtime":1614090150577},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/cache-loader/dist/cjs.js","mtime":1602877854626},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/babel-loader/lib/index.js","mtime":1605895626604},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1613152382570},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1613152382276}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/nancysweeney/GH/sauce-docs/docs/mobile-apps/automated-testing/espresso-xcuitest/real-devices.md"],"names":["React","mdx","frontMatter","id","title","sidebar_label","metadata","useBaseUrl","Tabs","TabItem","toc","value","children","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"wGACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,CAC5BC,EAAE,CAAE,cADwB,CAE5BC,KAAK,CAAE,gDAFqB,CAG5BC,aAAa,CAAE,cAHa,CAApB,CAKT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,gBAAiB,8DADK,CAEtB,KAAM,8DAFgB,CAGtB,iBAAkB,KAHI,CAItB,QAAS,gDAJa,CAKtB,cAAe,mLALO,CAMtB,SAAU,4EANY,CAOtB,OAAQ,+DAPc,CAQtB,YAAa,+DARS,CAStB,UAAW,0HATW,CAUtB,UAAW,SAVW,CAWtB,gBAAiB,QAXK,CAYtB,gBAAiB,UAZK,CAatB,gBAAiB,cAbK,CActB,UAAW,aAdW,CAetB,WAAY,CACV,QAAS,+CADC,CAEV,YAAa,kDAFH,CAfU,CAmBtB,OAAQ,CACN,QAAS,sCADH,CAEN,YAAa,kEAFP,CAnBc,CAAjB,CAwBL,yB,CACF,cACA,MAAOC,CAAAA,UAAP,KAAuB,wBAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,gBAApB,CACA,MAAO,MAAMC,CAAAA,GAAG,CAAG,CAAC,CAClBC,KAAK,CAAE,sBADW,CAElBR,EAAE,CAAE,iBAFc,CAGlBS,QAAQ,CAAE,EAHQ,CAAD,CAIhB,CACDD,KAAK,CAAE,qBADN,CAEDR,EAAE,CAAE,qBAFH,CAGDS,QAAQ,CAAE,EAHT,CAJgB,CAQhB,CACDD,KAAK,CAAE,UADN,CAEDR,EAAE,CAAE,UAFH,CAGDS,QAAQ,CAAE,EAHT,CARgB,CAYhB,CACDD,KAAK,CAAE,kBADN,CAEDR,EAAE,CAAE,kBAFH,CAGDS,QAAQ,CAAE,CAAC,CACTD,KAAK,CAAE,UADE,CAETR,EAAE,CAAE,UAFK,CAGTS,QAAQ,CAAE,EAHD,CAAD,CAIP,CACDD,KAAK,CAAE,UADN,CAEDR,EAAE,CAAE,UAFH,CAGDS,QAAQ,CAAE,EAHT,CAJO,CAHT,CAZgB,CAwBhB,CACDD,KAAK,CAAE,sBADN,CAEDR,EAAE,CAAE,sBAFH,CAGDS,QAAQ,CAAE,CAAC,CACTD,KAAK,CAAE,kCADE,CAETR,EAAE,CAAE,kCAFK,CAGTS,QAAQ,CAAE,EAHD,CAAD,CAIP,CACDD,KAAK,CAAE,iCADN,CAEDR,EAAE,CAAE,iCAFH,CAGDS,QAAQ,CAAE,EAHT,CAJO,CAHT,CAxBgB,CAoChB,CACDD,KAAK,CAAE,yBADN,CAEDR,EAAE,CAAE,yBAFH,CAGDS,QAAQ,CAAE,EAHT,CApCgB,CAwChB,CACDD,KAAK,CAAE,qBADN,CAEDR,EAAE,CAAE,qBAFH,CAGDS,QAAQ,CAAE,EAHT,CAxCgB,CA4ChB,CACDD,KAAK,CAAE,6DADN,CAEDR,EAAE,CAAE,6DAFH,CAGDS,QAAQ,CAAE,EAHT,CA5CgB,CAgDhB,CACDD,KAAK,CAAE,sBADN,CAEDR,EAAE,CAAE,sBAFH,CAGDS,QAAQ,CAAE,EAHT,CAhDgB,CAAZ,CAsDP,KAAMC,CAAAA,WAAW,CAAG,CAClBH,GADkB,CAApB,CAGA,KAAMI,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGC,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeJ,WAAf,CAAgCI,KAAhC,EAAuC,UAAU,CAAED,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAGL,UAAS,CACP,YAAa,oDADN,CAAT,CAEG,oBAAK,UAAU,CAAC,KAAhB,EAA0B,CACzB,YAAa,oBADY,CAA1B,EAEE,UAAI,UAAU,CAAC,KAAf,EAAqB,qBAAM,UAAU,CAAC,IAAjB,EAA0B,CAC5C,YAAa,iBAD+B,CAA1B,EAEjB,oBAAK,UAAU,CAAC,MAAhB,EAA2B,CAC1B,QAAS,4BADiB,CAE1B,QAAS,IAFiB,CAG1B,SAAU,IAHgB,CAI1B,UAAW,WAJe,CAA3B,EAKE,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC1B,WAAY,SADc,CAE1B,IAAK,uPAFqB,CAA3B,EALF,CAFiB,CAArB,CAU4B,cAAQ,UAAU,CAAC,IAAnB,EAA0B,8BAA1B,CAV5B,CAFF,CAFH,CAc6G,oBAAK,UAAU,CAAC,KAAhB,EAA0B,CACnI,YAAa,oBADsH,CAA1B,EAExG,SAAG,UAAU,CAAC,KAAd,EAAsB,+FAAtB,CAAqH,kBAAG,UAAU,CAAC,GAAd,EAAsB,CACxI,OAAQ,mEADgI,CAAtB,EAE/G,mCAF+G,CAArH,CAE+C,6BAF/C,CAE4E,cAAQ,UAAU,CAAC,GAAnB,EAAyB,YAAzB,CAF5E,CAE4H,KAF5H,CAEiI,cAAQ,UAAU,CAAC,GAAnB,EAAyB,YAAzB,CAFjI,CAEiL,GAFjL,CAFwG,CAIgF,SAAG,UAAU,CAAC,KAAd,EAAsB,6FAAtB,CAAmH,kBAAG,UAAU,CAAC,GAAd,EAAsB,CAC9T,OAAQ,2FADsT,CAAtB,EAErS,mDAFqS,CAAnH,CAEzH,wBAFyH,CAJhF,CAd7G,CAHK,CAwBL,aAAK,8HAAL,CAxBK,CAyBL,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,gGAAtB,CADF,CAEE,UAAI,UAAU,CAAC,IAAf,EAAsB,yFAAtB,CAFF,CAzBK,CA6BL,aAAK,oXAAL,CA7BK,CA8BL,SAAQ,CACN,KAAM,iBADA,CAAR,CAEK,kBAFL,CA9BK,CAiCL,aAAK,6KAAL,CAjCK,CAkCL,aAAK,gOAAL,CAlCK,CAmCL,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,kFAAtB,CADF,CAEE,UAAI,UAAU,CAAC,IAAf,EAAsB,8CAAtB,CAAoE,kBAAG,UAAU,CAAC,IAAd,EAAuB,CACvF,OAAQ,kEAD+E,CAAvB,EAE7D,qDAF6D,CAApE,CAEkE,GAFlE,CAFF,CAnCK,CAyCL,SAAQ,CACN,KAAM,qBADA,CAAR,CAEK,qBAFL,CAzCK,CA4CL,aAAK,oEAAL,CA5CK,CA6CL,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,iDAAtB,CADF,CA7CK,CAgDL,SAAQ,CACN,KAAM,UADA,CAAR,CAEK,UAFL,CAhDK,CAmDL,aAAK,2EAAL,CAnDK,CAoDL,aAAG,cAAQ,KAAK,CAAC,gBAAd,EAA+B,SAAG,IAAI,CAAC,2DAAR,aAA/B,CAAH,CApDK,CAqDL,SAAQ,CACN,KAAM,kBADA,CAAR,CAEK,kBAFL,CArDK,CAwDL,SAAQ,CACN,KAAM,UADA,CAAR,CAEK,UAFL,CAxDK,CA2DL,aAAK,iGAAL,CA3DK,CA4DL,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,+EAAtB,CADF,CAEE,UAAI,UAAU,CAAC,IAAf,EAAsB,eAAtB,CAAqC,kBAAG,UAAU,CAAC,IAAd,EAAuB,CACxD,OAAQ,2BADgD,CAAvB,EAE9B,eAF8B,CAArC,CAFF,CA5DK,CAkEL,SAAQ,CACN,KAAM,UADA,CAAR,CAEK,UAFL,CAlEK,CAqEL,SAAQ,CACN,KAAM,6CADA,CAAR,CAEK,6CAFL,CArEK,CAwEL,aAAK,uKAAL,CAA4K,cAAQ,UAAU,CAAC,GAAnB,EAAyB,uBAAzB,CAA5K,CAAuO,SAAvO,CAxEK,CAyEL,aAAK,QAAL,CAAa,cAAQ,UAAU,CAAC,GAAnB,EAAyB,uBAAzB,CAAb,CAAwE,mNAAxE,CAA2R,cAAQ,UAAU,CAAC,GAAnB,EAAyB,gBAAzB,CAA3R,CAA+U,GAA/U,CAzEK,CA0EL,cACE,UAAI,UAAU,CAAC,IAAf,EACE,SAAG,UAAU,CAAC,IAAd,EAAmB,cAAQ,UAAU,CAAC,GAAnB,EAAyB,yBAAzB,CAAnB,CAAgF,oDAAhF,CAAoI,cAAQ,UAAU,CAAC,GAAnB,EAAyB,gBAAzB,CAApI,CAAwL,yOAAxL,CADF,CADF,CAIE,UAAI,UAAU,CAAC,IAAf,EACE,SAAG,UAAU,CAAC,IAAd,EAAmB,cAAQ,UAAU,CAAC,GAAnB,EAAyB,wBAAzB,CAAnB,CAA+E,eAA/E,CAA8F,cAAQ,UAAU,CAAC,GAAnB,EAAyB,QAAzB,CAA9F,CAA0I,+BAA1I,CAAyK,cAAQ,UAAU,CAAC,GAAnB,EAAyB,gBAAzB,CAAzK,CAA6N,YAA7N,CAAyO,cAAQ,UAAU,CAAC,GAAnB,EAAyB,uBAAzB,CAAzO,CAAoS,icAApS,CADF,CAJF,CA1EK,CAkFL,SAAQ,CACN,KAAM,sBADA,CAAR,CAEK,uBAFL,CAlFK,CAqFL,aAAK,oHAAL,CArFK,CAsFL,UAAS,CACP,YAAa,gDADN,CAAT,CAEG,oBAAK,UAAU,CAAC,KAAhB,EAA0B,CACzB,YAAa,oBADY,CAA1B,EAEE,UAAI,UAAU,CAAC,KAAf,EAAqB,qBAAM,UAAU,CAAC,IAAjB,EAA0B,CAC5C,YAAa,iBAD+B,CAA1B,EAEjB,oBAAK,UAAU,CAAC,MAAhB,EAA2B,CAC1B,QAAS,4BADiB,CAE1B,QAAS,IAFiB,CAG1B,SAAU,IAHgB,CAI1B,UAAW,WAJe,CAA3B,EAKE,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC1B,WAAY,SADc,CAE1B,IAAK,ocAFqB,CAA3B,EALF,CAFiB,CAArB,CAU8B,KAV9B,CAFF,CAFH,CAcmD,oBAAK,UAAU,CAAC,KAAhB,EAA0B,CACzE,YAAa,oBAD4D,CAA1B,EAE9C,SAAG,UAAU,CAAC,KAAd,EAAsB,iGAAtB,CAAuH,cAAQ,UAAU,CAAC,GAAnB,EAAyB,eAAzB,CAAvH,CAA0K,qEAA1K,CAF8C,CAEqM,SAAG,UAAU,CAAC,KAAd,EAAsB,yCAAtB,CAA+D,kBAAY,UAAU,CAAC,GAAvB,EAA6B,wBAA7B,CAA/D,CAAmI,+EAAnI,CAFrM,CAdnD,CAtFK,CAuGL,UAAS,CACP,YAAa,gDADN,CAAT,CAEG,oBAAK,UAAU,CAAC,KAAhB,EAA0B,CACzB,YAAa,oBADY,CAA1B,EAEE,UAAI,UAAU,CAAC,KAAf,EAAqB,qBAAM,UAAU,CAAC,IAAjB,EAA0B,CAC5C,YAAa,iBAD+B,CAA1B,EAEjB,oBAAK,UAAU,CAAC,MAAhB,EAA2B,CAC1B,QAAS,4BADiB,CAE1B,QAAS,IAFiB,CAG1B,SAAU,IAHgB,CAI1B,UAAW,WAJe,CAA3B,EAKE,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC1B,WAAY,SADc,CAE1B,IAAK,ocAFqB,CAA3B,EALF,CAFiB,CAArB,CAU8B,KAV9B,CAFF,CAFH,CAcmD,oBAAK,UAAU,CAAC,KAAhB,EAA0B,CACzE,YAAa,oBAD4D,CAA1B,EAE9C,SAAG,UAAU,CAAC,KAAd,EAAsB,2EAAtB,CAAiG,kBAAY,UAAU,CAAC,GAAvB,EAA6B,OAA7B,CAAjG,CAAoJ,OAApJ,CAA2J,kBAAY,UAAU,CAAC,GAAvB,EAA6B,QAA7B,CAA3J,CAA+M,cAA/M,CAF8C,CAdnD,CAvGK,CAwHL,aAAK,8TAAL,CAxHK,CAyHL,aAAK,wEAAL,CAzHK,CA0HL,SAAQ,CACN,KAAM,wBADA,CAAR,CAEK,yBAFL,CA1HK,CA6HL,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,yCAAtB,CADF,CAEE,UAAI,UAAU,CAAC,IAAf,EAAsB,sCAAtB,CACE,UAAI,UAAU,CAAC,IAAf,EACE,UAAI,UAAU,CAAC,IAAf,EAAsB,oBAAtB,CAA0C,cAAQ,UAAU,CAAC,IAAnB,EAA0B,oBAA1B,CAA1C,CAAmG,GAAnG,CADF,CAEE,UAAI,UAAU,CAAC,IAAf,EAAsB,iDAAtB,CAFF,CADF,CAFF,CAQE,UAAI,UAAU,CAAC,IAAf,EAAsB,SAAtB,CAA+B,cAAQ,UAAU,CAAC,IAAnB,EAA0B,SAA1B,CAA/B,CAA6E,gBAA7E,CAA6F,cAAQ,UAAU,CAAC,IAAnB,EAA0B,OAA1B,CAA7F,CAAyI,GAAzI,CARF,CASE,UAAI,UAAU,CAAC,IAAf,EAAsB,SAAtB,CAA+B,cAAQ,UAAU,CAAC,IAAnB,EAA0B,SAA1B,CAA/B,CAA6E,gBAA7E,CAA6F,cAAQ,UAAU,CAAC,IAAnB,EAA0B,OAA1B,CAA7F,CAAyI,GAAzI,CATF,CAUE,UAAI,UAAU,CAAC,IAAf,EAAsB,mCAAtB,CAAyD,cAAQ,UAAU,CAAC,IAAnB,EAA0B,UAA1B,CAAzD,CAAwG,oCAAxG,CAA4I,cAAQ,UAAU,CAAC,IAAnB,EAA0B,MAA1B,CAA5I,CAAuL,QAAvL,CAVF,CAWE,UAAI,UAAU,CAAC,IAAf,EAAsB,0CAAtB,CAAgE,kBAAY,UAAU,CAAC,IAAvB,EAA8B,SAA9B,CAAhE,CAAsH,GAAtH,CAXF,CAYE,UAAI,UAAU,CAAC,IAAf,EAAsB,WAAtB,CAAiC,cAAQ,UAAU,CAAC,IAAnB,EAA0B,MAA1B,CAAjC,CAA4E,qCAA5E,CAZF,CAaE,UAAI,UAAU,CAAC,IAAf,EAAsB,eAAtB,CAAqC,kBAAY,UAAU,CAAC,IAAvB,EAA8B,SAA9B,CAArC,CAA2F,+GAA3F,CAbF,CAcE,UAAI,UAAU,CAAC,IAAf,EAAsB,sDAAtB,CAdF,CA7HK,CA6IL,SAAQ,CACN,KAAM,sBADA,CAAR,CAEK,uBAFL,CA7IK,CAgJL,aAAK,2FAAL,CAAgG,cAAQ,UAAU,CAAC,GAAnB,EAAyB,WAAzB,CAAhG,CAA+I,+EAA/I,CAA8N,cAAQ,UAAU,CAAC,GAAnB,EAAyB,QAAzB,CAA9N,CAA0Q,IAA1Q,CAA8Q,cAAQ,UAAU,CAAC,GAAnB,EAAyB,YAAzB,CAA9Q,CAA8T,OAA9T,CAAqU,cAAQ,UAAU,CAAC,GAAnB,EAAyB,aAAzB,CAArU,CAAsX,GAAtX,CAhJK,CAiJL,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,iCAAtB,CADF,CAEE,UAAI,UAAU,CAAC,IAAf,EAAsB,SAAtB,CAA+B,cAAQ,UAAU,CAAC,IAAnB,EAA0B,oBAA1B,CAA/B,CAAwF,mCAAxF,CAFF,CAGE,UAAI,UAAU,CAAC,IAAf,EAAsB,SAAtB,CAA+B,cAAQ,UAAU,CAAC,IAAnB,EAA0B,SAA1B,CAA/B,CAA6E,gBAA7E,CAA6F,cAAQ,UAAU,CAAC,IAAnB,EAA0B,OAA1B,CAA7F,CAAyI,GAAzI,CAHF,CAIE,UAAI,UAAU,CAAC,IAAf,EAAsB,SAAtB,CAA+B,cAAQ,UAAU,CAAC,IAAnB,EAA0B,SAA1B,CAA/B,CAA6E,gBAA7E,CAA6F,cAAQ,UAAU,CAAC,IAAnB,EAA0B,SAA1B,CAA7F,CAA2I,2EAA3I,CAAsN,cAAQ,UAAU,CAAC,IAAnB,EAA0B,UAA1B,CAAtN,CAAqQ,GAArQ,CAJF,CAKE,UAAI,UAAU,CAAC,IAAf,EAAsB,4BAAtB,CAAkD,cAAQ,UAAU,CAAC,IAAnB,EAA0B,QAA1B,CAAlD,CAA+F,GAA/F,CALF,CAME,UAAI,UAAU,CAAC,IAAf,EAAsB,6CAAtB,CAAmE,cAAQ,UAAU,CAAC,IAAnB,EAA0B,oBAA1B,CAAnE,CAA4H,MAA5H,CAAkI,cAAQ,UAAU,CAAC,IAAnB,EAA0B,aAA1B,CAAlI,CAAoL,GAApL,CANF,CAOE,UAAI,UAAU,CAAC,IAAf,EAAsB,YAAtB,CAAkC,cAAQ,UAAU,CAAC,IAAnB,EAA0B,cAA1B,CAAlC,CAAqF,WAArF,CACE,UAAI,UAAU,CAAC,IAAf,EACE,UAAI,UAAU,CAAC,IAAf,EAAsB,qBAAtB,CADF,CAEE,UAAI,UAAU,CAAC,IAAf,EAAsB,sBAAtB,CAA4C,cAAQ,UAAU,CAAC,IAAnB,EAA0B,sBAA1B,CAA5C,CAAuG,GAAvG,CAFF,CAGE,UAAI,UAAU,CAAC,IAAf,EAAoB,cAAQ,UAAU,CAAC,IAAnB,EAA0B,qBAA1B,CAApB,CAA8E,eAA9E,CAHF,CAIE,UAAI,UAAU,CAAC,IAAf,EAAsB,sBAAtB,CAA4C,cAAQ,UAAU,CAAC,IAAnB,EAA0B,gDAA1B,CAA5C,CAAiI,GAAjI,CAJF,CADF,CAPF,CAeE,UAAI,UAAU,CAAC,IAAf,EAAsB,cAAtB,CAAoC,cAAQ,UAAU,CAAC,IAAnB,EAA0B,0BAA1B,CAApC,CAAmG,OAAnG,CAA0G,cAAQ,UAAU,CAAC,IAAnB,EAA0B,sBAA1B,CAA1G,CAAqK,IAArK,CAAyK,cAAQ,UAAU,CAAC,IAAnB,EAA0B,WAA1B,CAAzK,CAAyN,MAAzN,CAA+N,cAAQ,UAAU,CAAC,IAAnB,EAA0B,QAA1B,CAA/N,CAA4Q,sCAA5Q,CAfF,CAgBE,UAAI,UAAU,CAAC,IAAf,EAAsB,oDAAtB,CAA0E,cAAQ,UAAU,CAAC,IAAnB,EAA0B,QAA1B,CAA1E,CAAuH,0CAAvH,CAhBF,CAiBE,UAAI,UAAU,CAAC,IAAf,EAAsB,uDAAtB,CAjBF,CAjJK,CAoKL,SAAQ,CACN,KAAM,mCADA,CAAR,CAEK,mCAFL,CApKK,CAuKL,aAAG,cAAQ,UAAU,CAAC,GAAnB,EAAyB,aAAzB,CAAH,CAvKK,CAwKL,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,yCAAtB,CADF,CAEE,UAAI,UAAU,CAAC,IAAf,EAAsB,SAAtB,CAA+B,cAAQ,UAAU,CAAC,IAAnB,EAA0B,oBAA1B,CAA/B,CAAwF,mCAAxF,CAFF,CAGE,UAAI,UAAU,CAAC,IAAf,EAAsB,iDAAtB,CAAuE,cAAQ,UAAU,CAAC,IAAnB,EAA0B,mBAA1B,CAAvE,CAA+H,iEAA/H,CAAgM,cAAQ,UAAU,CAAC,IAAnB,EAA0B,cAA1B,CAAhM,CAAmP,IAAnP,CAAuP,UAAI,UAAU,CAAC,IAAf,EAAsB,4FAAtB,CAAvP,CACE,WAAK,GAAG,CAAET,UAAU,CAAC,8BAAD,CAApB,CAAsD,GAAG,CAAC,qBAA1D,CAAgF,KAAK,CAAC,KAAtF,EADF,CAHF,CAxKK,CA+KL,SAAQ,CACN,QAAS,CADH,CAAR,CAGE,UAAI,UAAU,CAAC,IAAf,EAAsB,aAAtB,CAAmC,cAAQ,UAAU,CAAC,IAAnB,EAA0B,OAA1B,CAAnC,CAA+E,uDAA/E,CAHF,CAIE,UAAI,UAAU,CAAC,IAAf,EAAsB,mCAAtB,CAAyD,cAAQ,UAAU,CAAC,IAAnB,EAA0B,UAA1B,CAAzD,CAAwG,oCAAxG,CAA4I,cAAQ,UAAU,CAAC,IAAnB,EAA0B,aAA1B,CAA5I,CAA8L,SAA9L,CAJF,CAKE,UAAI,UAAU,CAAC,IAAf,EAAsB,oDAAtB,CAA0E,kBAAY,UAAU,CAAC,IAAvB,EAA8B,QAA9B,CAA1E,CAA+H,qCAA/H,CALF,CA/KK,CAsLL,aAAG,cAAQ,UAAU,CAAC,GAAnB,EAAyB,iBAAzB,CAAH,CAtLK,CAuLL,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,iCAAtB,CAAuD,kBAAY,UAAU,CAAC,IAAvB,EAA8B,SAA9B,CAAvD,CAA6G,GAA7G,CADF,CAEE,UAAI,UAAU,CAAC,IAAf,EAAsB,8BAAtB,CAAoD,kBAAY,UAAU,CAAC,IAAvB,EAA8B,SAA9B,CAApD,CAA0G,aAA1G,CAFF,CAGE,UAAI,UAAU,CAAC,IAAf,EAAsB,iHAAtB,CAHF,CAIE,UAAI,UAAU,CAAC,IAAf,EAAsB,2CAAtB,CAAiE,kBAAY,UAAU,CAAC,IAAvB,EAA8B,QAA9B,CAAjE,CAAsH,yCAAtH,CAJF,CAvLK,CA6LL,SAAQ,CACN,KAAM,sBADA,CAAR,CAEK,sBAFL,CA7LK,CAgML,aAAK,oMAAL,CAhMK,CAiML,SAAQ,CACN,KAAM,kCADA,CAAR,CAEK,kCAFL,CAjMK,CAoML,aAAK,+FAAL,CApMK,CAqML,cACE,UAAI,UAAU,CAAC,IAAf,EAAsB,UAAtB,CAAgC,kBAAG,UAAU,CAAC,IAAd,EAAuB,CACnD,OAAQ,4BAD2C,CAAvB,EAE3B,kBAAY,UAAU,CAAC,GAAvB,EAA6B,QAA7B,CAF2B,CAEyB,UAFzB,CAAhC,CAEyE,iEAFzE,CAE0I,kBAAY,UAAU,CAAC,IAAvB,EAA8B,6BAA9B,CAF1I,CAEoN,OAFpN,CAE2N,kBAAY,UAAU,CAAC,IAAvB,EAA8B,mBAA9B,CAF3N,CAE2R,KAF3R,CADF,CAIE,UAAI,UAAU,CAAC,IAAf,EAAsB,oCAAtB,CAJF,CArMK,CA2ML,cACE,UAAI,UAAU,CAAC,IAAf,EAAoB,kBAAY,UAAU,CAAC,IAAvB,EAA8B,UAA9B,CAApB,CAA2E,8EAA3E,CADF,CAEE,UAAI,UAAU,CAAC,IAAf,EAAoB,kBAAY,UAAU,CAAC,IAAvB,EAA8B,UAA9B,CAApB,CAA2E,kFAA3E,CAFF,CA3MK,CA+ML,aAAK,oBAAL,CA/MK,CAgNL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,EAEE;AACX,CAHS,CAAL,CAhNK,CAoNL,SAAQ,CACN,KAAM,gCADA,CAAR,CAEK,gCAFL,CApNK,CAuNL,aAAK,8DAAL,CAAmE,kBAAG,UAAU,CAAC,GAAd,EAAsB,CACrF,OAAQ,4BAD6E,CAAtB,EAE5D,sDAF4D,CAAnE,CAEmE,GAFnE,CAvNK,CA0NL,SAAQ,CACN,KAAM,iCADA,CAAR,CAEK,iCAFL,CA1NK,CA6NL,aAAK,wCAAL,CAA6C,kBAAG,UAAU,CAAC,GAAd,EAAsB,CAC/D,OAAQ,+DADuD,CAAtB,EAEtC,iCAFsC,CAA7C,CAE8C,aAF9C,CAE2D,kBAAG,UAAU,CAAC,GAAd,EAAsB,CAC7E,OAAQ,4BADqE,CAAtB,EAEpD,wBAFoD,CAF3D,CAIqC,iEAJrC,CA7NK,CAkOL,sBACE,SAAG,UAAU,CAAC,YAAd,EAA2B,cAAQ,UAAU,CAAC,GAAnB,EAAyB,MAAzB,CAA3B,CAAqE,mBAArE,CAAwF,kBAAG,UAAU,CAAC,GAAd,EAAsB,CAC1G,OAAQ,4BADkG,CAAtB,EAEjF,sBAFiF,CAAxF,CAEmC,+CAFnC,CAEkF,kBAAY,UAAU,CAAC,GAAvB,EAA6B,QAA7B,CAFlF,CAEsI,wHAFtI,CADF,CAlOK,CAuOL,SAAQ,CACN,KAAM,mDADA,CAAR,CAEK,mDAFL,CAvOK,CA0OL,aAAK,kJAAL,CAAuJ,kBAAY,UAAU,CAAC,GAAvB,EAA6B,WAA7B,CAAvJ,CAA8M,iFAA9M,CAA+R,kBAAY,UAAU,CAAC,GAAvB,EAA6B,cAA7B,CAA/R,CAAyV,oIAAzV,CA1OK,CA2OL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,EAEE;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7DS,CAAL,CA3OK,CAySL,SAAQ,CACN,KAAM,mDADA,CAAR,CAEK,mDAFL,CAzSK,CA4SL,aAAK,mGAAL,CAAwG,kBAAY,UAAU,CAAC,GAAvB,EAA6B,WAA7B,CAAxG,CAA+J,iFAA/J,CAAgP,kBAAY,UAAU,CAAC,GAAvB,EAA6B,QAA7B,CAAhP,CAAoS,8HAApS,CA5SK,CA6SL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,EAEE;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxDS,CAAL,CA7SK,CAsWL,SAAQ,CACN,KAAM,yBADA,CAAR,CAEK,yBAFL,CAtWK,CAyWL,aAAK,yOAAL,CAzWK,CA0WL,aAAK,mPAAL,CA1WK,CA2WL,aAAK,qCAAL,CAA0C,kBAAY,UAAU,CAAC,GAAvB,EAA6B,aAA7B,CAA1C,CAAmG,2NAAnG,CA3WK,CA4WL,aAAK,oJAAL,CAAyJ,cAAQ,UAAU,CAAC,GAAnB,EAAyB,WAAzB,CAAzJ,CAAwM,KAAxM,CAA6M,cAAQ,UAAU,CAAC,GAAnB,EAAyB,cAAzB,CAA7M,CAA+P,iDAA/P,CA5WK,CA6WL,SAAQ,CACN,KAAM,qBADA,CAAR,CAEK,qBAFL,CA7WK,CAgXL,aAAK,uGAAL,CAhXK,CAiXL,sBACE,SAAG,UAAU,CAAC,YAAd,EAA2B,cAAQ,UAAU,CAAC,GAAnB,EAAyB,MAAzB,CAA3B,CAAqE,gIAArE,CAAqM,kBAAG,UAAU,CAAC,GAAd,EAAsB,CACvN,OAAQ,kEAD+M,CAAtB,EAE9L,2BAF8L,CAArM,CAEwC,kHAFxC,CADF,CAjXK,CAsXL,SAAQ,CACN,KAAM,6DADA,CAAR,CAEK,6DAFL,CAtXK,CAyXL,aAAK,mKAAL,CAAwK,kBAAG,UAAU,CAAC,GAAd,EAAsB,CAC1L,OAAQ,+EADkL,CAAtB,EAEjK,wBAFiK,CAAxK,CAEqC,GAFrC,CAzXK,CA4XL,aAAK,oLAAL,CA5XK,CA6XL,aAAK,oBAAL,CAAyB,kBAAY,UAAU,CAAC,GAAvB,EAA6B,MAA7B,CAAzB,CAA2E,wEAA3E,CA7XK,CA8XL,aAAK,+BAAL,CA9XK,CA+XL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,EAEE;AACX,CAHS,CAAL,CA/XK,CAmYL,aAAK,mCAAL,CAnYK,CAoYL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,EAEE;AACX,CAHS,CAAL,CApYK,CAwYL,aAAK,uCAAL,CAxYK,CAyYL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,EAEE;AACX,CAHS,CAAL,CAzYK,CA6YL,aAAK,2CAAL,CA7YK,CA8YL,eAAK,qBAAM,UAAU,CAAC,KAAjB,EAA2B,CAC5B,YAAa,aADe,CAA3B,EAEE;AACX,CAHS,CAAL,CA9YK,CAkZL,SAAQ,CACN,KAAM,sBADA,CAAR,CAEK,sBAFL,CAlZK,CAqZL,cACE,UAAI,UAAU,CAAC,IAAf,EACE,SAAG,UAAU,CAAC,IAAd,EAAmB,kBAAG,UAAU,CAAC,GAAd,EAAsB,CACrC,OAAQ,4BAD6B,CAAtB,EAEZ,qCAFY,CAAnB,CADF,CADF,CAME,UAAI,UAAU,CAAC,IAAf,EACE,SAAG,UAAU,CAAC,IAAd,EAAmB,kBAAG,UAAU,CAAC,GAAd,EAAsB,CACrC,OAAQ,8EAD6B,CAAtB,EAEZ,0DAFY,CAAnB,CADF,CANF,CAWE,UAAI,UAAU,CAAC,IAAf,EACE,SAAG,UAAU,CAAC,IAAd,EAAmB,kBAAG,UAAU,CAAC,GAAd,EAAsB,CACrC,OAAQ,8EAD6B,CAAtB,EAEZ,0DAFY,CAAnB,CADF,CAXF,CArZK,CAAP,CAuaD,CAED,CACAQ,UAAU,CAACG,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'real-devices',\n\ttitle: 'Real Device Testing with Espresso and XCUITest',\n\tsidebar_label: 'Real Devices'\n};\nexport const metadata = {\n  \"unversionedId\": \"mobile-apps/automated-testing/espresso-xcuitest/real-devices\",\n  \"id\": \"mobile-apps/automated-testing/espresso-xcuitest/real-devices\",\n  \"isDocsHomePage\": false,\n  \"title\": \"Real Device Testing with Espresso and XCUITest\",\n  \"description\": \"At this time, Espresso and XCUITest real device testing is only supported on TestObject, our Legacy Real Device Cloud Platform, which you can access via Sauce Apps > Legacy RDC.\",\n  \"source\": \"@site/docs/mobile-apps/automated-testing/espresso-xcuitest/real-devices.md\",\n  \"slug\": \"/mobile-apps/automated-testing/espresso-xcuitest/real-devices\",\n  \"permalink\": \"/mobile-apps/automated-testing/espresso-xcuitest/real-devices\",\n  \"editUrl\": \"https://github.com/saucelabs/sauce-docs/edit/master/docs/mobile-apps/automated-testing/espresso-xcuitest/real-devices.md\",\n  \"version\": \"current\",\n  \"lastUpdatedBy\": \"Author\",\n  \"lastUpdatedAt\": 1539502055,\n  \"sidebar_label\": \"Real Devices\",\n  \"sidebar\": \"someSidebar\",\n  \"previous\": {\n    \"title\": \"Mobile App Testing with Espresso and XCUITest\",\n    \"permalink\": \"/mobile-apps/automated-testing/espresso-xcuitest\"\n  },\n  \"next\": {\n    \"title\": \"Virtual Device Testing with Espresso\",\n    \"permalink\": \"/mobile-apps/automated-testing/espresso-xcuitest/virtual-devices\"\n  }\n};\n  /* @jsxRuntime classic */\n/* @jsx mdx */\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nexport const toc = [{\n  value: 'What You&#39;ll Need',\n  id: 'what-youll-need',\n  children: []\n}, {\n  value: 'System Requirements',\n  id: 'system-requirements',\n  children: []\n}, {\n  value: 'Download',\n  id: 'download',\n  children: []\n}, {\n  value: 'Test Preparation',\n  id: 'test-preparation',\n  children: [{\n    value: 'Espresso',\n    id: 'espresso',\n    children: []\n  }, {\n    value: 'XCUITest',\n    id: 'xcuitest',\n    children: []\n  }]\n}, {\n  value: 'Setting Up Your Test',\n  id: 'setting-up-your-test',\n  children: [{\n    value: 'Using the Command Line Interface',\n    id: 'using-the-command-line-interface',\n    children: []\n  }, {\n    value: 'Using a YAML Configuration File',\n    id: 'using-a-yaml-configuration-file',\n    children: []\n  }]\n}, {\n  value: 'Parallel Test Execution',\n  id: 'parallel-test-execution',\n  children: []\n}, {\n  value: 'Executing Your Test',\n  id: 'executing-your-test',\n  children: []\n}, {\n  value: 'Uploading Your App and Test Files to TestObject Storage API',\n  id: 'uploading-your-app-and-test-files-to-testobject-storage-api',\n  children: []\n}, {\n  value: 'Additional Resources',\n  id: 'additional-resources',\n  children: []\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <div {...{\n      \"className\": \"admonition admonition-caution alert alert--warning\"\n    }}><div parentName=\"div\" {...{\n        \"className\": \"admonition-heading\"\n      }}><h5 parentName=\"div\"><span parentName=\"h5\" {...{\n            \"className\": \"admonition-icon\"\n          }}><svg parentName=\"span\" {...{\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"width\": \"16\",\n              \"height\": \"16\",\n              \"viewBox\": \"0 0 16 16\"\n            }}><path parentName=\"svg\" {...{\n                \"fillRule\": \"evenodd\",\n                \"d\": \"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n              }}></path></svg></span><strong parentName=\"h5\">{`Only Available in TestObject`}</strong></h5></div><div parentName=\"div\" {...{\n        \"className\": \"admonition-content\"\n      }}><p parentName=\"div\">{`At this time, Espresso and XCUITest real device testing is only supported on TestObject, our `}<a parentName=\"p\" {...{\n            \"href\": \"https://wiki.saucelabs.com/pages/viewpage.action?pageId=102721177\"\n          }}>{`Legacy Real Device Cloud Platform`}</a>{`, which you can access via `}<strong parentName=\"p\">{`Sauce Apps`}</strong>{` > `}<strong parentName=\"p\">{`Legacy RDC`}</strong>{`.`}</p><p parentName=\"div\">{`In spring 2021, Espresso and XCUITest support will move from TestObject to Sauce Labs. See `}<a parentName=\"p\" {...{\n            \"href\": \"https://wiki.saucelabs.com/display/DOCS/Real+Device+Testing+in+Sauce+Labs+Feature+Preview\"\n          }}>{`Real Device Testing in Sauce Labs Feature Preview`}</a>{` for more information.`}</p></div></div>\n    <p>{`Automated testing is included in the two most common integrated development environments (IDEs) used for making mobile apps:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Android Studio, published by Google, provides automated testing capability by way of Espresso.`}</li>\n      <li parentName=\"ul\">{`XCode, the standard development environment for creating Apple iOS apps, uses XCUITest.`}</li>\n    </ul>\n    <p>{`Our Sauce Runner for Real Devices test runner enables you to integrate Espresso and XCUITest with Sauce Labs real device testing. Leverage the power of our 2,000+ Android and iOS devices to run mobile app user interface (UI) tests, accelerate test execution with parallel testing, and gain immediate insight with test reporting comprised of video, screenshots, and logs.`}</p>\n    <h2 {...{\n      \"id\": \"what-youll-need\"\n    }}>{`What You'll Need`}</h2>\n    <p>{`To get started, you'll need to download Sauce Runner for Real Devices, which is parameterized for use in your CI/CD environment and connects it to our Real Device Cloud.  `}</p>\n    <p>{`When you launch a test, the runner authenticates access to Espresso and XCUITest testing using the API key inside runner file. Finally, it validates your mobile app and test files before uploading to our real device cloud.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The mobile app file (.ipa for iOS; .apk for Android) for both your app and tests`}</li>\n      <li parentName=\"ul\">{`Set up your mobile app testing project (see `}<a parentName=\"li\" {...{\n          \"href\": \"https://wiki.saucelabs.com/pages/viewpage.action?pageId=92677287\"\n        }}>{`Application and Project Management for Real Devices`}</a>{`)`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"system-requirements\"\n    }}>{`System Requirements`}</h2>\n    <p>{`Minimum requirements for installing Sauce Runner for Real Devices:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Java 8 or later installed on your local machine`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"download\"\n    }}>{`Download`}</h2>\n    <p>{`Click here below to download the Sauce Runner for Real Devices .jar file.`}</p>\n    <p><button class=\"badge-download\"><a href=\"https://s3.amazonaws.com/saucelabs-runner/v1.9/runner.jar\">Download</a></button></p>\n    <h2 {...{\n      \"id\": \"test-preparation\"\n    }}>{`Test Preparation`}</h2>\n    <h3 {...{\n      \"id\": \"espresso\"\n    }}>{`Espresso`}</h3>\n    <p>{`There are two ways you can run Espresso and UI Automator tests against Sauce Labs real devices:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`By using our test runner, which is parameterized for use in CI/CD environment`}</li>\n      <li parentName=\"ul\">{`By using our `}<a parentName=\"li\" {...{\n          \"href\": \"https://app.saucelabs.com\"\n        }}>{`web interface`}</a></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"xcuitest\"\n    }}>{`XCUITest`}</h3>\n    <h4 {...{\n      \"id\": \"configuring-xcuitest-files-for-sauce-runner\"\n    }}>{`Configuring XCUITest Files for Sauce Runner`}</h4>\n    <p>{`Once you've written your iOS app test in ObjectiveC/Swift, you'll need to build it as an .ipa file for use with Sauce Runner for Real Devices. For instructions, see `}<strong parentName=\"p\">{`Creating an .ipa File`}</strong>{` below.`}</p>\n    <p>{`Under `}<strong parentName=\"p\">{`iOS Deployment Target`}</strong>{`, ensure that you set the same iOS version for both the app and your test runner. If these don't match, your tests will run locally, but fail when you run them against Sauce Labs real devices. From your Xcode `}<strong parentName=\"p\">{`Build Settings`}</strong>{`:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Select Your App Project`}</strong>{`: Select the Project you want to build, and under `}<strong parentName=\"p\">{`Build Settings`}</strong>{`, set the iOS Deployment Target to the iOS operating system version you want to use in your test. All target outputs of this project, including the application and your test runner, will be set to the same operating system version.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Select Your App Target`}</strong>{`: Select the `}<strong parentName=\"p\">{`Target`}</strong>{` for your Project, and under `}<strong parentName=\"p\">{`Build Settings`}</strong>{`, set the `}<strong parentName=\"p\">{`iOS Deployment Target`}</strong>{` to the iOS operating system version you want to use in your test. This will also overwrite the Build Settings at the Project level to that operating system version, so if you use this method, be aware that your Targets can become out of sync with each other and the Project settings, and your tests will break. If you change the iOS version for one target output, you may want to build the Project again to make sure all your targets are in sync.`}</p>\n      </li>\n    </ol>\n    <h4 {...{\n      \"id\": \"creating-an-ipa-file\"\n    }}>{`Creating an .ipa File`}</h4>\n    <p>{`Learn how to create an .ipa file using self-signed application files and .app files with our XCUITest test runner.`}</p>\n    <div {...{\n      \"className\": \"admonition admonition-tip alert alert--success\"\n    }}><div parentName=\"div\" {...{\n        \"className\": \"admonition-heading\"\n      }}><h5 parentName=\"div\"><span parentName=\"h5\" {...{\n            \"className\": \"admonition-icon\"\n          }}><svg parentName=\"span\" {...{\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"width\": \"12\",\n              \"height\": \"16\",\n              \"viewBox\": \"0 0 12 16\"\n            }}><path parentName=\"svg\" {...{\n                \"fillRule\": \"evenodd\",\n                \"d\": \"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n              }}></path></svg></span>{`tip`}</h5></div><div parentName=\"div\" {...{\n        \"className\": \"admonition-content\"\n      }}><p parentName=\"div\">{`If you need to maintain your own provisioning profile in the .ipa file, you should disable the `}<strong parentName=\"p\">{`App Resigning`}</strong>{` option when you set the Device Settings for your app in the cloud.`}</p><p parentName=\"div\">{`You can also use the Appium capability `}<inlineCode parentName=\"p\">{`resigningEnabled=false`}</inlineCode>{` to disable app resigning. This option is available for private devices only.`}</p></div></div>\n    <div {...{\n      \"className\": \"admonition admonition-tip alert alert--success\"\n    }}><div parentName=\"div\" {...{\n        \"className\": \"admonition-heading\"\n      }}><h5 parentName=\"div\"><span parentName=\"h5\" {...{\n            \"className\": \"admonition-icon\"\n          }}><svg parentName=\"span\" {...{\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"width\": \"12\",\n              \"height\": \"16\",\n              \"viewBox\": \"0 0 12 16\"\n            }}><path parentName=\"svg\" {...{\n                \"fillRule\": \"evenodd\",\n                \"d\": \"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z\"\n              }}></path></svg></span>{`tip`}</h5></div><div parentName=\"div\" {...{\n        \"className\": \"admonition-content\"\n      }}><p parentName=\"div\">{`Our XCUITest test runner accepts both .app and .ipa file formats for the `}<inlineCode parentName=\"p\">{`--app`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`--test`}</inlineCode>{` parameters.`}</p></div></div>\n    <p>{`All of the build types listed below are supported, since we use a resigning process to embed our own provisioning profile into the uploaded .ipa file. With our own profile in place, the app will be allowed to install and launch on the cloud devices. The functionality of the app itself remains completely unmodified.`}</p>\n    <p>{`You can also use .ipa files generated by build tools outside of Xcode.`}</p>\n    <h4 {...{\n      \"id\": \"building-an-app-bundle\"\n    }}>{`Building an .app Bundle`}</h4>\n    <ol>\n      <li parentName=\"ol\">{`Open your application project in Xcode.`}</li>\n      <li parentName=\"ol\">{`Select your product's device target:`}\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`On an RDC: Select `}<strong parentName=\"li\">{`Generic iOS Device`}</strong>{`.`}</li>\n          <li parentName=\"ol\">{`On a simulator: Select any available simulator.`}</li>\n        </ol>\n      </li>\n      <li parentName=\"ol\">{`In the `}<strong parentName=\"li\">{`Product`}</strong>{` menu, select `}<strong parentName=\"li\">{`Clean`}</strong>{`.`}</li>\n      <li parentName=\"ol\">{`In the `}<strong parentName=\"li\">{`Product`}</strong>{` menu, select `}<strong parentName=\"li\">{`Build`}</strong>{`.`}</li>\n      <li parentName=\"ol\">{`Navigate to your Xcode project's `}<strong parentName=\"li\">{`Products`}</strong>{` directory and find the generated `}<strong parentName=\"li\">{`.app`}</strong>{` file.`}</li>\n      <li parentName=\"ol\">{`Create an empty directory with the name `}<inlineCode parentName=\"li\">{`Payload`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`Move the `}<strong parentName=\"li\">{`.app`}</strong>{` file inside the Payload directory.`}</li>\n      <li parentName=\"ol\">{`Compress the `}<inlineCode parentName=\"li\">{`Payload`}</inlineCode>{` directory into an archive (.zip file) and give it a new name with .ipa appended to the end of the file name.`}</li>\n      <li parentName=\"ol\">{`The .ipa file is now ready for upload to Sauce Labs.`}</li>\n    </ol>\n    <h4 {...{\n      \"id\": \"building-an-ipa-file\"\n    }}>{`Building an .ipa File`}</h4>\n    <p>{`You can use any of the existing methods of distribution for your iOS app, except for the `}<strong parentName=\"p\">{`App Store`}</strong>{` type. This means that you can choose any of the three other export methods: `}<strong parentName=\"p\">{`Ad Hoc`}</strong>{`, `}<strong parentName=\"p\">{`Enterprise`}</strong>{`, or `}<strong parentName=\"p\">{`Development`}</strong>{`.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Open your app project in Xcode.`}</li>\n      <li parentName=\"ol\">{`Select `}<strong parentName=\"li\">{`Generic iOS Device`}</strong>{` as your project's device target.`}</li>\n      <li parentName=\"ol\">{`In the `}<strong parentName=\"li\">{`Product`}</strong>{` menu, select `}<strong parentName=\"li\">{`Clean`}</strong>{`.`}</li>\n      <li parentName=\"ol\">{`In the `}<strong parentName=\"li\">{`Product`}</strong>{` menu, select `}<strong parentName=\"li\">{`Archive`}</strong>{`. When the archiving process completes, you'll see your app listed under `}<strong parentName=\"li\">{`Archives`}</strong>{`.`}</li>\n      <li parentName=\"ol\">{`Select your app and click `}<strong parentName=\"li\">{`Export`}</strong>{`.`}</li>\n      <li parentName=\"ol\">{`When prompted for an export method, select `}<strong parentName=\"li\">{`Ad Hoc, Enterprise`}</strong>{` or `}<strong parentName=\"li\">{`Development`}</strong>{`.`}</li>\n      <li parentName=\"ol\">{`Set these `}<strong parentName=\"li\">{`Distribution`}</strong>{` options:`}\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`App Thinning: None.`}</li>\n          <li parentName=\"ol\">{`Clear the selection `}<strong parentName=\"li\">{`Rebuild from Bitcode`}</strong>{`.`}</li>\n          <li parentName=\"ol\"><strong parentName=\"li\">{`Strip Swift symbols`}</strong>{` is optional.`}</li>\n          <li parentName=\"ol\">{`Clear the selection `}<strong parentName=\"li\">{`Include manifest for over-the-air installation`}</strong>{`.`}</li>\n        </ol>\n      </li>\n      <li parentName=\"ol\">{`Select your `}<strong parentName=\"li\">{`Distribution Certificate`}</strong>{` and `}<strong parentName=\"li\">{`Provisioning Profile`}</strong>{` (`}<strong parentName=\"li\">{`Automatic`}</strong>{` or `}<strong parentName=\"li\">{`Manual`}</strong>{`). This will generate the .ipa file.`}</li>\n      <li parentName=\"ol\">{`When the file generation process completes, click `}<strong parentName=\"li\">{`Export`}</strong>{` and choose where to save the .ipa file.`}</li>\n      <li parentName=\"ol\">{`This .ipa file is now ready for upload to Sauce Labs.`}</li>\n    </ol>\n    <h4 {...{\n      \"id\": \"creating-an-xcuitest-test-package\"\n    }}>{`Creating an XCUITest Test Package`}</h4>\n    <p><strong parentName=\"p\">{`-Runner.app`}</strong></p>\n    <ol>\n      <li parentName=\"ol\">{`Open your application project in Xcode.`}</li>\n      <li parentName=\"ol\">{`Select `}<strong parentName=\"li\">{`Generic iOS Device`}</strong>{` as your project's device target.`}</li>\n      <li parentName=\"ol\">{`Make sure that the your UI tests are part of a `}<strong parentName=\"li\">{`Target Membership`}</strong>{` and that those Targets are selected to be built in your Xcode `}<strong parentName=\"li\">{`Build scheme`}</strong>{`. `}<em parentName=\"li\">{`Targets containing UI Tests are typically selected to be built at the \"Test\" build action.`}</em>\n        <img src={useBaseUrl('img/xcuitest/xcode-build.png')} alt=\"Xcode Build Options\" width=\"800\" />\n      </li>\n    </ol>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">{`Launch the `}<strong parentName=\"li\">{`Build`}</strong>{` action, which is set to generate your test packages.`}</li>\n      <li parentName=\"ol\">{`Navigate to your Xcode project's `}<strong parentName=\"li\">{`Products`}</strong>{` directory and find the generated `}<strong parentName=\"li\">{`-Runner.app`}</strong>{` files.`}</li>\n      <li parentName=\"ol\">{`The -Runner.app files are ready to be used in the `}<inlineCode parentName=\"li\">{`--test`}</inlineCode>{` parameter of our XCUI test runner.`}</li>\n    </ol>\n    <p><strong parentName=\"p\">{`.ipa (Optional)`}</strong></p>\n    <ol>\n      <li parentName=\"ol\">{`Create an empty directory name `}<inlineCode parentName=\"li\">{`Payload`}</inlineCode>{`.`}</li>\n      <li parentName=\"ol\">{`Move the -Runner.app to the `}<inlineCode parentName=\"li\">{`Payload`}</inlineCode>{` directory.`}</li>\n      <li parentName=\"ol\">{`Compress the Payload directory into an archive (.zip file) and give it a new name with .ipa file format ending.`}</li>\n      <li parentName=\"ol\">{`The .ipa file is ready to be used in the `}<inlineCode parentName=\"li\">{`--test`}</inlineCode>{` parameter of our XCUITest test runner.`}</li>\n    </ol>\n    <h2 {...{\n      \"id\": \"setting-up-your-test\"\n    }}>{`Setting Up Your Test`}</h2>\n    <p>{`There are two ways to configure your parameters for testing on Sauce Runner for Real Devices with Espresso and XCUITest: by using a command-line interface or by creating and running a YAML file.`}</p>\n    <h3 {...{\n      \"id\": \"using-the-command-line-interface\"\n    }}>{`Using the Command Line Interface`}</h3>\n    <p>{`Sauce Runner for Real Devices will execute tests based on the parameters you set in the file.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Add the `}<a parentName=\"li\" {...{\n          \"href\": \"/dev/cli/espresso-xcuitest\"\n        }}><inlineCode parentName=\"a\">{`config`}</inlineCode>{` command`}</a>{` to your code. The config command only accepts two parameters: `}<inlineCode parentName=\"li\">{`--path <path to config.yml>`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`--apikey <apikey>`}</inlineCode>{`.  `}</li>\n      <li parentName=\"ol\">{`Add one of the following commands:`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`xcuitest`}</inlineCode>{` Defines XCUITest as the test framework to use for your native iOS app tests`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`espresso`}</inlineCode>{` Defines Espresso as the test framework to use for your native Android app tests`}</li>\n    </ul>\n    <p>{`Here's an example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`JAVA_HOME=$(/usr/libexec/java_home --version 8) java -jar runner.jar config --path <path to config.yml> --apikey <apikey>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"sauce-runner-rdc-cli-reference\"\n    }}>{`Sauce Runner RDC CLI Reference`}</h4>\n    <p>{`From here, head to the full list of commands and options at `}<a parentName=\"p\" {...{\n        \"href\": \"/dev/cli/espresso-xcuitest\"\n      }}>{`Sauce Runner for Real Devices Command-Line Reference`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"using-a-yaml-configuration-file\"\n    }}>{`Using a YAML Configuration File`}</h3>\n    <p>{`As an alternative to configuring your `}<a parentName=\"p\" {...{\n        \"href\": \"/mobile-apps/automated-testing/espresso-xcuitest/real-devices\"\n      }}>{`Espresso and XCUITest RDC tests`}</a>{` using the `}<a parentName=\"p\" {...{\n        \"href\": \"/dev/cli/espresso-xcuitest\"\n      }}>{`command line interface`}</a>{`, you can create a YAML configuration file, as described below.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`NOTE`}</strong>{`: You cannot use `}<a parentName=\"p\" {...{\n          \"href\": \"/dev/cli/espresso-xcuitest\"\n        }}>{`command line options`}</a>{` in your YAML config file. Once you pass the `}<inlineCode parentName=\"p\">{`config`}</inlineCode>{` command to the runner, it will prohibit you from using the other configuration options available on the command line.`}</p>\n    </blockquote>\n    <h4 {...{\n      \"id\": \"xcuitest-yaml-configuration-file-for-sauce-runner\"\n    }}>{`XCUITest YAML Configuration File for Sauce Runner`}</h4>\n    <p>{`This snippet includes all the required options for running an XCUITest suite in conjunction with Sauce Runner for Real Devices. It includes the `}<inlineCode parentName=\"p\">{`--devices`}</inlineCode>{` option to select devices based on both static and dynamic allocation, and the `}<inlineCode parentName=\"p\">{`--testsToRun`}</inlineCode>{` option to set a specific set of classes/tests to run on a device. The class(es) specified can be written in Swift or Objective-C.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`# Test framework: \"xcuitest\" in this example\ntestFramework: xcuitest\n\n# Path to the .ipa or .app file (must have the same name as the App created in Sauce Labs)\napp: ./SampleApp.ipa\n\n# Path to the test -Runner app's .ipa or .app file\ntest: ./SampleAppUITests-Runner.ipa\n\n# Path where XML test reports will be saved\nxmlFolder: ./\n\n# A list of devices to be used for this test run\ndevices:\n\n# Device 1 example: this will execute every test in the .ipa file on a random iOS device\n# Only specify a DC (either EU or US)\n- datacenter: EU\n\n# Device 2 example: Static Allocation - this test will only run if the named device is available\n- datacenter: US\n  # Specify the specific device name for static allocation\n  device: iPhone_11_13_5_real_us\n\n  # set test name (optional) - this is the name that will appear in the Sauce Labs UI (and API results)\n  testname: MyTestName2\n\n# Device 3 example: Dynamic Allocation\n- datacenter: US\n  # Specify a device name or regex for dynamic allocation: 'iPhone X', 'iPad.*', etc.\n  deviceNameQuery: iPhone 8.*\n\n  # Platform Version for a dynamic device query. e.g. '13' for all Devices with major version 13 and\n  #  arbitrary minor versions or '13.5.1' for a more specific version\n  platformVersion: 13\n  testname: MyTestName3\n\n  # Optional parameters, set to true to enable\n  # phoneOnly: false\n  # tabletOnly: false\n  # privateDevicesOnly: false            \n        # if 'true', will run only on Private Devices assigned to your account\n\n# Device 4 example: Running subset of tests\n- datacenter: EU\n  testname: MyTestName4\n\n  # Provide a list of test cases or test classes. If you want to run all tests of a class, provide the class name by itself.\n  #  To run a specific class method, provide both the class and method names.\n  #  You may specify multiple testClass parameters. As described above, each testClass will execute serially on the device indicated.\n  #  Each testClass must be preceded by a hyphen (e.g. '- testClass'), whereas testMethod parameters must be at the same indentation\n  #  level as testClass, without the hyphen\n  testsToRun:\n  - testClass: SampleTestCase\n  - testClass: SampleTestCase2\n    testMethod: testItWorks\n\n  - testClass: SampleTestCase3\n    testMethod: testThisMethod\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"espresso-yaml-configuration-file-for-sauce-runner\"\n    }}>{`Espresso YAML Configuration File for Sauce Runner`}</h4>\n    <p>{`This snippet includes all the required options for running an Espresso test suite, including the `}<inlineCode parentName=\"p\">{`--devices`}</inlineCode>{` option to select devices based on both static and dynamic allocation, and the `}<inlineCode parentName=\"p\">{`--envs`}</inlineCode>{` option to set a specific set of classes/tests to run on a device. The class(es) specified can be written in Java or Kotlin.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`testFramework: espresso\n# Path to the app's .apk\napp: ./SampleApp.apk\n\n# Path to the .apk file containing the test bundle\ntest: ./SampleAppUITests-tests.apk\n\n# Path where XML test reports will be saved.\nxmlFolder: ./\n\n# Define a list of devices on which the tests should be executed\ndevices:\n\n# Device 1 example\n# Only specify a DC (either EU or US). This will execute all test methods on the first random Android\n#   device which your account is eligible to use\n- datacenter: EU\n\n# Device 2 example: Static Allocation - this test will only run if the named device is available\n- datacenter: US\n\n  # Specify the specific device name for static allocation\n  device: Samsung_Galaxy_S8_real\n\n  # set test name (optional) - this is the name that will appear in the Sauce Labs UI (and API results)\n  testname: MyTestName3\n\n# Device 3 example: Dynamic Allocation\n- datacenter: US\n\n  # Specify a device name or regex for dynamic allocation: 'Samsung Galaxy S7', 'Samsung Galaxy.*', etc.\n  deviceNameQuery: Samsung Galaxy S7\n\n  # Platform Version for a dynamic device query. e.g. '7' for all Devices with major version 7 and\n  #  arbitrary minor versions or '7.1.2' for a more specific version\n  platformVersion: 7.1\n\n  # Optional parameters, set to true to enable\n  # phoneOnly: false\n  # tabletOnly: false\n  # privateDevicesOnly: false             # if 'true', will run only on Private Devices assigned to your account\n\n  testname: MyTestName3\n\n# Device 4 example: Running subset of tests.\n- datacenter: EU\n  testname: MyTestName4\n\n  # Provide a list of test options to espresso\n  # The key-value pairs supported by espresso are documented here: https://developer.android.com/studio/test/command-line#AMOptionsSyntax\n  # In the example below the test would execute all test methods defined in the class com.example.android.TestClassA\n  envs:\n  - key: class\n    value: com.example.android.TestClassA\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"parallel-test-execution\"\n    }}>{`Parallel Test Execution`}</h2>\n    <p>{`The XCUITest and Espresso YAML examples above each contain tests on four different iOS and Android devices, respectively. On the Sauce Labs Real Device Cloud, you'll have the option to configure tests like these to run in parallel.`}</p>\n    <p>{`By executing either example (Espresso or XCUITest), it would result in four separate test executions in parallel on four different devices. The tests within the section will be assigned to that one device and executed in the order specified.`}</p>\n    <p>{`For each section starting with the `}<inlineCode parentName=\"p\">{`-datacenter`}</inlineCode>{` directive, a new parallel test thread will spin up for the device indicated. If you specify multiple test classes or test methods, each will be executed serially, in the order presented in the section, on the device.`}</p>\n    <p>{`Once the test suite has completed, you can find the test results for each device rolled into a single set of artifacts (e.g., videos, logs) under `}<strong parentName=\"p\">{`Automated`}</strong>{` > `}<strong parentName=\"p\">{`Test Results`}</strong>{`. You can download these artifacts via the API.`}</p>\n    <h2 {...{\n      \"id\": \"executing-your-test\"\n    }}>{`Executing Your Test`}</h2>\n    <p>{`Load and execute your .ipa or .apk file on the real mobile device, along with the app you're testing.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`NOTE`}</strong>{`: The maximum execution time for a single XCUITest test is one hour. As a best practice, we recommend designing your tests as `}<a parentName=\"p\" {...{\n          \"href\": \"https://wiki.saucelabs.com/pages/viewpage.action?pageId=48365933\"\n        }}>{`small, atomic, autonomous`}</a>{`, and setting maximum execution times in minutes or seconds, so you can get the most efficiency for your builds.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"uploading-your-app-and-test-files-to-testobject-storage-api\"\n    }}>{`Uploading Your App and Test Files to TestObject Storage API`}</h2>\n    <p>{`As an alternative to using the built-in upload behavior of Sauce Runner for Real Devices, you can separate the upload of your application and test files via the `}<a parentName=\"p\" {...{\n        \"href\": \"https://wiki.saucelabs.com/display/DOCS/Legacy+Real+Device+Platform+Resources\"\n      }}>{`TestObject Storage API`}</a>{`.`}</p>\n    <p>{`Implementing the separation of upload allows you to take control of when to upload a new version, which in turn helps save time by reducing the total amount of file uploads done.`}</p>\n    <p>{`Below are example `}<inlineCode parentName=\"p\">{`curl`}</inlineCode>{` commands for uploading your app build and test runners to TestObject.`}</p>\n    <p>{`Example: uploading an iOS app`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`curl -u \"username:APP_APIKEY\" -X POST https://app.testobject.com/api/rest/storage/upload -H \"Content-Type: application/octet-stream\" --data-binary @/path/to/iOSApp.ipa\n`}</code></pre>\n    <p>{`Example: uploading an Android app`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`curl -u \"username:APP_APIKEY\" -X POST https://app.testobject.com/api/rest/storage/upload -H \"Content-Type: application/octet-stream\" --data-binary @/path/to/androidApp.apk\n`}</code></pre>\n    <p>{`Example: uploading an iOS test runner`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`curl -u \"username:APP_APIKEY\" -X POST https://app.testobject.com/api/rest/storage/upload -H \"Content-Type: application/octet-stream\" -H \"App-Type: XCUITEST\" --data-binary @/path/to/XCUITests-Runner.ipa\n`}</code></pre>\n    <p>{`Example: uploading an Android test runner`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\"\n      }}>{`curl -u \"username:APP_APIKEY\" -X POST https://app.testobject.com/api/rest/storage/upload -H \"Content-Type: application/octet-stream\" -H \"App-Type: ANDROID_INSTRUMENTATION_TEST\" --data-binary @/path/to/androidTest.apk\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"additional-resources\"\n    }}>{`Additional Resources`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"/dev/cli/espresso-xcuitest\"\n          }}>{`Espresso and XCUITest CLI Reference`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://github.com/saucelabs-training/demo-espresso/tree/master/real-devices\"\n          }}>{`Sauce Labs GitHub repository | Espresso for Real Devices`}</a></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://github.com/saucelabs-training/demo-xcuitest/tree/master/real-devices\"\n          }}>{`Sauce Labs GitHub repository | XCUITest for Real Devices`}</a></p>\n      </li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}