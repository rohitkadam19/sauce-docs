{"remainingRequest":"/Users/nancysweeney/GH/sauce-docs/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/nancysweeney/GH/sauce-docs/docs/products/testrunner-toolkit/configuration.md","dependencies":[{"path":"/Users/nancysweeney/GH/sauce-docs/docs/products/testrunner-toolkit/configuration.md","mtime":1603137521555},{"path":"/Users/nancysweeney/GH/sauce-docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-products-testrunner-toolkit-configuration-md-118.json","mtime":1603138663255},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/cache-loader/dist/cjs.js","mtime":1602877854626},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/babel-loader/lib/index.js","mtime":1602877854503},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1603138340410},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1603138338902}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/nancysweeney/GH/sauce-docs/docs/products/testrunner-toolkit/configuration.md"],"names":["React","mdx","frontMatter","id","title","sidebar_label","metadata","Tabs","TabItem","rightToc","value","children","layoutProps","MDXLayout","MDXContent","components","props","label","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'configuration',\n\ttitle: 'Testrunner Configuration',\n\tsidebar_label: 'Configuration'\n};\nexport const metadata = {\n  \"unversionedId\": \"products/testrunner-toolkit/configuration\",\n  \"id\": \"products/testrunner-toolkit/configuration\",\n  \"isDocsHomePage\": false,\n  \"title\": \"Testrunner Configuration\",\n  \"description\": \"The Testrunner Toolkit requires a configuration file to know which tests to run, along with which framework to use.\",\n  \"source\": \"@site/docs/products/testrunner-toolkit/configuration.md\",\n  \"permalink\": \"/products/testrunner-toolkit/configuration\",\n  \"editUrl\": \"https://github.com/saucelabs/sauce-docs/edit/master/docs/products/testrunner-toolkit/configuration.md\",\n  \"lastUpdatedBy\": \"Author\",\n  \"lastUpdatedAt\": 1539502055,\n  \"sidebar_label\": \"Configuration\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"Testrunner Test Preparation\",\n    \"permalink\": \"/products/testrunner-toolkit/preparation\"\n  },\n  \"next\": {\n    \"title\": \"Testrunner CI Integrations\",\n    \"permalink\": \"/products/testrunner-toolkit/integrations\"\n  }\n};\n  /* @jsx mdx */\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nexport const rightToc = [{\n  value: 'Basic Configuration',\n  id: 'basic-configuration',\n  children: []\n}, {\n  value: 'Configuration Examples',\n  id: 'configuration-examples',\n  children: []\n}, {\n  value: 'Prepare your environment',\n  id: 'prepare-your-environment',\n  children: []\n}, {\n  value: 'Parallelization',\n  id: 'parallelization',\n  children: []\n}];\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`The Testrunner Toolkit requires a configuration file to know which tests to run, along with which framework to use.`}</p>\n    <h2 {...{\n      \"id\": \"basic-configuration\"\n    }}>{`Basic Configuration`}</h2>\n    <p>{`By default, `}<inlineCode parentName=\"p\">{`config.yml`}</inlineCode>{` is the file `}<inlineCode parentName=\"p\">{`saucectl`}</inlineCode>{` looks to for its configuration.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`#Simple config.yml using puppeteer\napiVersion: v1\nmetadata:\n  name: Feature XYZ\n  tags:\n    - e2e\n    - release team\n    - other tag\n  build: Release $CI_COMMIT_SHORT_SHA\nfiles:\n  - ./tests/**/*.js\nimage:\n  base: saucelabs/sauce-puppeteer-jest-node\n  version: v0.1.0\nsauce:\n  region: us-west-1\n`}</code></pre>\n    <p>{`If you wish to use more than one framework, or to configure different sets of tests separately, you can use any name for the configuration file and specify it with the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`saucectl run -c ./path/to/config.yml\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"configuration-examples\"\n    }}>{`Configuration Examples`}</h2>\n    <p>{`Below are framework-specific configuration examples that exist in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/saucelabs/testrunner-toolkit/tree/master/.sauce\"\n      }}>{`Testrunner Toolkit repository`}</a>{`. The repository uses these configurations for its pipeline:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`NOTE:`}</strong>{` The test files need to match `}<inlineCode parentName=\"p\">{`(spec|test)`}</inlineCode>{` in their file name so they are automatically detected as `}<inlineCode parentName=\"p\">{`testfiles`}</inlineCode>{`.`}</p>\n    </blockquote>\n    <Tabs defaultValue=\"puppeteer\" values={[{\n      label: 'Puppeteer',\n      value: 'puppeteer'\n    }, {\n      label: 'Playwright',\n      value: 'playwright'\n    }, {\n      label: 'TestCafe',\n      value: 'testcafe'\n    }, {\n      label: 'Cypress',\n      value: 'cypress'\n    }]} mdxType=\"Tabs\">\n      <TabItem value=\"puppeteer\" mdxType=\"TabItem\">\n        <p><a parentName=\"p\" {...{\n            \"href\": \"https://github.com/saucelabs/testrunner-toolkit/blob/master/.sauce/puppeteer.yml\"\n          }}><strong parentName=\"a\"><inlineCode parentName=\"strong\">{`puppeteer.yml`}</inlineCode></strong></a></p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`apiVersion: v1\n# type of object, there could be theoretically other types\n# of \"orchestration\" in the future, e.g. network config maps etc.\nkind: Test\n# meta data to the test\nmetadata:\n  name: Feature XYZ\n  tags:\n    - e2e\n    - release team\n    - other tag\n  build: \"Build #$BUILD_ID in $BUILD_ENV\"\n# Every file defined in this list will be bundled into a zip and\n# uploaded to Sauce Labs.\nfiles:\n  - ./tests/puppeteer/demo.test.js\n  # - ./tests/puppeteer/sauce-swag-checkout.test.js\n  # - ./tests/puppeteer/sauce-swag-login.test.js\n# Define a test runner image (e.g. an image to run WebdriverIO tests)\n# Like in Docker, these images can be developed as Open Source projects\n# and maintained by our teams, while at the same time, customers can\n# build their own images as well\nimage:\n  # while a set of properties are defined by our Yaml format\n  base: saucelabs/sauce-puppeteer\n  version: 3.0.4-saucectl0.6.2\n`}</code></pre>\n      </TabItem>\n      <TabItem value=\"playwright\" mdxType=\"TabItem\">\n        <p><a parentName=\"p\" {...{\n            \"href\": \"https://github.com/saucelabs/testrunner-toolkit/blob/master/.sauce/playwright.yml\"\n          }}><strong parentName=\"a\"><inlineCode parentName=\"strong\">{`playwright.yml`}</inlineCode></strong></a></p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`apiVersion: v1\n# type of object, there could be theoretically other types\n# of \"orchestration\" in the future, e.g. network config maps etc.\nkind: Test\n# meta data to the test\nmetadata:\n  name: Feature XYZ\n  tags:\n    - e2e\n    - release team\n    - other tag\n  build: \"Build #$BUILD_ID in $BUILD_ENV\"\n# Every file defined in this list will be bundled into a zip and\n# uploaded to Sauce Labs.\nfiles:\n  - ./tests/playwright/demo.test.js\n# Define a test runner image (e.g. an image to run WebdriverIO tests)\n# Like in Docker, these images can be developed as Open Source projects\n# and maintained by our teams, while at the same time, customers can\n# build their own images as well\nimage:\n  # while a set of properties are defined by our Yaml format\n  base: saucelabs/sauce-playwright\n  version: 1.0.0-saucectl0.6.2\n`}</code></pre>\n      </TabItem>\n      <TabItem value=\"testcafe\" mdxType=\"TabItem\">\n        <p><a parentName=\"p\" {...{\n            \"href\": \"https://github.com/saucelabs/testrunner-toolkit/blob/master/.sauce/testcafe.yml\"\n          }}><strong parentName=\"a\"><inlineCode parentName=\"strong\">{`testcafe.yml`}</inlineCode></strong></a></p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`apiVersion: v1\nmetadata:\n  name: Feature XYZ\n  tags:\n    - e2e\n    - release team\n    - other tag\n  build: Release $CI_COMMIT_SHORT_SHA\nfiles:\n  - ./tests/testcafe/*.js\ncapabilities:\n  - browserName: Chrome\nimage:\n  base: saucelabs/sauce-testcafe\n  version: 1.8.5-saucectl0.6.3\n`}</code></pre>\n      </TabItem>\n      <TabItem value=\"cypress\" mdxType=\"TabItem\">\n        <p><a parentName=\"p\" {...{\n            \"href\": \"https://github.com/saucelabs/testrunner-toolkit/blob/master/.sauce/cypress.yml\"\n          }}><strong parentName=\"a\"><inlineCode parentName=\"strong\">{`cypress.yml`}</inlineCode></strong></a></p>\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`apiVersion: v1\nmetadata:\n  name: Feature XYZ\n  tags:\n    - e2e\n    - release team\n    - other tag\nfiles:\n  - ./tests/cypress/example.test.js\nimage:\n  base: saucelabs/stt-cypress-mocha-node\n  version: v0.1.3\n`}</code></pre>\n      </TabItem>\n    </Tabs>\n    <h2 {...{\n      \"id\": \"prepare-your-environment\"\n    }}>{`Prepare your environment`}</h2>\n    <p>{`Saucectl offers the possibility to setup your tests environment before executing any of your suites using `}<inlineCode parentName=\"p\">{`beforeExec`}</inlineCode>{`: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`beforeExec:\n  - npm install --save chai\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"parallelization\"\n    }}>{`Parallelization`}</h2>\n    <p>{`Saucectl is capable of running tests in parallel by utilizing multiple CI machines. `}<em parentName=\"p\">{`This feature requires a Sauce Labs account`}</em>{`, so don't forget to set the environment variables `}<inlineCode parentName=\"p\">{`SAUCE_USERNAME`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`SAUCE_ACCESS_KEY`}</inlineCode>{`!`}</p>\n    <p>{`Parallelization can be turned on either via the config`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`parallel: true\n`}</code></pre>\n    <p>{`or the CLI`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`saucectl run --parallel\n`}</code></pre>\n    <p>{`The concrete setup of the pipeline will depend on your CI provider however. `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/saucelabs/saucectl/blob/master/.github/workflows/test.yml#L94-L145\"\n      }}>{`Here's an example`}</a>{` how to set it up for GitHub Actions.`}</p>\n    <p>{`Please visit `}<a parentName=\"p\" {...{\n        \"href\": \"/products/testrunner-toolkit/saucectl#parallel\"\n      }}>{`here`}</a>{` for more information about the parallelization feature and its limitations.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}