(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{118:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return l}));var r=n(3),a=n(8),o=(n(0),n(222)),i={id:"typescript",title:"Using TypeScript Tests",sidebar_label:"Using TypeScript"},c={unversionedId:"testrunner-toolkit/typescript",id:"testrunner-toolkit/typescript",isDocsHomePage:!1,title:"Using TypeScript Tests",description:"If you wrote your automated tests using TypeScript in either Playwright, Puppeteer, or Cypress, you need to transpile your Typescript files to Javascript before running them with Testrunner Toolkit.",source:"@site/docs/testrunner-toolkit/typescript.md",slug:"/testrunner-toolkit/typescript",permalink:"/testrunner-toolkit/typescript",editUrl:"https://github.com/saucelabs/sauce-docs/edit/master/docs/testrunner-toolkit/typescript.md",version:"current",lastUpdatedBy:"James Tacker",lastUpdatedAt:1611963645,sidebar_label:"Using TypeScript",sidebar:"someSidebar",previous:{title:"Testrunner Toolkit with GitHub Actions",permalink:"/testrunner-toolkit/integrations/github-actions"},next:{title:"Sauce CTL",permalink:"/testrunner-toolkit/saucectl"}},s=[{value:"What You&#39;ll Need",id:"what-youll-need",children:[]},{value:"The Problem",id:"the-problem",children:[]},{value:"The Solution",id:"the-solution",children:[]}],p={toc:s};function l(e){var t=e.components,n=Object(a.default)(e,["components"]);return Object(o.mdx)("wrapper",Object(r.default)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.mdx)("p",null,"If you wrote your automated tests using TypeScript in either Playwright, Puppeteer, or Cypress, you need to transpile your Typescript files to Javascript before running them with Testrunner Toolkit."),Object(o.mdx)("h2",{id:"what-youll-need"},"What You'll Need"),Object(o.mdx)("p",null,"Refer to the requirements listed on the ",Object(o.mdx)("a",Object(r.default)({parentName:"p"},{href:"/testrunner-toolkit/installation"}),"Installation")," page."),Object(o.mdx)("h2",{id:"the-problem"},"The Problem"),Object(o.mdx)("p",null,"Consider the ",Object(o.mdx)("inlineCode",{parentName:"p"},"tests")," directory structure below:"),Object(o.mdx)("pre",null,Object(o.mdx)("code",Object(r.default)({parentName:"pre"},{className:"language-bash"}),".\n\u2514\u2500\u2500 tests/\n    \u251c\u2500\u2500 test.one.spec.ts\n    \u251c\u2500\u2500 test.two.spec.ts\n    \u251c\u2500\u2500 test.three.spec.ts\n    \u2514\u2500\u2500 tsconfig.json\n")),Object(o.mdx)("p",null,"Except for the TestCafe image, these ",Object(o.mdx)("inlineCode",{parentName:"p"},".ts")," files cannot run directly on any Testrunner Toolkit images. Therefore in order to make theses test run correctly you must transpile them JavaScript."),Object(o.mdx)("h2",{id:"the-solution"},"The Solution"),Object(o.mdx)("ol",null,Object(o.mdx)("li",{parentName:"ol"},Object(o.mdx)("p",{parentName:"li"},"Ensure you already have ",Object(o.mdx)("inlineCode",{parentName:"p"},"typescript")," installed:"),Object(o.mdx)("pre",{parentName:"li"},Object(o.mdx)("code",Object(r.default)({parentName:"pre"},{className:"language-bash"}),"npm install -g typescript\n"))),Object(o.mdx)("li",{parentName:"ol"},Object(o.mdx)("p",{parentName:"li"},"Review your ",Object(o.mdx)("inlineCode",{parentName:"p"},"tsconfig.json")," to ensure you've set the ",Object(o.mdx)("inlineCode",{parentName:"p"},"compilerOptions")," appropriately.")),Object(o.mdx)("li",{parentName:"ol"},Object(o.mdx)("p",{parentName:"li"},"Run the TypeScript compiler like so:"),Object(o.mdx)("pre",{parentName:"li"},Object(o.mdx)("code",Object(r.default)({parentName:"pre"},{className:"language-bash"}),"tsc --project ./tests/tsconfig.json\n")),Object(o.mdx)("p",{parentName:"li"},"Below is a default output example:"),Object(o.mdx)("pre",{parentName:"li"},Object(o.mdx)("code",Object(r.default)({parentName:"pre"},{className:"language-bash"}),"\u2514\u2500\u2500 tests/\n    \u251c\u2500\u2500 test.one.spec.ts\n    \u251c\u2500\u2500 test.one.spec.js\n    \u251c\u2500\u2500 test.two.spec.ts\n    \u251c\u2500\u2500 test.two.spec.js\n    \u251c\u2500\u2500 test.three.spec.ts\n    \u251c\u2500\u2500 test.three.spec.js\n    \u2514\u2500\u2500 tsconfig.json\n")),Object(o.mdx)("blockquote",{parentName:"li"},Object(o.mdx)("p",{parentName:"blockquote"},"WARNING: the TypeScript compiler will behave in a non-deterministic manner if the ",Object(o.mdx)("inlineCode",{parentName:"p"},"tsconfig.json")," is poorly configured. "),Object(o.mdx)("p",{parentName:"blockquote"},"For more information on how to properly configure ",Object(o.mdx)("inlineCode",{parentName:"p"},"tsconfig.json")," please visit the ",Object(o.mdx)("a",Object(r.default)({parentName:"p"},{href:"https://www.typescriptlang.org/docs/handbook/migrating-from-javascript.html#writing-a-configuration-file"}),"documentation"),"."))),Object(o.mdx)("li",{parentName:"ol"},Object(o.mdx)("p",{parentName:"li"},"Next, edit the ",Object(o.mdx)("inlineCode",{parentName:"p"},"files")," and ",Object(o.mdx)("inlineCode",{parentName:"p"},"suites")," fields in ",Object(o.mdx)("inlineCode",{parentName:"p"},".sauce/config.yml")," in order to ignore the ",Object(o.mdx)("inlineCode",{parentName:"p"},".ts")," files and instead place the ",Object(o.mdx)("inlineCode",{parentName:"p"},".js")," files inside the Testrunner Toolkit container:"),Object(o.mdx)("pre",{parentName:"li"},Object(o.mdx)("code",Object(r.default)({parentName:"pre"},{className:"language-yaml"}),'files:\n  - tests/\nsuites:\n  - name: "basic test"\n    match: ".*.(spec|test).js"\n')),Object(o.mdx)("p",{parentName:"li"},"By default ",Object(o.mdx)("inlineCode",{parentName:"p"},"saucectl")," will pickup any ",Object(o.mdx)("inlineCode",{parentName:"p"},".js")," files located in the designated directory, however with the ",Object(o.mdx)("inlineCode",{parentName:"p"},"suites")," field you can set more granular control with regular expressions.")),Object(o.mdx)("li",{parentName:"ol"},Object(o.mdx)("p",{parentName:"li"},"Finally, run ",Object(o.mdx)("inlineCode",{parentName:"p"},"saucectl")," to execute your TypeScript tests:"),Object(o.mdx)("pre",{parentName:"li"},Object(o.mdx)("code",Object(r.default)({parentName:"pre"},{className:"language-bash"}),"saucectl run -c .sauce/config.yml\n")),Object(o.mdx)("p",{parentName:"li"}," For further information, please refer to the working example of this TypeScript demonstration in the ",Object(o.mdx)("a",Object(r.default)({parentName:"p"},{href:"https://github.com/saucelabs/sauce-puppeteer-runner/tree/master/tests/fixtures/typescript"}),"Sauce Labs Puppeteer Runner")," repository."))))}l.isMDXComponent=!0},222:function(e,t,n){"use strict";n.r(t),n.d(t,"MDXContext",(function(){return l})),n.d(t,"MDXProvider",(function(){return d})),n.d(t,"mdx",(function(){return j})),n.d(t,"useMDXComponents",(function(){return m})),n.d(t,"withMDXComponents",(function(){return u}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),u=function(e){return function(t){var n=m(t.components);return a.a.createElement(e,i({},t,{components:n}))}},m=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=m(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},f=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),l=m(n),u=r,d=l["".concat(i,".").concat(u)]||l[u]||b[u]||o;return n?a.a.createElement(d,s(s({ref:t},c),{},{components:n})):a.a.createElement(d,s({ref:t},c))}));function j(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"}}]);