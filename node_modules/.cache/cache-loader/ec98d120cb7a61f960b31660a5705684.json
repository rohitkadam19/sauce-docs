{"remainingRequest":"/Users/nancysweeney/GH/sauce-docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/core/lib/client/docusaurus.js","dependencies":[{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/core/lib/client/docusaurus.js","mtime":1605895626231},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/cache-loader/dist/cjs.js","mtime":1602877854626},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/babel-loader/lib/index.js","mtime":1605895626604}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiO3ZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0PXJlcXVpcmUoIi9Vc2Vycy9uYW5jeXN3ZWVuZXkvR0gvc2F1Y2UtZG9jcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQiKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywiX19lc01vZHVsZSIse3ZhbHVlOnRydWV9KTtleHBvcnRzLmRlZmF1bHQ9dm9pZCAwO3ZhciBfcmVhY3RSb3V0ZXJDb25maWc9cmVxdWlyZSgicmVhY3Qtcm91dGVyLWNvbmZpZyIpO3ZhciBfcm91dGVzQ2h1bmtOYW1lcz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkBnZW5lcmF0ZWQvcm91dGVzQ2h1bmtOYW1lcyIpKTt2YXIgX3JvdXRlcz1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkBnZW5lcmF0ZWQvcm91dGVzIikpO3ZhciBfcHJlZmV0Y2g9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL3ByZWZldGNoIikpO3ZhciBfcHJlbG9hZD1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4vcHJlbG9hZCIpKTt2YXIgX2ZsYXQ9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL2ZsYXQiKSk7LyoqCiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCBmZXRjaGVkPXt9O2NvbnN0IGxvYWRlZD17fTtjb25zdCBpc1Nsb3dDb25uZWN0aW9uPSgpPT57Ly8gSWYgdXNlciBpcyBvbiBzbG93IG9yIGNvbnN0cmFpbmVkIGNvbm5lY3Rpb24uCmlmKGBjb25uZWN0aW9uYGluIG5hdmlnYXRvcil7aWYoKG5hdmlnYXRvci5jb25uZWN0aW9uLmVmZmVjdGl2ZVR5cGV8fGBgKS5pbmRleE9mKGAyZ2ApIT09LTEmJm5hdmlnYXRvci5jb25uZWN0aW9uLnNhdmVEYXRhKXtyZXR1cm4gdHJ1ZTt9fXJldHVybiBmYWxzZTt9O2NvbnN0IGNhblByZWZldGNoPXJvdXRlUGF0aD0+IWlzU2xvd0Nvbm5lY3Rpb24oKSYmIWxvYWRlZFtyb3V0ZVBhdGhdJiYhZmV0Y2hlZFtyb3V0ZVBhdGhdO2NvbnN0IGNhblByZWxvYWQ9cm91dGVQYXRoPT4haXNTbG93Q29ubmVjdGlvbigpJiYhbG9hZGVkW3JvdXRlUGF0aF07Y29uc3QgZmxhdHRlbj1hcnJheXM9PkFycmF5LnByb3RvdHlwZS5jb25jYXQuYXBwbHkoW10sYXJyYXlzKTsvLyBSZW1vdmUgdGhlIGxhc3QgcGFydCBjb250YWluaW5nIHRoZSByb3V0ZSBoYXNoCi8vIGlucHV0OiAvYmxvZy8yMDE4LzEyLzE0L0hhcHB5LUZpcnN0LUJpcnRoZGF5LVNsYXNoLWZlOQovLyBvdXRwdXQ6IC9ibG9nLzIwMTgvMTIvMTQvSGFwcHktRmlyc3QtQmlydGhkYXktU2xhc2gKY29uc3QgcmVtb3ZlUm91dGVOYW1lSGFzaD1zdHI9PnN0ci5yZXBsYWNlKC8oLVteLV0rKSQvLCcnKTtjb25zdCBnZXRDaHVua05hbWVzVG9Mb2FkPXBhdGg9PntyZXR1cm4gZmxhdHRlbihPYmplY3QuZW50cmllcyhfcm91dGVzQ2h1bmtOYW1lcy5kZWZhdWx0KS5maWx0ZXIoKFtyb3V0ZU5hbWVXaXRoSGFzaF0pPT5yZW1vdmVSb3V0ZU5hbWVIYXNoKHJvdXRlTmFtZVdpdGhIYXNoKT09PXBhdGgpLm1hcCgoWyxyb3V0ZUNodW5rc10pPT57Ly8gZmxhdCgpIGlzIHVzZWZ1bCBmb3IgbmVzdGVkIGNodW5rIG5hbWVzLCBpdCdzIG5vdCBsaWtlIGFycmF5LmZsYXQoKQpyZXR1cm4gT2JqZWN0LnZhbHVlcygoMCxfZmxhdC5kZWZhdWx0KShyb3V0ZUNodW5rcykpO30pKTt9O2NvbnN0IGRvY3VzYXVydXM9e3ByZWZldGNoOnJvdXRlUGF0aD0+e2lmKCFjYW5QcmVmZXRjaChyb3V0ZVBhdGgpKXtyZXR1cm4gZmFsc2U7fS8vIFByZXZlbnQgZnV0dXJlIGR1cGxpY2F0ZSBwcmVmZXRjaCBvZiByb3V0ZVBhdGguCmZldGNoZWRbcm91dGVQYXRoXT10cnVlOy8vIEZpbmQgYWxsIHdlYnBhY2sgY2h1bmsgbmFtZXMgbmVlZGVkLgpjb25zdCBtYXRjaGVzPSgwLF9yZWFjdFJvdXRlckNvbmZpZy5tYXRjaFJvdXRlcykoX3JvdXRlcy5kZWZhdWx0LHJvdXRlUGF0aCk7Y29uc3QgY2h1bmtOYW1lc05lZWRlZD1mbGF0dGVuKG1hdGNoZXMubWFwKG1hdGNoPT5nZXRDaHVua05hbWVzVG9Mb2FkKG1hdGNoLnJvdXRlLnBhdGgpKSk7Ly8gUHJlZmV0Y2ggYWxsIHdlYnBhY2sgY2h1bmsgYXNzZXRzIGZpbGUgbmVlZGVkLgpjaHVua05hbWVzTmVlZGVkLmZvckVhY2goY2h1bmtOYW1lPT57Ly8gIl9fd2VicGFja19yZXF1aXJlX18uZ2NhIiBpcyBhIGN1c3RvbSBmdW5jdGlvbiBwcm92aWRlZCBieSBDaHVua0Fzc2V0UGx1Z2luLgovLyBQYXNzIGl0IHRoZSBjaHVua05hbWUgb3IgY2h1bmtJZCB5b3Ugd2FudCB0byBsb2FkIGFuZCBpdCB3aWxsIHJldHVybiB0aGUgVVJMIGZvciB0aGF0IGNodW5rLgovLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWYKY29uc3QgY2h1bmtBc3NldD1fX3dlYnBhY2tfcmVxdWlyZV9fLmdjYShjaHVua05hbWUpOy8vIEluIHNvbWUgY2FzZXMsIHdlYnBhY2sgbWlnaHQgZGVjaWRlIHRvIG9wdGltaXplIGZ1cnRoZXIgJiBoZW5jZSB0aGUgY2h1bmsgYXNzZXRzIGFyZSBtZXJnZWQgdG8gYW5vdGhlciBjaHVuay9wcmV2aW91cyBjaHVuay4KLy8gSGVuY2UsIHdlIGNhbiBzYWZlbHkgZmlsdGVyIGl0IG91dC9kb24ndCBuZWVkIHRvIGxvYWQgaXQuCmlmKGNodW5rQXNzZXQmJiEvdW5kZWZpbmVkLy50ZXN0KGNodW5rQXNzZXQpKXsoMCxfcHJlZmV0Y2guZGVmYXVsdCkoY2h1bmtBc3NldCk7fX0pO3JldHVybiB0cnVlO30scHJlbG9hZDpyb3V0ZVBhdGg9PntpZighY2FuUHJlbG9hZChyb3V0ZVBhdGgpKXtyZXR1cm4gZmFsc2U7fWxvYWRlZFtyb3V0ZVBhdGhdPXRydWU7KDAsX3ByZWxvYWQuZGVmYXVsdCkoX3JvdXRlcy5kZWZhdWx0LHJvdXRlUGF0aCk7cmV0dXJuIHRydWU7fX07dmFyIF9kZWZhdWx0PWRvY3VzYXVydXM7ZXhwb3J0cy5kZWZhdWx0PV9kZWZhdWx0Ow=="},{"version":3,"sources":["/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/core/lib/client/docusaurus.js"],"names":["fetched","loaded","isSlowConnection","navigator","connection","effectiveType","indexOf","saveData","canPrefetch","routePath","canPreload","flatten","arrays","Array","prototype","concat","apply","removeRouteNameHash","str","replace","getChunkNamesToLoad","path","Object","entries","routesChunkNames","filter","routeNameWithHash","map","routeChunks","values","docusaurus","prefetch","matches","routes","chunkNamesNeeded","match","route","forEach","chunkName","chunkAsset","__webpack_require__","gca","test","preload"],"mappings":"+NAMA,sDACA,qFACA,iEACA,4DACA,0DACA,oDAXA;AACA;AACA;AACA;AACA;AACA,GAOA,KAAMA,CAAAA,OAAO,CAAG,EAAhB,CACA,KAAMC,CAAAA,MAAM,CAAG,EAAf,CACA,KAAMC,CAAAA,gBAAgB,CAAG,IAAM,CAC3B;AACA,GAAK,YAAD,EAAgBC,CAAAA,SAApB,CAA+B,CAC3B,GAAI,CAACA,SAAS,CAACC,UAAV,CAAqBC,aAArB,EAAuC,EAAxC,EAA2CC,OAA3C,CAAoD,IAApD,IAA6D,CAAC,CAA9D,EACAH,SAAS,CAACC,UAAV,CAAqBG,QADzB,CACmC,CAC/B,MAAO,KAAP,CACH,CACJ,CACD,MAAO,MAAP,CACH,CATD,CAUA,KAAMC,CAAAA,WAAW,CAAIC,SAAD,EAAe,CAACP,gBAAgB,EAAjB,EAAuB,CAACD,MAAM,CAACQ,SAAD,CAA9B,EAA6C,CAACT,OAAO,CAACS,SAAD,CAAxF,CACA,KAAMC,CAAAA,UAAU,CAAID,SAAD,EAAe,CAACP,gBAAgB,EAAjB,EAAuB,CAACD,MAAM,CAACQ,SAAD,CAAhE,CACA,KAAME,CAAAA,OAAO,CAAIC,MAAD,EAAYC,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuBC,KAAvB,CAA6B,EAA7B,CAAiCJ,MAAjC,CAA5B,CACA;AACA;AACA;AACA,KAAMK,CAAAA,mBAAmB,CAAIC,GAAD,EAASA,GAAG,CAACC,OAAJ,CAAY,WAAZ,CAAyB,EAAzB,CAArC,CACA,KAAMC,CAAAA,mBAAmB,CAAIC,IAAD,EAAU,CAClC,MAAOV,CAAAA,OAAO,CAACW,MAAM,CAACC,OAAP,CAAeC,yBAAf,EACVC,MADU,CACH,CAAC,CAACC,iBAAD,CAAD,GAAyBT,mBAAmB,CAACS,iBAAD,CAAnB,GAA2CL,IADjE,EAEVM,GAFU,CAEN,CAAC,EAAGC,WAAH,CAAD,GAAqB,CAC1B;AACA,MAAON,CAAAA,MAAM,CAACO,MAAP,CAAc,kBAAKD,WAAL,CAAd,CAAP,CACH,CALc,CAAD,CAAd,CAMH,CAPD,CAQA,KAAME,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAGtB,SAAD,EAAe,CACrB,GAAI,CAACD,WAAW,CAACC,SAAD,CAAhB,CAA6B,CACzB,MAAO,MAAP,CACH,CACD;AACAT,OAAO,CAACS,SAAD,CAAP,CAAqB,IAArB,CACA;AACA,KAAMuB,CAAAA,OAAO,CAAG,mCAAYC,eAAZ,CAAoBxB,SAApB,CAAhB,CACA,KAAMyB,CAAAA,gBAAgB,CAAGvB,OAAO,CAACqB,OAAO,CAACL,GAAR,CAAaQ,KAAD,EAAWf,mBAAmB,CAACe,KAAK,CAACC,KAAN,CAAYf,IAAb,CAA1C,CAAD,CAAhC,CACA;AACAa,gBAAgB,CAACG,OAAjB,CAA0BC,SAAD,EAAe,CACpC;AACA;AACA;AACA,KAAMC,CAAAA,UAAU,CAAGC,mBAAmB,CAACC,GAApB,CAAwBH,SAAxB,CAAnB,CACA;AACA;AACA,GAAIC,UAAU,EAAI,CAAC,YAAYG,IAAZ,CAAiBH,UAAjB,CAAnB,CAAiD,CAC7C,sBAAeA,UAAf,EACH,CACJ,CAVD,EAWA,MAAO,KAAP,CACH,CAvBc,CAwBfI,OAAO,CAAGlC,SAAD,EAAe,CACpB,GAAI,CAACC,UAAU,CAACD,SAAD,CAAf,CAA4B,CACxB,MAAO,MAAP,CACH,CACDR,MAAM,CAACQ,SAAD,CAAN,CAAoB,IAApB,CACA,qBAAcwB,eAAd,CAAsBxB,SAAtB,EACA,MAAO,KAAP,CACH,CA/Bc,CAAnB,C,aAiCeqB,U","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { matchRoutes } from 'react-router-config';\nimport routesChunkNames from '@generated/routesChunkNames';\nimport routes from '@generated/routes';\nimport prefetchHelper from './prefetch';\nimport preloadHelper from './preload';\nimport flat from './flat';\nconst fetched = {};\nconst loaded = {};\nconst isSlowConnection = () => {\n    // If user is on slow or constrained connection.\n    if (`connection` in navigator) {\n        if ((navigator.connection.effectiveType || ``).indexOf(`2g`) !== -1 &&\n            navigator.connection.saveData) {\n            return true;\n        }\n    }\n    return false;\n};\nconst canPrefetch = (routePath) => !isSlowConnection() && !loaded[routePath] && !fetched[routePath];\nconst canPreload = (routePath) => !isSlowConnection() && !loaded[routePath];\nconst flatten = (arrays) => Array.prototype.concat.apply([], arrays);\n// Remove the last part containing the route hash\n// input: /blog/2018/12/14/Happy-First-Birthday-Slash-fe9\n// output: /blog/2018/12/14/Happy-First-Birthday-Slash\nconst removeRouteNameHash = (str) => str.replace(/(-[^-]+)$/, '');\nconst getChunkNamesToLoad = (path) => {\n    return flatten(Object.entries(routesChunkNames)\n        .filter(([routeNameWithHash]) => removeRouteNameHash(routeNameWithHash) === path)\n        .map(([, routeChunks]) => {\n        // flat() is useful for nested chunk names, it's not like array.flat()\n        return Object.values(flat(routeChunks));\n    }));\n};\nconst docusaurus = {\n    prefetch: (routePath) => {\n        if (!canPrefetch(routePath)) {\n            return false;\n        }\n        // Prevent future duplicate prefetch of routePath.\n        fetched[routePath] = true;\n        // Find all webpack chunk names needed.\n        const matches = matchRoutes(routes, routePath);\n        const chunkNamesNeeded = flatten(matches.map((match) => getChunkNamesToLoad(match.route.path)));\n        // Prefetch all webpack chunk assets file needed.\n        chunkNamesNeeded.forEach((chunkName) => {\n            // \"__webpack_require__.gca\" is a custom function provided by ChunkAssetPlugin.\n            // Pass it the chunkName or chunkId you want to load and it will return the URL for that chunk.\n            // eslint-disable-next-line no-undef\n            const chunkAsset = __webpack_require__.gca(chunkName);\n            // In some cases, webpack might decide to optimize further & hence the chunk assets are merged to another chunk/previous chunk.\n            // Hence, we can safely filter it out/don't need to load it.\n            if (chunkAsset && !/undefined/.test(chunkAsset)) {\n                prefetchHelper(chunkAsset);\n            }\n        });\n        return true;\n    },\n    preload: (routePath) => {\n        if (!canPreload(routePath)) {\n            return false;\n        }\n        loaded[routePath] = true;\n        preloadHelper(routes, routePath);\n        return true;\n    },\n};\nexport default docusaurus;\n"]}]}