{"remainingRequest":"/Users/nancysweeney/GH/sauce-docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/index.js","dependencies":[{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/index.js","mtime":1605895629027},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/cache-loader/dist/cjs.js","mtime":1602877854626},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/babel-loader/lib/index.js","mtime":1605895626604}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}