{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{192:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"MDXContext\",(function(){return d})),n.d(t,\"MDXProvider\",(function(){return p})),n.d(t,\"mdx\",(function(){return O})),n.d(t,\"useMDXComponents\",(function(){return m})),n.d(t,\"withMDXComponents\",(function(){return u}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=r.a.createContext({}),u=function(e){return function(t){var n=m(t.components);return r.a.createElement(e,o({},t,{components:n}))}},m=function(e){var t=r.a.useContext(d),n=t;return e&&(n=\"function\"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=m(e.components);return r.a.createElement(d.Provider,{value:t},e.children)},b={inlineCode:\"code\",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},f=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,s=c(e,[\"components\",\"mdxType\",\"originalType\",\"parentName\"]),d=m(n),u=a,p=d[\"\".concat(o,\".\").concat(u)]||d[u]||b[u]||i;return n?r.a.createElement(p,l(l({ref:t},s),{},{components:n})):r.a.createElement(p,l({ref:t},s))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if(\"string\"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType=\"string\"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}f.displayName=\"MDXCreateElement\"},54:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"frontMatter\",(function(){return o})),n.d(t,\"metadata\",(function(){return s})),n.d(t,\"rightToc\",(function(){return l})),n.d(t,\"default\",(function(){return d}));var a=n(3),r=n(8),i=(n(0),n(192)),o={id:\"setting-up-single-sign-on\",title:\"Setting Up Single Sign-On\",sidebar_label:\"Setting Up Single Sign-On\"},s={unversionedId:\"basics/sso/setting-up-single-sign-on\",id:\"basics/sso/setting-up-single-sign-on\",isDocsHomePage:!1,title:\"Setting Up Single Sign-On\",description:\"ENTERPRISE PLANS ONLY\",source:\"@site/docs/basics/sso/setting-up-single-sign-on.md\",slug:\"/basics/sso/setting-up-single-sign-on\",permalink:\"/basics/sso/setting-up-single-sign-on\",editUrl:\"https://github.com/saucelabs/sauce-docs/edit/master/docs/basics/sso/setting-up-single-sign-on.md\",version:\"current\",lastUpdatedBy:\"Laura Thomas\",lastUpdatedAt:1609875886,sidebar_label:\"Setting Up Single Sign-On\",sidebar:\"someSidebar\",previous:{title:\"Single Sign-On\",permalink:\"/basics/sso-hub\"},next:{title:\"Configuring Active Directory Federation Services (AD FS)\",permalink:\"/basics/sso/config-adfs\"}},l=[{value:\"What You&#39;ll Need\",id:\"what-youll-need\",children:[]},{value:\"SAML2.0 Metadata File\",id:\"saml20-metadata-file\",children:[]},{value:\"SAML2.0 SAML Response Payload\",id:\"saml20-saml-response-payload\",children:[]},{value:\"NameID Specification\",id:\"nameid-specification\",children:[]},{value:\"AudienceRestriction\",id:\"audiencerestriction\",children:[]},{value:\"Configuration Information for SSO\",id:\"configuration-information-for-sso\",children:[]}],c={rightToc:l};function d(e){var t=e.components,n=Object(r.default)(e,[\"components\"]);return Object(i.mdx)(\"wrapper\",Object(a.default)({},c,n,{components:t,mdxType:\"MDXLayout\"}),Object(i.mdx)(\"p\",null,Object(i.mdx)(\"button\",{class:\"badge-blue\"},\"ENTERPRISE PLANS ONLY\")),\"Sauce Labs supports Identity Provider (Idp)-initiated Single Sign-On (SSO). This feature allows your authorized employees to access Sauce Labs in a moderated fashion, as an alternative to using credentials. SSO is available to invoiced accounts, and can only be implemented by the organization admin of the account. If you are an invoice customer, the following sections will guide you on how to set up SSO.\",Object(i.mdx)(\"h2\",{id:\"what-youll-need\"},\"What You'll Need\"),Object(i.mdx)(\"ul\",null,Object(i.mdx)(\"li\",{parentName:\"ul\"},\"An enterprise license for Sauce Labs\"),Object(i.mdx)(\"li\",{parentName:\"ul\"},\"Organization admin access (see \",Object(i.mdx)(\"a\",Object(a.default)({parentName:\"li\"},{href:\"/basics/acct-team-mgmt/managing-user-info\"}),\"User Roles\"),\" for more information)\"),Object(i.mdx)(\"li\",{parentName:\"ul\"},\"To export the SAML metadata file for your identity provider\"),Object(i.mdx)(\"li\",{parentName:\"ul\"},\"To be able to use IdP-initiated SAML for this feature\")),Object(i.mdx)(\"h2\",{id:\"saml20-metadata-file\"},\"SAML2.0 Metadata File\"),Object(i.mdx)(\"p\",null,\"Before you can set up SSO, you'll need to export the SAML metadata file for your identity provider and upload it to Sauce Labs when you're configuring SSO.\"),Object(i.mdx)(\"p\",null,\"The SAML metadata file is an XML file that is generated by your IdP and contains information required to establish the link between it and Sauce Labs SSO. The admin for your IdP should be able to provide this file for you. The EntityID attribute \",Object(i.mdx)(\"strong\",{parentName:\"p\"},\"must\"),\" be included in your XML file, set to the Issuer URL (for example, \",Object(i.mdx)(\"strong\",{parentName:\"p\"},\"https:\",Object(i.mdx)(\"span\",null),\"//www.\",Object(i.mdx)(\"span\",null),\"yourcompany.com/sso-prod\"),\"), for the integration to work correctly.\"),Object(i.mdx)(\"h2\",{id:\"saml20-saml-response-payload\"},\"SAML2.0 SAML Response Payload\"),Object(i.mdx)(\"p\",null,\"The following attributes must be included in your SAML assertion, with the expected values, for the integration to work correctly.\"),Object(i.mdx)(\"table\",null,Object(i.mdx)(\"thead\",{parentName:\"table\"},Object(i.mdx)(\"tr\",{parentName:\"thead\"},Object(i.mdx)(\"th\",Object(a.default)({parentName:\"tr\"},{align:null}),\"Attributes\"),Object(i.mdx)(\"th\",Object(a.default)({parentName:\"tr\"},{align:null}),\"Expected Value\"),Object(i.mdx)(\"th\",Object(a.default)({parentName:\"tr\"},{align:null}),\"Example\"))),Object(i.mdx)(\"tbody\",{parentName:\"table\"},Object(i.mdx)(\"tr\",{parentName:\"tbody\"},Object(i.mdx)(\"td\",Object(a.default)({parentName:\"tr\"},{align:null}),\"Issuer\"),Object(i.mdx)(\"td\",Object(a.default)({parentName:\"tr\"},{align:null}),\"URL identifying your organization\"),Object(i.mdx)(\"td\",Object(a.default)({parentName:\"tr\"},{align:null}),\"https:\",Object(i.mdx)(\"span\",null),\"//www.yourcompany\",Object(i.mdx)(\"span\",null),\".com/sso-prod\")),Object(i.mdx)(\"tr\",{parentName:\"tbody\"},Object(i.mdx)(\"td\",Object(a.default)({parentName:\"tr\"},{align:null}),\"NameID\"),Object(i.mdx)(\"td\",Object(a.default)({parentName:\"tr\"},{align:null}),\"User's email address\"),Object(i.mdx)(\"td\",Object(a.default)({parentName:\"tr\"},{align:null}),\"john.\",Object(i.mdx)(\"span\",null),\"smith@\",Object(i.mdx)(\"span\",null),\"yourcompany.com\")))),Object(i.mdx)(\"h2\",{id:\"nameid-specification\"},\"NameID Specification\"),Object(i.mdx)(\"p\",null,\"By default, many IdPs don't set the NameID attribute to be the email address of the user. If the value for this attribute is something other than an email address, you can still integrate your IdP with Sauce SSO.\"),Object(i.mdx)(\"p\",null,\"We recommend setting it to the email address, as this makes it easier to manage through the IdP. When the SSO user name is created, only the section preceding the @ is used. For example, from the email \",Object(i.mdx)(\"strong\",{parentName:\"p\"},\"john.smith\",Object(i.mdx)(\"span\",null),\"@\",Object(i.mdx)(\"span\",null),\"yourcompany.com\"),\", only \",Object(i.mdx)(\"strong\",{parentName:\"p\"},\"john.smith\"),\" would be used.\"),Object(i.mdx)(\"p\",null,\"If the \",Object(i.mdx)(\"strong\",{parentName:\"p\"},\"saml:NameID\"),\" field contains only a user name and no @ symbol, then the SSO username will be based on your Domain Name. If your domain was sauce and the field value was \",Object(i.mdx)(\"strong\",{parentName:\"p\"},\"john.smith\"),\", the SSO user name would be \",Object(i.mdx)(\"strong\",{parentName:\"p\"},\"sso-sauce-john.smith\"),\".\"),Object(i.mdx)(\"h2\",{id:\"audiencerestriction\"},\"AudienceRestriction\"),Object(i.mdx)(\"p\",null,\"This is a required attribute within the SAML assertion that indicates the specific users the assertion is intended for. It must be equal to the value of entityID from SauceLabs metadata based on your data center. For details, see the \",Object(i.mdx)(\"strong\",{parentName:\"p\"},\"Single Sign-On Configuration\"),\" section in \",Object(i.mdx)(\"a\",Object(a.default)({parentName:\"p\"},{href:\"https://wiki.saucelabs.com/display/DOCS/Data+Center+Endpoints\"}),\"Data Center Endpoints\"),\".\"),Object(i.mdx)(\"h2\",{id:\"configuration-information-for-sso\"},\"Configuration Information for SSO\"),Object(i.mdx)(\"p\",null,\"The Signing/Encryption Certificate and Entity AssertionConsumeURLs required for configuring Sauce Labs SSO vary based on your data center. For details, see \",Object(i.mdx)(\"a\",Object(a.default)({parentName:\"p\"},{href:\"https://wiki.saucelabs.com/display/DOCS/Data+Center+Endpoints\"}),\"Data Center Endpoints\"),\". Here are some things to be aware of:\"),Object(i.mdx)(\"ul\",null,Object(i.mdx)(\"li\",{parentName:\"ul\"},\"The Assertion/Issuer Name is \",Object(i.mdx)(\"strong\",{parentName:\"li\"},\"Sauce Labs\")),Object(i.mdx)(\"li\",{parentName:\"ul\"},\"Sauce Labs does not provide a staging environment for pre-integration testing of SSO\"),Object(i.mdx)(\"li\",{parentName:\"ul\"},\"Single logout is not supported, but all sessions time out after 30 minutes of inactivity\")))}d.isMDXComponent=!0}}]);","name":"2126d9df.af5263d4.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[19],{\n\n/***/ 192:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDXContext\", function() { return MDXContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDXProvider\", function() { return MDXProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mdx\", function() { return createElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useMDXComponents\", function() { return useMDXComponents; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withMDXComponents\", function() { return withMDXComponents; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = react__WEBPACK_IMPORTED_MODULE_0___default.a.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, createElementArgArray);\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, args);\n}\n\n\n\n\n/***/ }),\n\n/***/ 54:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"frontMatter\", function() { return frontMatter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"metadata\", function() { return metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rightToc\", function() { return rightToc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MDXContent; });\n/* harmony import */ var _Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);\n/* harmony import */ var _Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(192);\nvar frontMatter={id:'setting-up-single-sign-on',title:'Setting Up Single Sign-On',sidebar_label:'Setting Up Single Sign-On'};var metadata={\"unversionedId\":\"basics/sso/setting-up-single-sign-on\",\"id\":\"basics/sso/setting-up-single-sign-on\",\"isDocsHomePage\":false,\"title\":\"Setting Up Single Sign-On\",\"description\":\"ENTERPRISE PLANS ONLY\",\"source\":\"@site/docs/basics/sso/setting-up-single-sign-on.md\",\"slug\":\"/basics/sso/setting-up-single-sign-on\",\"permalink\":\"/basics/sso/setting-up-single-sign-on\",\"editUrl\":\"https://github.com/saucelabs/sauce-docs/edit/master/docs/basics/sso/setting-up-single-sign-on.md\",\"version\":\"current\",\"lastUpdatedBy\":\"Laura Thomas\",\"lastUpdatedAt\":1609875886,\"sidebar_label\":\"Setting Up Single Sign-On\",\"sidebar\":\"someSidebar\",\"previous\":{\"title\":\"Single Sign-On\",\"permalink\":\"/basics/sso-hub\"},\"next\":{\"title\":\"Configuring Active Directory Federation Services (AD FS)\",\"permalink\":\"/basics/sso/config-adfs\"}};/* @jsxRuntime classic */ /* @jsx mdx */var rightToc=[{value:'What You&#39;ll Need',id:'what-youll-need',children:[]},{value:'SAML2.0 Metadata File',id:'saml20-metadata-file',children:[]},{value:'SAML2.0 SAML Response Payload',id:'saml20-saml-response-payload',children:[]},{value:'NameID Specification',id:'nameid-specification',children:[]},{value:'AudienceRestriction',id:'audiencerestriction',children:[]},{value:'Configuration Information for SSO',id:'configuration-information-for-sso',children:[]}];var layoutProps={rightToc:rightToc};var MDXLayout=\"wrapper\";function MDXContent(_ref){var components=_ref.components,props=Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_ref,[\"components\"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(MDXLayout,Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({},layoutProps,props,{components:components,mdxType:\"MDXLayout\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"button\",{class:\"badge-blue\"},\"ENTERPRISE PLANS ONLY\")),\"Sauce Labs supports Identity Provider (Idp)-initiated Single Sign-On (SSO). This feature allows your authorized employees to access Sauce Labs in a moderated fashion, as an alternative to using credentials. SSO is available to invoiced accounts, and can only be implemented by the organization admin of the account. If you are an invoice customer, the following sections will guide you on how to set up SSO.\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\",{\"id\":\"what-youll-need\"},\"What You'll Need\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"An enterprise license for Sauce Labs\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"Organization admin access (see \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"li\"},{\"href\":\"/basics/acct-team-mgmt/managing-user-info\"}),\"User Roles\"),\" for more information)\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"To export the SAML metadata file for your identity provider\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"To be able to use IdP-initiated SAML for this feature\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\",{\"id\":\"saml20-metadata-file\"},\"SAML2.0 Metadata File\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Before you can set up SSO, you'll need to export the SAML metadata file for your identity provider and upload it to Sauce Labs when you're configuring SSO.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"The SAML metadata file is an XML file that is generated by your IdP and contains information required to establish the link between it and Sauce Labs SSO. The admin for your IdP should be able to provide this file for you. The EntityID attribute \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"must\"),\" be included in your XML file, set to the Issuer URL (for example, \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"https:\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"span\",null),\"//www.\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"span\",null),\"yourcompany.com/sso-prod\"),\"), for the integration to work correctly.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\",{\"id\":\"saml20-saml-response-payload\"},\"SAML2.0 SAML Response Payload\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"The following attributes must be included in your SAML assertion, with the expected values, for the integration to work correctly.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"table\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"thead\",{parentName:\"table\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"tr\",{parentName:\"thead\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"th\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"tr\"},{\"align\":null}),\"Attributes\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"th\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"tr\"},{\"align\":null}),\"Expected Value\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"th\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"tr\"},{\"align\":null}),\"Example\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"tbody\",{parentName:\"table\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"tr\",{parentName:\"tbody\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"td\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"tr\"},{\"align\":null}),\"Issuer\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"td\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"tr\"},{\"align\":null}),\"URL identifying your organization\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"td\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"tr\"},{\"align\":null}),\"https:\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"span\",null),\"//www.yourcompany\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"span\",null),\".com/sso-prod\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"tr\",{parentName:\"tbody\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"td\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"tr\"},{\"align\":null}),\"NameID\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"td\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"tr\"},{\"align\":null}),\"User's email address\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"td\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"tr\"},{\"align\":null}),\"john.\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"span\",null),\"smith@\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"span\",null),\"yourcompany.com\")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\",{\"id\":\"nameid-specification\"},\"NameID Specification\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"By default, many IdPs don't set the NameID attribute to be the email address of the user. If the value for this attribute is something other than an email address, you can still integrate your IdP with Sauce SSO.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"We recommend setting it to the email address, as this makes it easier to manage through the IdP. When the SSO user name is created, only the section preceding the @ is used. For example, from the email \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"john.smith\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"span\",null),\"@\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"span\",null),\"yourcompany.com\"),\", only \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"john.smith\"),\" would be used.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"If the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"saml:NameID\"),\" field contains only a user name and no @ symbol, then the SSO username will be based on your Domain Name. If your domain was sauce and the field value was \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"john.smith\"),\", the SSO user name would be \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"sso-sauce-john.smith\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\",{\"id\":\"audiencerestriction\"},\"AudienceRestriction\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"This is a required attribute within the SAML assertion that indicates the specific users the assertion is intended for. It must be equal to the value of entityID from SauceLabs metadata based on your data center. For details, see the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"Single Sign-On Configuration\"),\" section in \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"https://wiki.saucelabs.com/display/DOCS/Data+Center+Endpoints\"}),\"Data Center Endpoints\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\",{\"id\":\"configuration-information-for-sso\"},\"Configuration Information for SSO\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"The Signing/Encryption Certificate and Entity AssertionConsumeURLs required for configuring Sauce Labs SSO vary based on your data center. For details, see \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"https://wiki.saucelabs.com/display/DOCS/Data+Center+Endpoints\"}),\"Data Center Endpoints\"),\". Here are some things to be aware of:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"The Assertion/Issuer Name is \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"li\"},\"Sauce Labs\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"Sauce Labs does not provide a staging environment for pre-integration testing of SSO\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"Single logout is not supported, but all sessions time out after 30 minutes of inactivity\")));};MDXContent.isMDXComponent=true;\n\n/***/ })\n\n}]);","inputSourceMap":null}