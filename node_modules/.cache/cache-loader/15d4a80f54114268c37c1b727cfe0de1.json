{"remainingRequest":"/Users/nancysweeney/GH/sauce-docs/node_modules/babel-loader/lib/index.js??ref--8-1!/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/core/lib/client/exports/Link.js","dependencies":[{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/core/lib/client/exports/Link.js","mtime":1613152381518},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/cache-loader/dist/cjs.js","mtime":1602877854626},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/babel-loader/lib/index.js","mtime":1605895626604}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiO3ZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0PXJlcXVpcmUoIi9Vc2Vycy9uYW5jeXN3ZWVuZXkvR0gvc2F1Y2UtZG9jcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQiKTt2YXIgX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQ9cmVxdWlyZSgiL1VzZXJzL25hbmN5c3dlZW5leS9HSC9zYXVjZS1kb2NzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywiX19lc01vZHVsZSIse3ZhbHVlOnRydWV9KTtleHBvcnRzLmRlZmF1bHQ9dm9pZCAwO3ZhciBfcmVhY3Q9X2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZSgicmVhY3QiKSk7dmFyIF9yZWFjdFJvdXRlckRvbT1yZXF1aXJlKCJyZWFjdC1yb3V0ZXItZG9tIik7dmFyIF9pc0ludGVybmFsVXJsPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi9pc0ludGVybmFsVXJsIikpO3ZhciBfRXhlY3V0aW9uRW52aXJvbm1lbnQ9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL0V4ZWN1dGlvbkVudmlyb25tZW50IikpO3ZhciBfTGlua3NDb2xsZWN0b3I9cmVxdWlyZSgiLi4vTGlua3NDb2xsZWN0b3IiKTt2YXIgX3VzZUJhc2VVcmw9cmVxdWlyZSgiLi91c2VCYXNlVXJsIik7LyoqCiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi92YXIgX19yZXN0PXZvaWQgMCYmKHZvaWQgMCkuX19yZXN0fHxmdW5jdGlvbihzLGUpe3ZhciB0PXt9O2Zvcih2YXIgcCBpbiBzKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocyxwKSYmZS5pbmRleE9mKHApPDApdFtwXT1zW3BdO31pZihzIT1udWxsJiZ0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scz09PSJmdW5jdGlvbiIpZm9yKHZhciBpPTAscD1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHMpO2k8cC5sZW5ndGg7aSsrKXtpZihlLmluZGV4T2YocFtpXSk8MCYmT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHMscFtpXSkpdFtwW2ldXT1zW3BbaV1dO31yZXR1cm4gdDt9Oy8vIFRPRE8gYWxsIHRoaXMgd291bGRuJ3QgYmUgbmVjZXNzYXJ5IGlmIHdlIHVzZWQgUmVhY3RSb3V0ZXIgYmFzZW5hbWUgZmVhdHVyZQovLyBXZSBkb24ndCBhdXRvbWF0aWNhbGx5IGFkZCBiYXNlIHVybHMgdG8gYWxsIGxpbmtzLAovLyBvbmx5IHRoZSAic2FmZSIgb25lcywgc3RhcnRpbmcgd2l0aCAvIChsaWtlIC9kb2NzL2ludHJvZHVjdGlvbikKLy8gdGhpcyBpcyBiZWNhdXNlIHVzZUJhc2VVcmwoKSBhY3R1YWxseSB0cmFuc2Zvcm1zIHJlbGF0aXZlIGxpbmtzCi8vIGxpa2UgImludHJvZHVjdGlvbiIgdG8gIi9iYXNlVXJsL2ludHJvZHVjdGlvbiIgPT4gYmFkIGJlaGF2aW9yIHRvIGZpeAp2YXIgc2hvdWxkQWRkQmFzZVVybEF1dG9tYXRpY2FsbHk9ZnVuY3Rpb24gc2hvdWxkQWRkQmFzZVVybEF1dG9tYXRpY2FsbHkodG8pe3JldHVybiB0by5zdGFydHNXaXRoKCcvJyk7fTtmdW5jdGlvbiBMaW5rKF9hKXt2YXIgX2I7dmFyIGlzTmF2TGluaz1fYS5pc05hdkxpbmssdG89X2EudG8saHJlZj1fYS5ocmVmLGFjdGl2ZUNsYXNzTmFtZT1fYS5hY3RpdmVDbGFzc05hbWUsaXNBY3RpdmU9X2EuaXNBY3RpdmUsbm9Ccm9rZW5MaW5rQ2hlY2s9X2FbJ2RhdGEtbm9Ccm9rZW5MaW5rQ2hlY2snXSxfYSRhdXRvQWRkQmFzZVVybD1fYS5hdXRvQWRkQmFzZVVybCxhdXRvQWRkQmFzZVVybD1fYSRhdXRvQWRkQmFzZVVybD09PXZvaWQgMD90cnVlOl9hJGF1dG9BZGRCYXNlVXJsLHByb3BzPV9fcmVzdChfYSxbImlzTmF2TGluayIsInRvIiwiaHJlZiIsImFjdGl2ZUNsYXNzTmFtZSIsImlzQWN0aXZlIiwnZGF0YS1ub0Jyb2tlbkxpbmtDaGVjaycsImF1dG9BZGRCYXNlVXJsIl0pO3ZhciBfdXNlQmFzZVVybFV0aWxzPSgwLF91c2VCYXNlVXJsLnVzZUJhc2VVcmxVdGlscykoKSx3aXRoQmFzZVVybD1fdXNlQmFzZVVybFV0aWxzLndpdGhCYXNlVXJsO3ZhciBsaW5rc0NvbGxlY3Rvcj0oMCxfTGlua3NDb2xsZWN0b3IudXNlTGlua3NDb2xsZWN0b3IpKCk7Ly8gSU1QT1JUQU5UOiB1c2luZyB0byBvciBocmVmIHNob3VsZCBub3QgY2hhbmdlIGFueXRoaW5nCi8vIEZvciBleGFtcGxlLCBNRFggbGlua3Mgd2lsbCBBTFdBWVMgZ2l2ZSB1cyB0aGUgaHJlZiBwcm9wcwovLyBVc2luZyBvbmUgcHJvcCBvciB0aGUgb3RoZXIgc2hvdWxkIG5vdCBiZSB1c2VkIHRvIGRpc3Rpbmd1aXNoCi8vIGludGVybmFsIGxpbmtzICgvZG9jcy9teURvYykgZnJvbSBleHRlcm5hbCBsaW5rcyAoaHR0cHM6Ly9naXRodWIuY29tKQp2YXIgdGFyZ2V0TGlua1VucHJlZml4ZWQ9dG98fGhyZWY7ZnVuY3Rpb24gbWF5YmVBZGRCYXNlVXJsKHN0cil7cmV0dXJuIGF1dG9BZGRCYXNlVXJsJiZzaG91bGRBZGRCYXNlVXJsQXV0b21hdGljYWxseShzdHIpP3dpdGhCYXNlVXJsKHN0cik6c3RyO312YXIgaXNJbnRlcm5hbD0oMCxfaXNJbnRlcm5hbFVybC5kZWZhdWx0KSh0YXJnZXRMaW5rVW5wcmVmaXhlZCk7Ly8gcGF0aG5hbWU6Ly8gaXMgYSBzcGVjaWFsICJwcm90b2NvbCIgd2UgdXNlIHRvIHRlbGwgRG9jdXNhdXJ1cyBsaW5rCi8vIHRoYXQgYSBsaW5rIGlzIG5vdCAiaW50ZXJuYWwiIGFuZCB0aGF0IHdlIHNob3VsZG4ndCB1c2UgaGlzdG9yeS5wdXNoKCkKLy8gdGhpcyBpcyBub3QgaWRlYWwgYnV0IGEgZ29vZCBlbm91Z2ggZXNjYXBlIGhhdGNoIGZvciBub3cKLy8gc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9kb2N1c2F1cnVzL2lzc3Vlcy8zMzA5Ci8vIG5vdGU6IHdlIHdhbnQgYmFzZVVybCB0byBiZSBhcHBlbmRlZCAoc2VlIGlzc3VlIGZvciBkZXRhaWxzKQovLyBUT0RPIHJlYWQgcm91dGVzIGFuZCBhdXRvbWF0aWNhbGx5IGRldGVjdCBpbnRlcm5hbC9leHRlcm5hbCBsaW5rcz8KdmFyIHRhcmdldExpbmtXaXRob3V0UGF0aG5hbWVQcm90b2NvbD10YXJnZXRMaW5rVW5wcmVmaXhlZD09PW51bGx8fHRhcmdldExpbmtVbnByZWZpeGVkPT09dm9pZCAwP3ZvaWQgMDp0YXJnZXRMaW5rVW5wcmVmaXhlZC5yZXBsYWNlKCdwYXRobmFtZTovLycsJycpOy8vIFRPRE8gd2Ugc2hvdWxkIHVzZSBSZWFjdFJvdXRlciBiYXNlbmFtZSBmZWF0dXJlIGluc3RlYWQhCi8vIEF1dG9tYXRpY2FsbHkgYXBwbHkgYmFzZSB1cmwgaW4gbGlua3MgdGhhdCBzdGFydCB3aXRoIC8KdmFyIHRhcmdldExpbms9dHlwZW9mIHRhcmdldExpbmtXaXRob3V0UGF0aG5hbWVQcm90b2NvbCE9PSd1bmRlZmluZWQnP21heWJlQWRkQmFzZVVybCh0YXJnZXRMaW5rV2l0aG91dFBhdGhuYW1lUHJvdG9jb2wpOnVuZGVmaW5lZDt2YXIgcHJlbG9hZGVkPSgwLF9yZWFjdC51c2VSZWYpKGZhbHNlKTt2YXIgTGlua0NvbXBvbmVudD1pc05hdkxpbms/X3JlYWN0Um91dGVyRG9tLk5hdkxpbms6X3JlYWN0Um91dGVyRG9tLkxpbms7dmFyIElPU3VwcG9ydGVkPV9FeGVjdXRpb25FbnZpcm9ubWVudC5kZWZhdWx0LmNhblVzZUludGVyc2VjdGlvbk9ic2VydmVyO3ZhciBpbzt2YXIgaGFuZGxlSW50ZXJzZWN0aW9uPWZ1bmN0aW9uIGhhbmRsZUludGVyc2VjdGlvbihlbCxjYil7aW89bmV3IHdpbmRvdy5JbnRlcnNlY3Rpb25PYnNlcnZlcihmdW5jdGlvbihlbnRyaWVzKXtlbnRyaWVzLmZvckVhY2goZnVuY3Rpb24oZW50cnkpe2lmKGVsPT09ZW50cnkudGFyZ2V0KXsvLyBJZiBlbGVtZW50IGlzIGluIHZpZXdwb3J0LCBzdG9wIGxpc3RlbmluZy9vYnNlcnZpbmcgYW5kIHJ1biBjYWxsYmFjay4KLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0ludGVyc2VjdGlvbl9PYnNlcnZlcl9BUEkKaWYoZW50cnkuaXNJbnRlcnNlY3Rpbmd8fGVudHJ5LmludGVyc2VjdGlvblJhdGlvPjApe2lvLnVub2JzZXJ2ZShlbCk7aW8uZGlzY29ubmVjdCgpO2NiKCk7fX19KTt9KTsvLyBBZGQgZWxlbWVudCB0byB0aGUgb2JzZXJ2ZXIuCmlvLm9ic2VydmUoZWwpO307dmFyIGhhbmRsZVJlZj1mdW5jdGlvbiBoYW5kbGVSZWYocmVmKXtpZihJT1N1cHBvcnRlZCYmcmVmJiZpc0ludGVybmFsKXsvLyBJZiBJTyBzdXBwb3J0ZWQgYW5kIGVsZW1lbnQgcmVmZXJlbmNlIGZvdW5kLCBzZXR1cCBPYnNlcnZlciBmdW5jdGlvbmFsaXR5LgpoYW5kbGVJbnRlcnNlY3Rpb24ocmVmLGZ1bmN0aW9uKCl7d2luZG93LmRvY3VzYXVydXMucHJlZmV0Y2godGFyZ2V0TGluayk7fSk7fX07dmFyIG9uTW91c2VFbnRlcj1mdW5jdGlvbiBvbk1vdXNlRW50ZXIoKXtpZighcHJlbG9hZGVkLmN1cnJlbnQpe3dpbmRvdy5kb2N1c2F1cnVzLnByZWxvYWQodGFyZ2V0TGluayk7cHJlbG9hZGVkLmN1cnJlbnQ9dHJ1ZTt9fTsoMCxfcmVhY3QudXNlRWZmZWN0KShmdW5jdGlvbigpey8vIElmIElPIGlzIG5vdCBzdXBwb3J0ZWQuIFdlIHByZWZldGNoIGJ5IGRlZmF1bHQgKG9ubHkgb25jZSkuCmlmKCFJT1N1cHBvcnRlZCYmaXNJbnRlcm5hbCl7d2luZG93LmRvY3VzYXVydXMucHJlZmV0Y2godGFyZ2V0TGluayk7fS8vIFdoZW4gdW5tb3VudGluZywgc3RvcCBpbnRlcnNlY3Rpb24gb2JzZXJ2ZXIgZnJvbSB3YXRjaGluZy4KcmV0dXJuIGZ1bmN0aW9uKCl7aWYoSU9TdXBwb3J0ZWQmJmlvKXtpby5kaXNjb25uZWN0KCk7fX07fSxbdGFyZ2V0TGluayxJT1N1cHBvcnRlZCxpc0ludGVybmFsXSk7dmFyIGlzQW5jaG9yTGluaz0oX2I9dGFyZ2V0TGluaz09PW51bGx8fHRhcmdldExpbms9PT12b2lkIDA/dm9pZCAwOnRhcmdldExpbmsuc3RhcnRzV2l0aCgnIycpKSE9PW51bGwmJl9iIT09dm9pZCAwP19iOmZhbHNlO3ZhciBpc1JlZ3VsYXJIdG1sTGluaz0hdGFyZ2V0TGlua3x8IWlzSW50ZXJuYWx8fGlzQW5jaG9yTGluaztpZih0YXJnZXRMaW5rJiZpc0ludGVybmFsJiYhaXNBbmNob3JMaW5rJiYhbm9Ccm9rZW5MaW5rQ2hlY2spe2xpbmtzQ29sbGVjdG9yLmNvbGxlY3RMaW5rKHRhcmdldExpbmspO31yZXR1cm4gaXNSZWd1bGFySHRtbExpbms/LyojX19QVVJFX18qLyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUganN4LWExMXkvYW5jaG9yLWhhcy1jb250ZW50Cl9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoImEiLE9iamVjdC5hc3NpZ24oe2hyZWY6dGFyZ2V0TGlua30sdGFyZ2V0TGlua1VucHJlZml4ZWQmJiFpc0ludGVybmFsJiZ7dGFyZ2V0OidfYmxhbmsnLHJlbDonbm9vcGVuZXIgbm9yZWZlcnJlcid9LHByb3BzKSk6LyojX19QVVJFX18qL19yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoTGlua0NvbXBvbmVudCxPYmplY3QuYXNzaWduKHt9LHByb3BzLHtvbk1vdXNlRW50ZXI6b25Nb3VzZUVudGVyLGlubmVyUmVmOmhhbmRsZVJlZix0bzp0YXJnZXRMaW5rfHwnJ30saXNOYXZMaW5rJiZ7aXNBY3RpdmU6aXNBY3RpdmUsYWN0aXZlQ2xhc3NOYW1lOmFjdGl2ZUNsYXNzTmFtZX0pKTt9dmFyIF9kZWZhdWx0PUxpbms7ZXhwb3J0cy5kZWZhdWx0PV9kZWZhdWx0Ow=="},null]}