(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{148:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return i})),n.d(t,"Highlight",(function(){return d})),n.d(t,"default",(function(){return s}));var a=n(3),r=n(8),c=(n(0),n(222)),l={id:"saucectl",title:"Sauce CTL",sidebar_label:"CLI Reference"},o={unversionedId:"testrunner-toolkit/saucectl",id:"testrunner-toolkit/saucectl",isDocsHomePage:!1,title:"Sauce CTL",description:"backgroundColor: color,",source:"@site/docs/testrunner-toolkit/saucectl.md",slug:"/testrunner-toolkit/saucectl",permalink:"/testrunner-toolkit/saucectl",editUrl:"https://github.com/saucelabs/sauce-docs/edit/master/docs/testrunner-toolkit/saucectl.md",version:"current",lastUpdatedBy:"F\xe9lix P",lastUpdatedAt:1613696763,sidebar_label:"CLI Reference",sidebar:"someSidebar",previous:{title:"Using TypeScript Tests",permalink:"/testrunner-toolkit/typescript"},next:{title:"Testrunner FAQs",permalink:"/testrunner-toolkit/faqs"}},i=[{value:"Commands",id:"commands",children:[{value:"<code>configure</code>",id:"configure",children:[]},{value:"<code>new</code>",id:"new",children:[]},{value:"<code>run</code>",id:"run",children:[]}]},{value:"Flags",id:"flags",children:[{value:"<code>ccy</code>",id:"ccy",children:[]},{value:"<code>ci-build-id</code>",id:"ci-build-id",children:[]},{value:"<code>config</code>",id:"config",children:[]},{value:"<code>env</code>",id:"env",children:[]},{value:"<code>region</code>",id:"region",children:[]},{value:"<code>suite</code>",id:"suite",children:[]},{value:"<code>test-env</code>",id:"test-env",children:[]},{value:"<code>timeout</code>",id:"timeout",children:[]},{value:"<code>tunnel-id</code>",id:"tunnel-id",children:[]},{value:"<code>tunnel-parent</code>",id:"tunnel-parent",children:[]},{value:"<code>verbose</code>",id:"verbose",children:[]}]},{value:"Licensing",id:"licensing",children:[]}],d=function(e){var t=e.children,n=e.color;return Object(c.mdx)("span",{style:{backgroundColor:n,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},t)},m={toc:i,Highlight:d};function s(e){var t=e.components,n=Object(r.default)(e,["components"]);return Object(c.mdx)("wrapper",Object(a.default)({},m,n,{components:t,mdxType:"MDXLayout"}),Object(c.mdx)("p",null,"This page provides command line references for ",Object(c.mdx)("inlineCode",{parentName:"p"},"saucectl"),", the CLI tool used with ",Object(c.mdx)("a",Object(a.default)({parentName:"p"},{href:"/testrunner-toolkit"}),"Testrunner Toolkit"),". "),Object(c.mdx)("blockquote",null,Object(c.mdx)("p",{parentName:"blockquote"},"Please refer to the repository ",Object(c.mdx)("a",Object(a.default)({parentName:"p"},{href:"https://github.com/saucelabs/saucectl"}),"README")," for installation, development, and contribution requirements.")),Object(c.mdx)("h2",{id:"commands"},"Commands"),Object(c.mdx)("h3",{id:"configure"},Object(c.mdx)("inlineCode",{parentName:"h3"},"configure")),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Description"),": Sets your ",Object(c.mdx)("a",Object(a.default)({parentName:"p"},{href:"https://app.saucelabs.com/user-settings"}),"Sauce Labs authentication credentials")," and generates a ",Object(c.mdx)("inlineCode",{parentName:"p"},"credentials.yml")," file. Please refer to ",Object(c.mdx)("a",Object(a.default)({parentName:"p"},{href:"/testrunner-toolkit/installation#connecting-to-sauce-labs"}),"the installation page")," for further information."),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Example"),":"),Object(c.mdx)("pre",null,Object(c.mdx)("code",Object(a.default)({parentName:"pre"},{className:"language-bash"}),"saucectl configure\n")),Object(c.mdx)("h3",{id:"new"},Object(c.mdx)("inlineCode",{parentName:"h3"},"new")),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Description"),": Prompts you to choose one of the ",Object(c.mdx)("a",Object(a.default)({parentName:"p"},{href:"/testrunner-toolkit#supported-frameworks-and-browsers"}),"supported frameworks"),". Based on the chosen framework, this command also generates:"),Object(c.mdx)("ul",null,Object(c.mdx)("li",{parentName:"ul"},"a configuration file (e.g. ",Object(c.mdx)("inlineCode",{parentName:"li"},"./sauce/config.yml"),") "),Object(c.mdx)("li",{parentName:"ul"},"a test directory (e.g. ",Object(c.mdx)("inlineCode",{parentName:"li"},"cypress/"),")"),Object(c.mdx)("li",{parentName:"ul"},"an example test (e.g. ",Object(c.mdx)("inlineCode",{parentName:"li"},"example.test.js"),")")),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Example"),":"),Object(c.mdx)("pre",null,Object(c.mdx)("code",Object(a.default)({parentName:"pre"},{className:"language-bash"}),"saucectl new\n")),Object(c.mdx)("h3",{id:"run"},Object(c.mdx)("inlineCode",{parentName:"h3"},"run")),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Description"),": Executes tests based on information in the configuration file (",Object(c.mdx)("a",Object(a.default)({parentName:"p"},{href:"/testrunner-toolkit/configuration"}),Object(c.mdx)("inlineCode",{parentName:"a"},".sauce/config.yml")),")."),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Example"),":"),Object(c.mdx)("pre",null,Object(c.mdx)("code",Object(a.default)({parentName:"pre"},{className:"language-bash"}),"saucectl run\n")),Object(c.mdx)("h2",{id:"flags"},"Flags"),Object(c.mdx)("h3",{id:"ccy"},Object(c.mdx)("inlineCode",{parentName:"h3"},"ccy")),Object(c.mdx)("p",null,Object(c.mdx)("small",null,"supported frameworks: ",Object(c.mdx)(d,{color:"#25c2a0",mdxType:"Highlight"},"cypress"))),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Description"),": Increases your Sauce Labs VM concurrency when ",Object(c.mdx)("a",Object(a.default)({parentName:"p"},{href:"/testrunner-toolkit/running-tests#test-on-sauce-labs"}),"running tests remotely on the Sauce Labs Cloud"),"."),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Example"),":"),Object(c.mdx)("pre",null,Object(c.mdx)("code",Object(a.default)({parentName:"pre"},{className:"language-bash"}),"saucectl run --test-env sauce --ccy 2\n")),Object(c.mdx)("blockquote",null,Object(c.mdx)("p",{parentName:"blockquote"},Object(c.mdx)("strong",{parentName:"p"},"NOTE"),": Concurrency with ",Object(c.mdx)("inlineCode",{parentName:"p"},"saucectl")," is tied to ",Object(c.mdx)("a",Object(a.default)({parentName:"p"},{href:"/testrunner-toolkit/configuration#suites"}),"the test ",Object(c.mdx)("inlineCode",{parentName:"a"},"suites")," field")," in your ",Object(c.mdx)("inlineCode",{parentName:"p"},".sauce/config.yml"),".\nFor example if you have ten ",Object(c.mdx)("inlineCode",{parentName:"p"},".spec")," files split across two tests ",Object(c.mdx)("inlineCode",{parentName:"p"},"suites"),", and you set ",Object(c.mdx)("inlineCode",{parentName:"p"},"--ccy")," to ",Object(c.mdx)("inlineCode",{parentName:"p"},"10"),", the max concurrency is ",Object(c.mdx)("inlineCode",{parentName:"p"},"2"),".")),Object(c.mdx)("h3",{id:"ci-build-id"},Object(c.mdx)("inlineCode",{parentName:"h3"},"ci-build-id")),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Description"),": Overrides the build ID that is otherwise determined based on the CI provider. The config file hash will still be used in addition to this provided CI build ID."),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Example"),":"),Object(c.mdx)("pre",null,Object(c.mdx)("code",Object(a.default)({parentName:"pre"},{className:"language-sh"}),"saucectl run --ci-build-id <value>\n")),Object(c.mdx)("h3",{id:"config"},Object(c.mdx)("inlineCode",{parentName:"h3"},"config")),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Description"),": Run tests from a specific configuration file."),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Shorthand"),": ",Object(c.mdx)("inlineCode",{parentName:"p"},"-c")),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Example"),":"),Object(c.mdx)("pre",null,Object(c.mdx)("code",Object(a.default)({parentName:"pre"},{className:"language-bash"}),"saucectl run --config </path/to/config.yml>\n")),Object(c.mdx)("h3",{id:"env"},Object(c.mdx)("inlineCode",{parentName:"h3"},"env")),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Description"),": Defines environment variables that are available for use by the test framework."),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Example"),":"),Object(c.mdx)("pre",null,Object(c.mdx)("code",Object(a.default)({parentName:"pre"},{className:"language-bash"}),"saucectl run --env <key>=value1> --env <key2>=<value2> ...\n")),Object(c.mdx)("h3",{id:"region"},Object(c.mdx)("inlineCode",{parentName:"h3"},"region")),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Description"),": Sets the Sauce Labs region for test execution. The region corresponds to the available region at ",Object(c.mdx)("a",Object(a.default)({parentName:"p"},{href:"https://app.saucelabs.com"}),"saucelabs.com")," and affects where your job information and assets are going to be stored."),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Example"),":"),Object(c.mdx)("pre",null,Object(c.mdx)("code",Object(a.default)({parentName:"pre"},{className:"language-bash"}),"saucectl run --region <region>\n")),Object(c.mdx)("h3",{id:"suite"},Object(c.mdx)("inlineCode",{parentName:"h3"},"suite")),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Description"),": Specifies a test suite to execute by name."),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Example"),":"),Object(c.mdx)("pre",null,Object(c.mdx)("code",Object(a.default)({parentName:"pre"},{className:"language-bash"}),"saucectl run --suite <suite_name>\n")),Object(c.mdx)("h3",{id:"test-env"},Object(c.mdx)("inlineCode",{parentName:"h3"},"test-env")),Object(c.mdx)("p",null,Object(c.mdx)("small",null,"supported frameworks: ",Object(c.mdx)(d,{color:"#25c2a0",mdxType:"Highlight"},"cypress"))),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Description"),": Specifies the test execution environment:"),Object(c.mdx)("ul",null,Object(c.mdx)("li",{parentName:"ul"},"test locally with ",Object(c.mdx)("inlineCode",{parentName:"li"},"docker")," containers "),Object(c.mdx)("li",{parentName:"ul"},"test remotely on ",Object(c.mdx)("inlineCode",{parentName:"li"},"sauce")," virtual machines")),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Example"),":"),Object(c.mdx)("pre",null,Object(c.mdx)("code",Object(a.default)({parentName:"pre"},{className:"language-bash"}),"saucectl run --test-env <sauce | docker>\n")),Object(c.mdx)("h3",{id:"timeout"},Object(c.mdx)("inlineCode",{parentName:"h3"},"timeout")),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Description"),": Sets the timeout for test runs."),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Example"),":"),Object(c.mdx)("pre",null,Object(c.mdx)("code",Object(a.default)({parentName:"pre"},{className:"language-bash"}),"saucectl run --timeout <seconds>\n")),Object(c.mdx)("h3",{id:"tunnel-id"},Object(c.mdx)("inlineCode",{parentName:"h3"},"tunnel-id")),Object(c.mdx)("p",null,Object(c.mdx)("small",null,Object(c.mdx)(d,{color:"#ad1415",mdxType:"Highlight"},"sauce cloud only")),Object(c.mdx)("a",{href:"/testrunner-toolkit/running-tests#test-on-sauce-labs"},"\u2139")),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Description"),": Sets the tunnel id for a given test run and the chosen ",Object(c.mdx)("a",Object(a.default)({parentName:"p"},{href:"/testrunner-toolkit/running-tests#automation-framework-examples"}),"Testrunner framework"),"."),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Example"),":"),Object(c.mdx)("pre",null,Object(c.mdx)("code",Object(a.default)({parentName:"pre"},{className:"language-bash"}),"saucectl run --tunnel-id <tunnel-id>\n")),Object(c.mdx)("h3",{id:"tunnel-parent"},Object(c.mdx)("inlineCode",{parentName:"h3"},"tunnel-parent")),Object(c.mdx)("p",null,Object(c.mdx)("small",null,Object(c.mdx)(d,{color:"#ad1415",mdxType:"Highlight"},"sauce cloud only")),Object(c.mdx)("a",{href:"/testrunner-toolkit/running-tests#test-on-sauce-labs"},"\u2139")),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Description"),": Sets the tunnel parent for a given test run and the chosen ",Object(c.mdx)("a",Object(a.default)({parentName:"p"},{href:"/testrunner-toolkit/running-tests#automation-framework-examples"}),"Testrunner framework"),"."),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Example"),":"),Object(c.mdx)("pre",null,Object(c.mdx)("code",Object(a.default)({parentName:"pre"},{className:"language-bash"}),"saucectl run --tunnel-id <tunnel-id> --tunnel-parent <tunnel-parent>\n")),Object(c.mdx)("blockquote",null,Object(c.mdx)("p",{parentName:"blockquote"},Object(c.mdx)("strong",{parentName:"p"},"NOTE"),": This flag only works in conjunction with the ",Object(c.mdx)("inlineCode",{parentName:"p"},"tunnel-id")," flag.")),Object(c.mdx)("h3",{id:"verbose"},Object(c.mdx)("inlineCode",{parentName:"h3"},"verbose")),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Description"),": Use the ",Object(c.mdx)("inlineCode",{parentName:"p"},"--verbose")," flag to troubleshoot potential authentication, connection, and/or container issues."),Object(c.mdx)("p",null,Object(c.mdx)("strong",{parentName:"p"},"Example"),":"),Object(c.mdx)("pre",null,Object(c.mdx)("code",Object(a.default)({parentName:"pre"},{className:"language-bash"}),"saucectl run --verbose\n")),Object(c.mdx)("h2",{id:"licensing"},"Licensing"),Object(c.mdx)("p",null,Object(c.mdx)("inlineCode",{parentName:"p"},"saucectl")," is licensed under the Apache License, Version 2.0. See ",Object(c.mdx)("a",Object(a.default)({parentName:"p"},{href:"https://github.com/saucelabs/saucectl/blob/master/LICENSE"}),"LICENSE")," for the full license text."))}s.isMDXComponent=!0},222:function(e,t,n){"use strict";n.r(t),n.d(t,"MDXContext",(function(){return m})),n.d(t,"MDXProvider",(function(){return p})),n.d(t,"mdx",(function(){return j})),n.d(t,"useMDXComponents",(function(){return u})),n.d(t,"withMDXComponents",(function(){return s}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=r.a.createContext({}),s=function(e){return function(t){var n=u(t.components);return r.a.createElement(e,l({},t,{components:n}))}},u=function(e){var t=r.a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.a.createElement(m.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,l=e.parentName,o=d(e,["components","mdxType","originalType","parentName"]),m=u(n),s=a,p=m["".concat(l,".").concat(s)]||m[s]||b[s]||c;return n?r.a.createElement(p,i(i({ref:t},o),{},{components:n})):r.a.createElement(p,i({ref:t},o))}));function j(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,l=new Array(c);l[0]=O;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var d=2;d<c;d++)l[d]=n[d];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}O.displayName="MDXCreateElement"}}]);