{"remainingRequest":"/Users/nancysweeney/GH/sauce-docs/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/nancysweeney/GH/sauce-docs/docs/basics/best-practices/using-attributes-tests.md","dependencies":[{"path":"/Users/nancysweeney/GH/sauce-docs/docs/basics/best-practices/using-attributes-tests.md","mtime":1612378019100},{"path":"/Users/nancysweeney/GH/sauce-docs/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-basics-best-practices-using-attributes-tests-md-347.json","mtime":1614090150575},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/cache-loader/dist/cjs.js","mtime":1602877854626},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/babel-loader/lib/index.js","mtime":1605895626604},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1613152382570},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1613152382276}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/nancysweeney/GH/sauce-docs/docs/basics/best-practices/using-attributes-tests.md"],"names":["React","mdx","frontMatter","id","title","sidebar_label","metadata","useBaseUrl","Tabs","TabItem","toc","value","children","layoutProps","MDXLayout","MDXContent","components","props","label","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'using-attributes-tests',\n\ttitle: 'Using Attributes to Identify Tests',\n\tsidebar_label: 'Using Attributes to Identify Tests'\n};\nexport const metadata = {\n  \"unversionedId\": \"basics/best-practices/using-attributes-tests\",\n  \"id\": \"basics/best-practices/using-attributes-tests\",\n  \"isDocsHomePage\": false,\n  \"title\": \"Using Attributes to Identify Tests\",\n  \"description\": \"By assigning unique attributes (such as test name, tags, and build ID) in your test capabilities, you can then apply these annotations to filter results on your Sauce Labs Test Results and Archive pages. Although not required, following this best practice can make it easier to monitor tests and builds in your CI pipeline.\",\n  \"source\": \"@site/docs/basics/best-practices/using-attributes-tests.md\",\n  \"slug\": \"/basics/best-practices/using-attributes-tests\",\n  \"permalink\": \"/basics/best-practices/using-attributes-tests\",\n  \"editUrl\": \"https://github.com/saucelabs/sauce-docs/edit/master/docs/basics/best-practices/using-attributes-tests.md\",\n  \"version\": \"current\",\n  \"lastUpdatedBy\": \"Author\",\n  \"lastUpdatedAt\": 1539502055,\n  \"sidebar_label\": \"Using Attributes to Identify Tests\"\n};\n  /* @jsxRuntime classic */\n/* @jsx mdx */\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nexport const toc = [{\n  value: 'Code Examples: Build, Tags, and Name',\n  id: 'code-examples-build-tags-and-name',\n  children: []\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`By assigning unique attributes (such as test name, tags, and build ID) in your test capabilities, you can then apply these annotations to filter results on your Sauce Labs Test Results and Archive pages. Although not required, following this best practice can make it easier to monitor tests and builds in your CI pipeline.`}</p>\n    <p>{`You can set these capabilities to be any combination of letters and numbers. To differentiate between builds, it's also a good practice to add a timestamp or CI job/build number at the end of your build tag.`}</p>\n    <p><strong parentName=\"p\">{`NOTE:`}</strong>{` The build name and tags capabilities are not supported in automated real device testing at this time, please check back for future updates with regards to this functionality.`}</p>\n    <p><strong parentName=\"p\">{`NOTE:`}</strong>{` While it's technically possible to use the same build name for multiple test runs, this will cause all of your test results to appear incorrectly as part of a single run. This, in turn, will cause your test results for those builds to be inaccurate.`}</p>\n    <h3 {...{\n      \"id\": \"code-examples-build-tags-and-name\"\n    }}>{`Code Examples: Build, Tags, and Name`}</h3>\n    <Tabs defaultValue=\"java\" values={[{\n      label: 'Java',\n      value: 'java'\n    }, {\n      label: 'C#',\n      value: 'c#'\n    }, {\n      label: 'Node.js',\n      value: 'nodejs'\n    }, {\n      label: 'Python',\n      value: 'python'\n    }, {\n      label: 'Ruby',\n      value: 'ruby'\n    }]} mdxType=\"Tabs\">\n      <TabItem value=\"java\" mdxType=\"TabItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`String username = System.getenv(\"SAUCE_USERNAME\");\nString accessKey = System.getenv(\"SAUCE_ACCESS_KEY\");\nMutableCapabilities sauceOptions = new MutableCapabilities();\nsauceOptions.setCapability(\"name\", \"Web Driver demo Test\");\nsauceOptions.setCapability(\"tags\", \"tag1\");\nsauceOptions.setCapability(\"build\", \"build-1234\");\nsauceOptions.setCapability(\"username\", username);\nsauceOptions.setCapability(\"accessKey\", accessKey);\n\nFirefoxOptions firefoxOptions = new FirefoxOptions();\nfirefoxOptions.setCapability(\"platformName\", \"Windows 10\");\nfirefoxOptions.setCapability(\"browserVersion\", \"79.0\");\nWebDriver driver = new RemoteWebDriver(\nnew URL(\"https://ondemand.saucelabs.com/wd/hub\"),\n    firefoxOptions);\n`}</code></pre>\n      </TabItem>\n      <TabItem value=\"c#\" mdxType=\"TabItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`string _sauceUsername = Environment.GetEnvironmentVariable(\"SAUCE_USERNAME\", EnvironmentVariableTarget.User);\nstring _sauceAccessKey = = Environment.GetEnvironmentVariable(\"SAUCE_ACCESS_KEY\", EnvironmentVariableTarget.User);\nvar sauceOptions = new Dictionary<string, object>\n{\n    [\"username\"] = _sauceUsername,\n    [\"accessKey\"] = _sauceAccessKey,\n    [\"name\"] = \"Web Driver demo Test\",\n    [\"build\"] = \"build-1234\",\n    [\"tags\"] = \"tag1\"\n};\nvar firefoxOptions = new FirefoxOptions()\n{\n    BrowserVersion = \"79.0\",\n    PlatformName = \"Windows 10\",\n    UseSpecCompliantProtocol = true\n};\nfirefoxOptions.AddAdditionalCapability(\"sauce:options\", sauceOptions, true);\nIWebDriver driver = new RemoteWebDriver(new Uri(\"https://ondemand.saucelabs.com/wd/hub\"),\n                firefoxOptions.ToCapabilities(), TimeSpan.FromSeconds(600));\n`}</code></pre>\n      </TabItem>\n      <TabItem value=\"nodejs\" mdxType=\"TabItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`const username = process.env.SAUCE_USERNAME;\nconst accessKey = process.env.SAUCE_ACCESS_KEY;\nconst tags = [\"tag1\", \"tag2\", \"tag3\" ]\nconst driver = new webdriver.Builder()\n    .withCapabilities({\n      'browserName': 'firefox',\n      'platform': 'Windows 10',\n      'version': '79.0',\n      'sauce:options': {\n          'name': 'Web Driver demo Test',\n          'build': 'build-1234',\n          'tags': tags,\n          'username': username,\n          'accessKey': accessKey\n       }\n    })\n    .usingServer(\"https://\" + username + \":\" + accessKey +\n          \"@ondemand.saucelabs.com:443/wd/hub\")\n    .build();\n`}</code></pre>\n      </TabItem>\n      <TabItem value=\"python\" mdxType=\"TabItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`sauce_username = os.environ[\"SAUCE_USERNAME\"]\nsauce_access_key = os.environ[\"SAUCE_ACCESS_KEY\"]\nsauceOptions = {\n    \"build\": \"build-1234\",\n    “name”: “Web Driver demo Test”,\n    “tags”: [ \"tag1\", \"tag2\", \"tag3\" ]\n}\nbrowserOptions =  {\n    'platformName':\"Windows 10\",\n    'browserName': \"firefox\",\n    'browserVersion': '79.0',\n     'sauce:options': sauceOptions\n}\nbrowser = webdriver.Remote(“https://ondemand.saucelabs.com/wd/hub”, desired_capabilities=browserOptions)\n`}</code></pre>\n      </TabItem>\n      <TabItem value=\"ruby\" mdxType=\"TabItem\">\n        <pre><code parentName=\"pre\" {...{\n            \"className\": \"language-js\"\n          }}>{`caps = {\n    browser_name: 'firefox',\n    platform_name: 'windows 10',\n    browser_version: '79.0',\n    \"sauce:options\" => {\n        name: 'Web Driver demo Test',\n        build: 'build-1234',\n        tags: 'tag1',\n        username: ENV['SAUCE_USERNAME'],\n        access_key: ENV['SAUCE_ACCESS_KEY']\n    }\n}\ndriver = Selenium::WebDriver.for(:remote,\n    url: 'https://ondemand.saucelabs.com:443/wd/hub',\n    desired_capabilities: caps)\n`}</code></pre>\n      </TabItem>\n    </Tabs>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}