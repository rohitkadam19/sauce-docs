{"remainingRequest":"/Users/nancysweeney/GH/sauce-docs/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/nancysweeney/GH/sauce-docs/docs/testrunner-toolkit/typescript.md","dependencies":[{"path":"/Users/nancysweeney/GH/sauce-docs/docs/testrunner-toolkit/typescript.md","mtime":1612378019111},{"path":"/Users/nancysweeney/GH/sauce-docs/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-testrunner-toolkit-typescript-md-9e4.json","mtime":1614090150577},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/cache-loader/dist/cjs.js","mtime":1602877854626},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/babel-loader/lib/index.js","mtime":1605895626604},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1613152382570},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1613152382276}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/nancysweeney/GH/sauce-docs/docs/testrunner-toolkit/typescript.md"],"names":["React","mdx","frontMatter","id","title","sidebar_label","metadata","toc","value","children","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'typescript',\n\ttitle: 'Using TypeScript Tests',\n\tsidebar_label: 'Using TypeScript'\n};\nexport const metadata = {\n  \"unversionedId\": \"testrunner-toolkit/typescript\",\n  \"id\": \"testrunner-toolkit/typescript\",\n  \"isDocsHomePage\": false,\n  \"title\": \"Using TypeScript Tests\",\n  \"description\": \"If you wrote your automated tests using TypeScript in either Playwright, Puppeteer, or Cypress, you need to transpile your Typescript files to Javascript before running them with Testrunner Toolkit.\",\n  \"source\": \"@site/docs/testrunner-toolkit/typescript.md\",\n  \"slug\": \"/testrunner-toolkit/typescript\",\n  \"permalink\": \"/testrunner-toolkit/typescript\",\n  \"editUrl\": \"https://github.com/saucelabs/sauce-docs/edit/master/docs/testrunner-toolkit/typescript.md\",\n  \"version\": \"current\",\n  \"lastUpdatedBy\": \"Author\",\n  \"lastUpdatedAt\": 1539502055,\n  \"sidebar_label\": \"Using TypeScript\",\n  \"sidebar\": \"someSidebar\",\n  \"previous\": {\n    \"title\": \"Testrunner Toolkit with GitHub Actions\",\n    \"permalink\": \"/testrunner-toolkit/integrations/github-actions\"\n  },\n  \"next\": {\n    \"title\": \"Sauce CTL\",\n    \"permalink\": \"/testrunner-toolkit/saucectl\"\n  }\n};\n  /* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const toc = [{\n  value: 'What You&#39;ll Need',\n  id: 'what-youll-need',\n  children: []\n}, {\n  value: 'The Problem',\n  id: 'the-problem',\n  children: []\n}, {\n  value: 'The Solution',\n  id: 'the-solution',\n  children: []\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`If you wrote your automated tests using TypeScript in either Playwright, Puppeteer, or Cypress, you need to transpile your Typescript files to Javascript before running them with Testrunner Toolkit.`}</p>\n    <h2 {...{\n      \"id\": \"what-youll-need\"\n    }}>{`What You'll Need`}</h2>\n    <p>{`Refer to the requirements listed on the `}<a parentName=\"p\" {...{\n        \"href\": \"/testrunner-toolkit/installation\"\n      }}>{`Installation`}</a>{` page.`}</p>\n    <h2 {...{\n      \"id\": \"the-problem\"\n    }}>{`The Problem`}</h2>\n    <p>{`Consider the `}<inlineCode parentName=\"p\">{`tests`}</inlineCode>{` directory structure below:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`.\n└── tests/\n    ├── test.one.spec.ts\n    ├── test.two.spec.ts\n    ├── test.three.spec.ts\n    └── tsconfig.json\n`}</code></pre>\n    <p>{`Except for the TestCafe image, these `}<inlineCode parentName=\"p\">{`.ts`}</inlineCode>{` files cannot run directly on any Testrunner Toolkit images. Therefore in order to make theses test run correctly you must transpile them JavaScript.`}</p>\n    <h2 {...{\n      \"id\": \"the-solution\"\n    }}>{`The Solution`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Ensure you already have `}<inlineCode parentName=\"p\">{`typescript`}</inlineCode>{` installed:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`npm install -g typescript\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Review your `}<inlineCode parentName=\"p\">{`tsconfig.json`}</inlineCode>{` to ensure you've set the `}<inlineCode parentName=\"p\">{`compilerOptions`}</inlineCode>{` appropriately.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the TypeScript compiler like so:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`tsc --project ./tests/tsconfig.json\n`}</code></pre>\n        <p parentName=\"li\">{`Below is a default output example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`└── tests/\n    ├── test.one.spec.ts\n    ├── test.one.spec.js\n    ├── test.two.spec.ts\n    ├── test.two.spec.js\n    ├── test.three.spec.ts\n    ├── test.three.spec.js\n    └── tsconfig.json\n`}</code></pre>\n        <blockquote parentName=\"li\">\n          <p parentName=\"blockquote\">{`WARNING: the TypeScript compiler will behave in a non-deterministic manner if the `}<inlineCode parentName=\"p\">{`tsconfig.json`}</inlineCode>{` is poorly configured. `}</p>\n          <p parentName=\"blockquote\">{`For more information on how to properly configure `}<inlineCode parentName=\"p\">{`tsconfig.json`}</inlineCode>{` please visit the `}<a parentName=\"p\" {...{\n              \"href\": \"https://www.typescriptlang.org/docs/handbook/migrating-from-javascript.html#writing-a-configuration-file\"\n            }}>{`documentation`}</a>{`.`}</p>\n        </blockquote>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Next, edit the `}<inlineCode parentName=\"p\">{`files`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`suites`}</inlineCode>{` fields in `}<inlineCode parentName=\"p\">{`.sauce/config.yml`}</inlineCode>{` in order to ignore the `}<inlineCode parentName=\"p\">{`.ts`}</inlineCode>{` files and instead place the `}<inlineCode parentName=\"p\">{`.js`}</inlineCode>{` files inside the Testrunner Toolkit container:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`files:\n  - tests/\nsuites:\n  - name: \"basic test\"\n    match: \".*.(spec|test).js\"\n`}</code></pre>\n        <p parentName=\"li\">{`By default `}<inlineCode parentName=\"p\">{`saucectl`}</inlineCode>{` will pickup any `}<inlineCode parentName=\"p\">{`.js`}</inlineCode>{` files located in the designated directory, however with the `}<inlineCode parentName=\"p\">{`suites`}</inlineCode>{` field you can set more granular control with regular expressions.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Finally, run `}<inlineCode parentName=\"p\">{`saucectl`}</inlineCode>{` to execute your TypeScript tests:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`saucectl run -c .sauce/config.yml\n`}</code></pre>\n        <p parentName=\"li\">{` For further information, please refer to the working example of this TypeScript demonstration in the `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/saucelabs/sauce-puppeteer-runner/tree/master/tests/fixtures/typescript\"\n          }}>{`Sauce Labs Puppeteer Runner`}</a>{` repository.`}</p>\n      </li>\n    </ol>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}