{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{109:function(t,e,n){\"use strict\";n.r(e),n.d(e,\"frontMatter\",(function(){return s})),n.d(e,\"metadata\",(function(){return i})),n.d(e,\"toc\",(function(){return c})),n.d(e,\"default\",(function(){return p}));var a=n(3),r=n(8),o=(n(0),n(221)),s={id:\"test-config-annotation\",title:\"Test Configuration and Annotation\",sidebar_label:\"Test Configuration and Annotation\"},i={unversionedId:\"basics/best-practices/test-config-annotation\",id:\"basics/best-practices/test-config-annotation\",isDocsHomePage:!1,title:\"Test Configuration and Annotation\",description:\"Before running a browser or device test with Sauce Labs, you need to write your test script to launch the platform/operating system/browser combination you want, and specify the location of the app for testing. You'll also want to configure other options, such as the path to your app.\",source:\"@site/docs/basics/best-practices/test-config-annotation.md\",slug:\"/basics/best-practices/test-config-annotation\",permalink:\"/basics/best-practices/test-config-annotation\",editUrl:\"https://github.com/saucelabs/sauce-docs/edit/master/docs/basics/best-practices/test-config-annotation.md\",version:\"current\",lastUpdatedBy:\"Laura Thomas\",lastUpdatedAt:1609802497,sidebar_label:\"Test Configuration and Annotation\"},c=[{value:\"Getting Ready to Test\",id:\"getting-ready-to-test\",children:[]},{value:\"Adding Names, Tags, Build Numbers, and Pass/Fail Status after the Test\",id:\"adding-names-tags-build-numbers-and-passfail-status-after-the-test\",children:[]}],u={toc:c};function p(t){var e=t.components,n=Object(r.default)(t,[\"components\"]);return Object(o.mdx)(\"wrapper\",Object(a.default)({},u,n,{components:e,mdxType:\"MDXLayout\"}),Object(o.mdx)(\"p\",null,\"Before running a browser or device test with Sauce Labs, you need to write your test script to launch the platform/operating system/browser combination you want, and specify the location of the app for testing. You'll also want to configure other options, such as the path to your app.\"),Object(o.mdx)(\"p\",null,\"Once your test is finished, you can annotate the job with a name, tags, and pass/fail status using the Sauce Labs REST API, or Selenium's JavaScript executor.\"),Object(o.mdx)(\"h2\",{id:\"getting-ready-to-test\"},\"Getting Ready to Test\"),Object(o.mdx)(\"p\",null,\"Test configuration refers to setting the desired capabilities of your test within the test script itself. There are \",Object(o.mdx)(\"a\",Object(a.default)({parentName:\"p\"},{href:\"https://wiki.saucelabs.com/display/DOCS/Desired+Capabilities+Required+for+Selenium+and+Appium+Tests\"}),\"required capabilities for both Selenium and Appium tests\"),\", as well as an extensive set of \",Object(o.mdx)(\"a\",Object(a.default)({parentName:\"p\"},{href:\"https://wiki.saucelabs.com/display/DOCS/Test+Configuration+Options\"}),\"optional capabilities\"),\" (some of which are exclusive to Sauce Labs). You can use our \",Object(o.mdx)(\"a\",Object(a.default)({parentName:\"p\"},{href:\"https://wiki.saucelabs.com/display/DOCS/Platform+Configurator\"}),\"Platform Configurator\"),\" to create the required desired capabilities for your test scripts, or use one of our \",Object(o.mdx)(\"a\",Object(a.default)({parentName:\"p\"},{href:\"https://github.com/saucelabs-training\"}),\"sample test frameworks\"),\" to set up the desired capabilities for parallel testing across multiple platform/operating systems.\"),Object(o.mdx)(\"h2\",{id:\"adding-names-tags-build-numbers-and-passfail-status-after-the-test\"},\"Adding Names, Tags, Build Numbers, and Pass/Fail Status after the Test\"),Object(o.mdx)(\"p\",null,\"Test annotation refers to adding information to your tests after they have completed, such as setting a name, build number, tag, and Pass/Fail status. These annotations are useful for managing your tests and builds (for example, when searching and sorting tests in your \",Object(o.mdx)(\"a\",Object(a.default)({parentName:\"p\"},{href:\"https://wiki.saucelabs.com/display/DOCS/Searching+for+Test+Results+and+Builds+on+Your+Archive+Page\"}),\"Archives\"),\"). You can add annotations with our \",Object(o.mdx)(\"a\",Object(a.default)({parentName:\"p\"},{href:\"https://wiki.saucelabs.com/display/DOCS/Annotating+Tests+with+the+Sauce+Labs+REST+API\"}),\"REST API\"),\" or the \",Object(o.mdx)(\"a\",Object(a.default)({parentName:\"p\"},{href:\"https://wiki.saucelabs.com/display/DOCS/Annotating+Tests+with+Selenium%27s+JavaScript+Executor\"}),\"Selenium JavaScript Executor\"),\". You can also use \",Object(o.mdx)(\"a\",Object(a.default)({parentName:\"p\"},{href:\"https://github.com/saucelabs-training\"}),\"sample test frameworks\"),\" to automatically add annotations to your tests. \"))}p.isMDXComponent=!0},221:function(t,e,n){\"use strict\";n.r(e),n.d(e,\"MDXContext\",(function(){return p})),n.d(e,\"MDXProvider\",(function(){return f})),n.d(e,\"mdx\",(function(){return h})),n.d(e,\"useMDXComponents\",(function(){return d})),n.d(e,\"withMDXComponents\",(function(){return l}));var a=n(0),r=n.n(a);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function s(){return(s=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t}).apply(this,arguments)}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function c(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function u(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=r.a.createContext({}),l=function(t){return function(e){var n=d(e.components);return r.a.createElement(t,s({},e,{components:n}))}},d=function(t){var e=r.a.useContext(p),n=e;return t&&(n=\"function\"==typeof t?t(e):c(c({},e),t)),n},f=function(t){var e=d(t.components);return r.a.createElement(p.Provider,{value:e},t.children)},m={inlineCode:\"code\",wrapper:function(t){var e=t.children;return r.a.createElement(r.a.Fragment,{},e)}},b=r.a.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,s=t.parentName,i=u(t,[\"components\",\"mdxType\",\"originalType\",\"parentName\"]),p=d(n),l=a,f=p[\"\".concat(s,\".\").concat(l)]||p[l]||m[l]||o;return n?r.a.createElement(f,c(c({ref:e},i),{},{components:n})):r.a.createElement(f,c({ref:e},i))}));function h(t,e){var n=arguments,a=e&&e.mdxType;if(\"string\"==typeof t||a){var o=n.length,s=new Array(o);s[0]=b;var i={};for(var c in e)hasOwnProperty.call(e,c)&&(i[c]=e[c]);i.originalType=t,i.mdxType=\"string\"==typeof t?t:a,s[1]=i;for(var u=2;u<o;u++)s[u]=n[u];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}b.displayName=\"MDXCreateElement\"}}]);","name":"92e4bf40.05a704b8.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[77],{\n\n/***/ 109:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"frontMatter\", function() { return frontMatter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"metadata\", function() { return metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toc\", function() { return toc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MDXContent; });\n/* harmony import */ var _Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);\n/* harmony import */ var _Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(221);\nvar frontMatter={id:'test-config-annotation',title:'Test Configuration and Annotation',sidebar_label:'Test Configuration and Annotation'};var metadata={\"unversionedId\":\"basics/best-practices/test-config-annotation\",\"id\":\"basics/best-practices/test-config-annotation\",\"isDocsHomePage\":false,\"title\":\"Test Configuration and Annotation\",\"description\":\"Before running a browser or device test with Sauce Labs, you need to write your test script to launch the platform/operating system/browser combination you want, and specify the location of the app for testing. You'll also want to configure other options, such as the path to your app.\",\"source\":\"@site/docs/basics/best-practices/test-config-annotation.md\",\"slug\":\"/basics/best-practices/test-config-annotation\",\"permalink\":\"/basics/best-practices/test-config-annotation\",\"editUrl\":\"https://github.com/saucelabs/sauce-docs/edit/master/docs/basics/best-practices/test-config-annotation.md\",\"version\":\"current\",\"lastUpdatedBy\":\"Laura Thomas\",\"lastUpdatedAt\":1609802497,\"sidebar_label\":\"Test Configuration and Annotation\"};/* @jsxRuntime classic */ /* @jsx mdx */var toc=[{value:'Getting Ready to Test',id:'getting-ready-to-test',children:[]},{value:'Adding Names, Tags, Build Numbers, and Pass/Fail Status after the Test',id:'adding-names-tags-build-numbers-and-passfail-status-after-the-test',children:[]}];var layoutProps={toc:toc};var MDXLayout=\"wrapper\";function MDXContent(_ref){var components=_ref.components,props=Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_ref,[\"components\"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(MDXLayout,Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({},layoutProps,props,{components:components,mdxType:\"MDXLayout\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Before running a browser or device test with Sauce Labs, you need to write your test script to launch the platform/operating system/browser combination you want, and specify the location of the app for testing. You'll also want to configure other options, such as the path to your app.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Once your test is finished, you can annotate the job with a name, tags, and pass/fail status using the Sauce Labs REST API, or Selenium's JavaScript executor.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\",{\"id\":\"getting-ready-to-test\"},\"Getting Ready to Test\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Test configuration refers to setting the desired capabilities of your test within the test script itself. There are \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"https://wiki.saucelabs.com/display/DOCS/Desired+Capabilities+Required+for+Selenium+and+Appium+Tests\"}),\"required capabilities for both Selenium and Appium tests\"),\", as well as an extensive set of \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"https://wiki.saucelabs.com/display/DOCS/Test+Configuration+Options\"}),\"optional capabilities\"),\" (some of which are exclusive to Sauce Labs). You can use our \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"https://wiki.saucelabs.com/display/DOCS/Platform+Configurator\"}),\"Platform Configurator\"),\" to create the required desired capabilities for your test scripts, or use one of our \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"https://github.com/saucelabs-training\"}),\"sample test frameworks\"),\" to set up the desired capabilities for parallel testing across multiple platform/operating systems.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\",{\"id\":\"adding-names-tags-build-numbers-and-passfail-status-after-the-test\"},\"Adding Names, Tags, Build Numbers, and Pass/Fail Status after the Test\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Test annotation refers to adding information to your tests after they have completed, such as setting a name, build number, tag, and Pass/Fail status. These annotations are useful for managing your tests and builds (for example, when searching and sorting tests in your \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"https://wiki.saucelabs.com/display/DOCS/Searching+for+Test+Results+and+Builds+on+Your+Archive+Page\"}),\"Archives\"),\"). You can add annotations with our \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"https://wiki.saucelabs.com/display/DOCS/Annotating+Tests+with+the+Sauce+Labs+REST+API\"}),\"REST API\"),\" or the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"https://wiki.saucelabs.com/display/DOCS/Annotating+Tests+with+Selenium%27s+JavaScript+Executor\"}),\"Selenium JavaScript Executor\"),\". You can also use \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"https://github.com/saucelabs-training\"}),\"sample test frameworks\"),\" to automatically add annotations to your tests. \"));};MDXContent.isMDXComponent=true;\n\n/***/ }),\n\n/***/ 221:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDXContext\", function() { return MDXContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDXProvider\", function() { return MDXProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mdx\", function() { return createElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useMDXComponents\", function() { return useMDXComponents; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withMDXComponents\", function() { return withMDXComponents; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = react__WEBPACK_IMPORTED_MODULE_0___default.a.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, createElementArgArray);\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, args);\n}\n\n\n\n\n/***/ })\n\n}]);","inputSourceMap":null}