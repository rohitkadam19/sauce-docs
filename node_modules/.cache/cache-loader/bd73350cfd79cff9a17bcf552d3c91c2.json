{"remainingRequest":"/Users/nancysweeney/GH/sauce-docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/index.js","dependencies":[{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/index.js","mtime":1605895629027},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/cache-loader/dist/cjs.js","mtime":1602877854626},{"path":"/Users/nancysweeney/GH/sauce-docs/node_modules/babel-loader/lib/index.js","mtime":1605895626604}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiO3ZhciBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZD1yZXF1aXJlKCIvVXNlcnMvbmFuY3lzd2VlbmV5L0dIL3NhdWNlLWRvY3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIpO3ZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0PXJlcXVpcmUoIi9Vc2Vycy9uYW5jeXN3ZWVuZXkvR0gvc2F1Y2UtZG9jcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQiKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywiX19lc01vZHVsZSIse3ZhbHVlOnRydWV9KTtleHBvcnRzLmRlZmF1bHQ9dm9pZCAwO3ZhciBfZXh0ZW5kczI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIvVXNlcnMvbmFuY3lzd2VlbmV5L0dIL3NhdWNlLWRvY3Mvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiKSk7dmFyIF9yZWFjdD1faW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCJyZWFjdCIpKTt2YXIgX2Nsc3g9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJjbHN4IikpO3ZhciBfcHJpc21SZWFjdFJlbmRlcmVyPV9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoInByaXNtLXJlYWN0LXJlbmRlcmVyIikpO3ZhciBfY29weVRleHRUb0NsaXBib2FyZD1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoImNvcHktdGV4dC10by1jbGlwYm9hcmQiKSk7dmFyIF9wYXJzZU51bWVyaWNSYW5nZT1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoInBhcnNlLW51bWVyaWMtcmFuZ2UiKSk7dmFyIF91c2VQcmlzbVRoZW1lPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiQHRoZW1lL2hvb2tzL3VzZVByaXNtVGhlbWUiKSk7dmFyIF9zdHlsZXNNb2R1bGU9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCIuL3N0eWxlcy5tb2R1bGUuY3NzIikpO3ZhciBfdGhlbWVDb21tb249cmVxdWlyZSgiQGRvY3VzYXVydXMvdGhlbWUtY29tbW9uIik7LyoqCiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9jb25zdCBoaWdobGlnaHRMaW5lc1JhbmdlUmVnZXg9L3soW1xkLC1dKyl9Lztjb25zdCBnZXRIaWdobGlnaHREaXJlY3RpdmVSZWdleD0obGFuZ3VhZ2VzPVsnanMnLCdqc0Jsb2NrJywnanN4JywncHl0aG9uJywnaHRtbCddKT0+ey8vIHN1cHBvcnRlZCB0eXBlcyBvZiBjb21tZW50cwpjb25zdCBjb21tZW50cz17anM6e3N0YXJ0OidcXC9cXC8nLGVuZDonJ30sanNCbG9jazp7c3RhcnQ6J1xcL1xcKicsZW5kOidcXCpcXC8nfSxqc3g6e3N0YXJ0OidcXHtcXHMqXFwvXFwqJyxlbmQ6J1xcKlxcL1xccypcXH0nfSxweXRob246e3N0YXJ0OicjJyxlbmQ6Jyd9LGh0bWw6e3N0YXJ0Oic8IS0tJyxlbmQ6Jy0tPid9fTsvLyBzdXBwb3J0ZWQgZGlyZWN0aXZlcwpjb25zdCBkaXJlY3RpdmVzPVsnaGlnaGxpZ2h0LW5leHQtbGluZScsJ2hpZ2hsaWdodC1zdGFydCcsJ2hpZ2hsaWdodC1lbmQnXS5qb2luKCd8Jyk7Ly8gdG8gYmUgbW9yZSByZWxpYWJsZSwgdGhlIG9wZW5pbmcgYW5kIGNsb3NpbmcgY29tbWVudCBtdXN0IG1hdGNoCmNvbnN0IGNvbW1lbnRQYXR0ZXJuPWxhbmd1YWdlcy5tYXAobGFuZz0+YCg/OiR7Y29tbWVudHNbbGFuZ10uc3RhcnR9XFxzKigke2RpcmVjdGl2ZXN9KVxccyoke2NvbW1lbnRzW2xhbmddLmVuZH0pYCkuam9pbignfCcpOy8vIHdoaXRlIHNwYWNlIGlzIGFsbG93ZWQsIGJ1dCBvdGhlcndpc2UgaXQgc2hvdWxkIGJlIG9uIGl0J3Mgb3duIGxpbmUKcmV0dXJuIG5ldyBSZWdFeHAoYF5cXHMqKD86JHtjb21tZW50UGF0dGVybn0pXFxzKiRgKTt9Oy8vIHNlbGVjdCBjb21tZW50IHN0eWxlcyBiYXNlZCBvbiBsYW5ndWFnZQpjb25zdCBoaWdobGlnaHREaXJlY3RpdmVSZWdleD1sYW5nPT57c3dpdGNoKGxhbmcpe2Nhc2UnanMnOmNhc2UnamF2YXNjcmlwdCc6Y2FzZSd0cyc6Y2FzZSd0eXBlc2NyaXB0JzpyZXR1cm4gZ2V0SGlnaGxpZ2h0RGlyZWN0aXZlUmVnZXgoWydqcycsJ2pzQmxvY2snXSk7Y2FzZSdqc3gnOmNhc2UndHN4JzpyZXR1cm4gZ2V0SGlnaGxpZ2h0RGlyZWN0aXZlUmVnZXgoWydqcycsJ2pzQmxvY2snLCdqc3gnXSk7Y2FzZSdodG1sJzpyZXR1cm4gZ2V0SGlnaGxpZ2h0RGlyZWN0aXZlUmVnZXgoWydqcycsJ2pzQmxvY2snLCdodG1sJ10pO2Nhc2UncHl0aG9uJzpjYXNlJ3B5JzpyZXR1cm4gZ2V0SGlnaGxpZ2h0RGlyZWN0aXZlUmVnZXgoWydweXRob24nXSk7ZGVmYXVsdDovLyBhbGwgY29tbWVudCB0eXBlcwpyZXR1cm4gZ2V0SGlnaGxpZ2h0RGlyZWN0aXZlUmVnZXgoKTt9fTtjb25zdCBjb2RlQmxvY2tUaXRsZVJlZ2V4PS8oPzp0aXRsZT0iKSguKikoPzoiKS87dmFyIF9kZWZhdWx0PSh7Y2hpbGRyZW4sY2xhc3NOYW1lOmxhbmd1YWdlQ2xhc3NOYW1lLG1ldGFzdHJpbmd9KT0+e2NvbnN0e3ByaXNtfT0oMCxfdGhlbWVDb21tb24udXNlVGhlbWVDb25maWcpKCk7Y29uc3Rbc2hvd0NvcGllZCxzZXRTaG93Q29waWVkXT0oMCxfcmVhY3QudXNlU3RhdGUpKGZhbHNlKTtjb25zdFttb3VudGVkLHNldE1vdW50ZWRdPSgwLF9yZWFjdC51c2VTdGF0ZSkoZmFsc2UpOy8vIFRoZSBQcmlzbSB0aGVtZSBvbiBTU1IgaXMgYWx3YXlzIHRoZSBkZWZhdWx0IHRoZW1lIGJ1dCB0aGUgc2l0ZSB0aGVtZQovLyBjYW4gYmUgaW4gYSBkaWZmZXJlbnQgbW9kZS4gUmVhY3QgaHlkcmF0aW9uIGRvZXNuJ3QgdXBkYXRlIERPTSBzdHlsZXMKLy8gdGhhdCBjb21lIGZyb20gU1NSLiBIZW5jZSBmb3JjZSBhIHJlLXJlbmRlciBhZnRlciBtb3VudGluZyB0byBhcHBseSB0aGUKLy8gY3VycmVudCByZWxldmFudCBzdHlsZXMuIFRoZXJlIHdpbGwgYmUgYSBmbGFzaCBzZWVuIG9mIHRoZSBvcmlnaW5hbAovLyBzdHlsZXMgc2VlbiB1c2luZyB0aGlzIGN1cnJlbnQgYXBwcm9hY2ggYnV0IHRoYXQncyBwcm9iYWJseSBvay4gRml4aW5nCi8vIHRoZSBmbGFzaCB3aWxsIHJlcXVpcmUgY2hhbmdpbmcgdGhlIHRoZW1pbmcgYXBwcm9hY2ggYW5kIGlzIG5vdCB3b3J0aCBpdAovLyBhdCB0aGlzIHBvaW50LgooMCxfcmVhY3QudXNlRWZmZWN0KSgoKT0+e3NldE1vdW50ZWQodHJ1ZSk7fSxbXSk7Y29uc3QgYnV0dG9uPSgwLF9yZWFjdC51c2VSZWYpKG51bGwpO2xldCBoaWdobGlnaHRMaW5lcz1bXTtsZXQgY29kZUJsb2NrVGl0bGU9Jyc7Y29uc3QgcHJpc21UaGVtZT0oMCxfdXNlUHJpc21UaGVtZS5kZWZhdWx0KSgpOy8vIEluIGNhc2UgaW50ZXJsZWF2ZWQgTWFya2Rvd24gKGUuZy4gd2hlbiB1c2luZyBDb2RlQmxvY2sgYXMgc3RhbmRhbG9uZSBjb21wb25lbnQpLgppZihBcnJheS5pc0FycmF5KGNoaWxkcmVuKSl7Y2hpbGRyZW49Y2hpbGRyZW4uam9pbignJyk7fWlmKG1ldGFzdHJpbmcmJmhpZ2hsaWdodExpbmVzUmFuZ2VSZWdleC50ZXN0KG1ldGFzdHJpbmcpKXsvLyBUZXN0ZWQgYWJvdmUKLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb24KY29uc3QgaGlnaGxpZ2h0TGluZXNSYW5nZT1tZXRhc3RyaW5nLm1hdGNoKGhpZ2hsaWdodExpbmVzUmFuZ2VSZWdleClbMV07aGlnaGxpZ2h0TGluZXM9KDAsX3BhcnNlTnVtZXJpY1JhbmdlLmRlZmF1bHQpKGhpZ2hsaWdodExpbmVzUmFuZ2UpLmZpbHRlcihuPT5uPjApO31pZihtZXRhc3RyaW5nJiZjb2RlQmxvY2tUaXRsZVJlZ2V4LnRlc3QobWV0YXN0cmluZykpey8vIFRlc3RlZCBhYm92ZQovLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5vbi1udWxsLWFzc2VydGlvbgpjb2RlQmxvY2tUaXRsZT1tZXRhc3RyaW5nLm1hdGNoKGNvZGVCbG9ja1RpdGxlUmVnZXgpWzFdO31sZXQgbGFuZ3VhZ2U9bGFuZ3VhZ2VDbGFzc05hbWUmJmxhbmd1YWdlQ2xhc3NOYW1lLnJlcGxhY2UoL2xhbmd1YWdlLS8sJycpOy8vIEZvcmNlIFByaXNtJ3MgbGFuZ3VhZ2UgdW5pb24gdHlwZSB0byBgYW55YCBiZWNhdXNlIGl0IGRvZXMgbm90IGNvbnRhaW4gYWxsIGF2YWlsYWJsZSBsYW5ndWFnZXMKaWYoIWxhbmd1YWdlJiZwcmlzbS5kZWZhdWx0TGFuZ3VhZ2Upe2xhbmd1YWdlPXByaXNtLmRlZmF1bHRMYW5ndWFnZTt9Ly8gb25seSBkZWNsYXJhdGlvbiBPUiBkaXJlY3RpdmUgaGlnaGxpZ2h0IGNhbiBiZSB1c2VkIGZvciBhIGJsb2NrCmxldCBjb2RlPWNoaWxkcmVuLnJlcGxhY2UoL1xuJC8sJycpO2lmKGhpZ2hsaWdodExpbmVzLmxlbmd0aD09PTAmJmxhbmd1YWdlIT09dW5kZWZpbmVkKXtsZXQgcmFuZ2U9Jyc7Y29uc3QgZGlyZWN0aXZlUmVnZXg9aGlnaGxpZ2h0RGlyZWN0aXZlUmVnZXgobGFuZ3VhZ2UpOy8vIGdvIHRocm91Z2ggbGluZSBieSBsaW5lCmNvbnN0IGxpbmVzPWNoaWxkcmVuLnJlcGxhY2UoL1xuJC8sJycpLnNwbGl0KCdcbicpO2xldCBibG9ja1N0YXJ0Oy8vIGxvb3AgdGhyb3VnaCBsaW5lcwpmb3IobGV0IGluZGV4PTA7aW5kZXg8bGluZXMubGVuZ3RoOyl7Y29uc3QgbGluZT1saW5lc1tpbmRleF07Ly8gYWRqdXN0IGZvciAwLWluZGV4CmNvbnN0IGxpbmVOdW1iZXI9aW5kZXgrMTtjb25zdCBtYXRjaD1saW5lLm1hdGNoKGRpcmVjdGl2ZVJlZ2V4KTtpZihtYXRjaCE9PW51bGwpe2NvbnN0IGRpcmVjdGl2ZT1tYXRjaC5zbGljZSgxKS5yZWR1Y2UoKGZpbmFsLGl0ZW0pPT5maW5hbHx8aXRlbSx1bmRlZmluZWQpO3N3aXRjaChkaXJlY3RpdmUpe2Nhc2UnaGlnaGxpZ2h0LW5leHQtbGluZSc6cmFuZ2UrPWAke2xpbmVOdW1iZXJ9LGA7YnJlYWs7Y2FzZSdoaWdobGlnaHQtc3RhcnQnOmJsb2NrU3RhcnQ9bGluZU51bWJlcjticmVhaztjYXNlJ2hpZ2hsaWdodC1lbmQnOnJhbmdlKz1gJHtibG9ja1N0YXJ0fS0ke2xpbmVOdW1iZXItMX0sYDticmVhaztkZWZhdWx0OmJyZWFrO31saW5lcy5zcGxpY2UoaW5kZXgsMSk7fWVsc2V7Ly8gbGluZXMgd2l0aG91dCBkaXJlY3RpdmVzIGFyZSB1bmNoYW5nZWQKaW5kZXgrPTE7fX1oaWdobGlnaHRMaW5lcz0oMCxfcGFyc2VOdW1lcmljUmFuZ2UuZGVmYXVsdCkocmFuZ2UpO2NvZGU9bGluZXMuam9pbignXG4nKTt9Y29uc3QgaGFuZGxlQ29weUNvZGU9KCk9PnsoMCxfY29weVRleHRUb0NsaXBib2FyZC5kZWZhdWx0KShjb2RlKTtzZXRTaG93Q29waWVkKHRydWUpO3NldFRpbWVvdXQoKCk9PnNldFNob3dDb3BpZWQoZmFsc2UpLDIwMDApO307cmV0dXJuLyojX19QVVJFX18qL19yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3ByaXNtUmVhY3RSZW5kZXJlci5kZWZhdWx0LCgwLF9leHRlbmRzMi5kZWZhdWx0KSh7fSxfcHJpc21SZWFjdFJlbmRlcmVyLmRlZmF1bHRQcm9wcyx7a2V5OlN0cmluZyhtb3VudGVkKSx0aGVtZTpwcmlzbVRoZW1lLGNvZGU6Y29kZSxsYW5ndWFnZTpsYW5ndWFnZX0pLCh7Y2xhc3NOYW1lLHN0eWxlLHRva2VucyxnZXRMaW5lUHJvcHMsZ2V0VG9rZW5Qcm9wc30pPT4vKiNfX1BVUkVfXyovX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3QuZGVmYXVsdC5GcmFnbWVudCxudWxsLGNvZGVCbG9ja1RpdGxlJiYvKiNfX1BVUkVfXyovX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudCgiZGl2Iix7c3R5bGU6c3R5bGUsY2xhc3NOYW1lOl9zdHlsZXNNb2R1bGUuZGVmYXVsdC5jb2RlQmxvY2tUaXRsZX0sY29kZUJsb2NrVGl0bGUpLC8qI19fUFVSRV9fKi9fcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtjbGFzc05hbWU6X3N0eWxlc01vZHVsZS5kZWZhdWx0LmNvZGVCbG9ja0NvbnRlbnR9LC8qI19fUFVSRV9fKi9fcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KCJkaXYiLHsvKiBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUganN4LWExMXkvbm8tbm9uaW50ZXJhY3RpdmUtdGFiaW5kZXggKi90YWJJbmRleDowLGNsYXNzTmFtZTooMCxfY2xzeC5kZWZhdWx0KShjbGFzc05hbWUsX3N0eWxlc01vZHVsZS5kZWZhdWx0LmNvZGVCbG9jaywndGhpbi1zY3JvbGxiYXInLHtbX3N0eWxlc01vZHVsZS5kZWZhdWx0LmNvZGVCbG9ja1dpdGhUaXRsZV06Y29kZUJsb2NrVGl0bGV9KX0sLyojX19QVVJFX18qL19yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZTpfc3R5bGVzTW9kdWxlLmRlZmF1bHQuY29kZUJsb2NrTGluZXMsc3R5bGU6c3R5bGV9LHRva2Vucy5tYXAoKGxpbmUsaSk9PntpZihsaW5lLmxlbmd0aD09PTEmJmxpbmVbMF0uY29udGVudD09PScnKXtsaW5lWzBdLmNvbnRlbnQ9J1xuJzsvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXBhcmFtLXJlYXNzaWduCn1jb25zdCBsaW5lUHJvcHM9Z2V0TGluZVByb3BzKHtsaW5lLGtleTppfSk7aWYoaGlnaGxpZ2h0TGluZXMuaW5jbHVkZXMoaSsxKSl7bGluZVByb3BzLmNsYXNzTmFtZT1gJHtsaW5lUHJvcHMuY2xhc3NOYW1lfSBkb2N1c2F1cnVzLWhpZ2hsaWdodC1jb2RlLWxpbmVgO31yZXR1cm4vKiNfX1BVUkVfXyovX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudCgiZGl2IiwoMCxfZXh0ZW5kczIuZGVmYXVsdCkoe2tleTppfSxsaW5lUHJvcHMpLGxpbmUubWFwKCh0b2tlbixrZXkpPT4vKiNfX1BVUkVfXyovX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudCgic3BhbiIsKDAsX2V4dGVuZHMyLmRlZmF1bHQpKHtrZXk6a2V5fSxnZXRUb2tlblByb3BzKHt0b2tlbixrZXl9KSkpKSk7fSkpKSwvKiNfX1BVUkVfXyovX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudCgiYnV0dG9uIix7cmVmOmJ1dHRvbix0eXBlOiJidXR0b24iLCJhcmlhLWxhYmVsIjoiQ29weSBjb2RlIHRvIGNsaXBib2FyZCIsY2xhc3NOYW1lOigwLF9jbHN4LmRlZmF1bHQpKF9zdHlsZXNNb2R1bGUuZGVmYXVsdC5jb3B5QnV0dG9uKSxvbkNsaWNrOmhhbmRsZUNvcHlDb2RlfSxzaG93Q29waWVkPydDb3BpZWQnOidDb3B5JykpKSk7fTtleHBvcnRzLmRlZmF1bHQ9X2RlZmF1bHQ7"},{"version":3,"sources":["/Users/nancysweeney/GH/sauce-docs/node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/index.js"],"names":["highlightLinesRangeRegex","getHighlightDirectiveRegex","languages","comments","js","start","end","jsBlock","jsx","python","html","directives","join","commentPattern","map","lang","RegExp","highlightDirectiveRegex","codeBlockTitleRegex","children","className","languageClassName","metastring","prism","showCopied","setShowCopied","mounted","setMounted","button","highlightLines","codeBlockTitle","prismTheme","Array","isArray","test","highlightLinesRange","match","filter","n","language","replace","defaultLanguage","code","length","undefined","range","directiveRegex","lines","split","blockStart","index","line","lineNumber","directive","slice","reduce","final","item","splice","handleCopyCode","setTimeout","defaultProps","String","style","tokens","getLineProps","getTokenProps","styles","codeBlockContent","codeBlock","codeBlockWithTitle","codeBlockLines","i","content","lineProps","key","includes","token","copyButton"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, {useEffect, useState, useRef} from 'react';\nimport clsx from 'clsx';\nimport Highlight, {defaultProps} from 'prism-react-renderer';\nimport copy from 'copy-text-to-clipboard';\nimport rangeParser from 'parse-numeric-range';\nimport usePrismTheme from '@theme/hooks/usePrismTheme';\nimport styles from './styles.module.css';\nimport {useThemeConfig} from '@docusaurus/theme-common';\nconst highlightLinesRangeRegex = /{([\\d,-]+)}/;\n\nconst getHighlightDirectiveRegex = (\n  languages = ['js', 'jsBlock', 'jsx', 'python', 'html'],\n) => {\n  // supported types of comments\n  const comments = {\n    js: {\n      start: '\\\\/\\\\/',\n      end: '',\n    },\n    jsBlock: {\n      start: '\\\\/\\\\*',\n      end: '\\\\*\\\\/',\n    },\n    jsx: {\n      start: '\\\\{\\\\s*\\\\/\\\\*',\n      end: '\\\\*\\\\/\\\\s*\\\\}',\n    },\n    python: {\n      start: '#',\n      end: '',\n    },\n    html: {\n      start: '<!--',\n      end: '-->',\n    },\n  }; // supported directives\n\n  const directives = [\n    'highlight-next-line',\n    'highlight-start',\n    'highlight-end',\n  ].join('|'); // to be more reliable, the opening and closing comment must match\n\n  const commentPattern = languages\n    .map(\n      (lang) =>\n        `(?:${comments[lang].start}\\\\s*(${directives})\\\\s*${comments[lang].end})`,\n    )\n    .join('|'); // white space is allowed, but otherwise it should be on it's own line\n\n  return new RegExp(`^\\\\s*(?:${commentPattern})\\\\s*$`);\n}; // select comment styles based on language\n\nconst highlightDirectiveRegex = (lang) => {\n  switch (lang) {\n    case 'js':\n    case 'javascript':\n    case 'ts':\n    case 'typescript':\n      return getHighlightDirectiveRegex(['js', 'jsBlock']);\n\n    case 'jsx':\n    case 'tsx':\n      return getHighlightDirectiveRegex(['js', 'jsBlock', 'jsx']);\n\n    case 'html':\n      return getHighlightDirectiveRegex(['js', 'jsBlock', 'html']);\n\n    case 'python':\n    case 'py':\n      return getHighlightDirectiveRegex(['python']);\n\n    default:\n      // all comment types\n      return getHighlightDirectiveRegex();\n  }\n};\n\nconst codeBlockTitleRegex = /(?:title=\")(.*)(?:\")/;\nexport default ({children, className: languageClassName, metastring}) => {\n  const {prism} = useThemeConfig();\n  const [showCopied, setShowCopied] = useState(false);\n  const [mounted, setMounted] = useState(false); // The Prism theme on SSR is always the default theme but the site theme\n  // can be in a different mode. React hydration doesn't update DOM styles\n  // that come from SSR. Hence force a re-render after mounting to apply the\n  // current relevant styles. There will be a flash seen of the original\n  // styles seen using this current approach but that's probably ok. Fixing\n  // the flash will require changing the theming approach and is not worth it\n  // at this point.\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n  const button = useRef(null);\n  let highlightLines = [];\n  let codeBlockTitle = '';\n  const prismTheme = usePrismTheme(); // In case interleaved Markdown (e.g. when using CodeBlock as standalone component).\n\n  if (Array.isArray(children)) {\n    children = children.join('');\n  }\n\n  if (metastring && highlightLinesRangeRegex.test(metastring)) {\n    // Tested above\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const highlightLinesRange = metastring.match(highlightLinesRangeRegex)[1];\n    highlightLines = rangeParser(highlightLinesRange).filter((n) => n > 0);\n  }\n\n  if (metastring && codeBlockTitleRegex.test(metastring)) {\n    // Tested above\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    codeBlockTitle = metastring.match(codeBlockTitleRegex)[1];\n  }\n\n  let language =\n    languageClassName && languageClassName.replace(/language-/, ''); // Force Prism's language union type to `any` because it does not contain all available languages\n\n  if (!language && prism.defaultLanguage) {\n    language = prism.defaultLanguage;\n  } // only declaration OR directive highlight can be used for a block\n\n  let code = children.replace(/\\n$/, '');\n\n  if (highlightLines.length === 0 && language !== undefined) {\n    let range = '';\n    const directiveRegex = highlightDirectiveRegex(language); // go through line by line\n\n    const lines = children.replace(/\\n$/, '').split('\\n');\n    let blockStart; // loop through lines\n\n    for (let index = 0; index < lines.length; ) {\n      const line = lines[index]; // adjust for 0-index\n\n      const lineNumber = index + 1;\n      const match = line.match(directiveRegex);\n\n      if (match !== null) {\n        const directive = match\n          .slice(1)\n          .reduce((final, item) => final || item, undefined);\n\n        switch (directive) {\n          case 'highlight-next-line':\n            range += `${lineNumber},`;\n            break;\n\n          case 'highlight-start':\n            blockStart = lineNumber;\n            break;\n\n          case 'highlight-end':\n            range += `${blockStart}-${lineNumber - 1},`;\n            break;\n\n          default:\n            break;\n        }\n\n        lines.splice(index, 1);\n      } else {\n        // lines without directives are unchanged\n        index += 1;\n      }\n    }\n\n    highlightLines = rangeParser(range);\n    code = lines.join('\\n');\n  }\n\n  const handleCopyCode = () => {\n    copy(code);\n    setShowCopied(true);\n    setTimeout(() => setShowCopied(false), 2000);\n  };\n\n  return (\n    <Highlight\n      {...defaultProps}\n      key={String(mounted)}\n      theme={prismTheme}\n      code={code}\n      language={language}>\n      {({className, style, tokens, getLineProps, getTokenProps}) => (\n        <>\n          {codeBlockTitle && (\n            <div style={style} className={styles.codeBlockTitle}>\n              {codeBlockTitle}\n            </div>\n          )}\n          <div className={styles.codeBlockContent}>\n            <div\n              /* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */\n              tabIndex={0}\n              className={clsx(className, styles.codeBlock, 'thin-scrollbar', {\n                [styles.codeBlockWithTitle]: codeBlockTitle,\n              })}>\n              <div className={styles.codeBlockLines} style={style}>\n                {tokens.map((line, i) => {\n                  if (line.length === 1 && line[0].content === '') {\n                    line[0].content = '\\n'; // eslint-disable-line no-param-reassign\n                  }\n\n                  const lineProps = getLineProps({\n                    line,\n                    key: i,\n                  });\n\n                  if (highlightLines.includes(i + 1)) {\n                    lineProps.className = `${lineProps.className} docusaurus-highlight-code-line`;\n                  }\n\n                  return (\n                    <div key={i} {...lineProps}>\n                      {line.map((token, key) => (\n                        <span\n                          key={key}\n                          {...getTokenProps({\n                            token,\n                            key,\n                          })}\n                        />\n                      ))}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n\n            <button\n              ref={button}\n              type=\"button\"\n              aria-label=\"Copy code to clipboard\"\n              className={clsx(styles.copyButton)}\n              onClick={handleCopyCode}>\n              {showCopied ? 'Copied' : 'Copy'}\n            </button>\n          </div>\n        </>\n      )}\n    </Highlight>\n  );\n};\n"]}]}