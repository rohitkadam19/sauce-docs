{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{192:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"MDXContext\",(function(){return u})),n.d(t,\"MDXProvider\",(function(){return m})),n.d(t,\"mdx\",(function(){return y})),n.d(t,\"useMDXComponents\",(function(){return p})),n.d(t,\"withMDXComponents\",(function(){return d}));var r=n(0),o=n.n(r);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=o.a.createContext({}),d=function(e){return function(t){var n=p(t.components);return o.a.createElement(e,a({},t,{components:n}))}},p=function(e){var t=o.a.useContext(u),n=t;return e&&(n=\"function\"==typeof e?e(t):c(c({},t),e)),n},m=function(e){var t=p(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},g={inlineCode:\"code\",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,a=e.parentName,i=l(e,[\"components\",\"mdxType\",\"originalType\",\"parentName\"]),u=p(n),d=r,m=u[\"\".concat(a,\".\").concat(d)]||u[d]||g[d]||s;return n?o.a.createElement(m,c(c({ref:t},i),{},{components:n})):o.a.createElement(m,c({ref:t},i))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if(\"string\"==typeof e||r){var s=n.length,a=new Array(s);a[0]=b;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType=\"string\"==typeof e?e:r,a[1]=i;for(var l=2;l<s;l++)a[l]=n[l];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}b.displayName=\"MDXCreateElement\"},77:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"frontMatter\",(function(){return a})),n.d(t,\"metadata\",(function(){return i})),n.d(t,\"rightToc\",(function(){return c})),n.d(t,\"default\",(function(){return u}));var r=n(3),o=n(8),s=(n(0),n(192)),a={id:\"protecting-test-log-credentials\",title:\"Protecting Test Log Credentials\",sidebar_label:\"Protecting Test Log Credentials\"},i={unversionedId:\"basics/best-practices/protecting-test-log-credentials\",id:\"basics/best-practices/protecting-test-log-credentials\",isDocsHomePage:!1,title:\"Protecting Test Log Credentials\",description:\"Sauce Labs test logs are securely stored, protecting them from external access. However, there are still some groups that can see test logs, including Sauce Support, your parent account, and other accounts in your company (depending on test privacy settings).\",source:\"@site/docs/basics/best-practices/protecting-test-log-credentials.md\",slug:\"/basics/best-practices/protecting-test-log-credentials\",permalink:\"/basics/best-practices/protecting-test-log-credentials\",editUrl:\"https://github.com/saucelabs/sauce-docs/edit/master/docs/basics/best-practices/protecting-test-log-credentials.md\",version:\"current\",lastUpdatedBy:\"Laura Thomas\",lastUpdatedAt:1609802497,sidebar_label:\"Protecting Test Log Credentials\"},c=[{value:\"Don&#39;t Use Real Credentials\",id:\"dont-use-real-credentials\",children:[]},{value:\"Transmit Session Tokens Only\",id:\"transmit-session-tokens-only\",children:[]},{value:\"Change Passwords After Tests\",id:\"change-passwords-after-tests\",children:[]}],l={rightToc:c};function u(e){var t=e.components,n=Object(o.default)(e,[\"components\"]);return Object(s.mdx)(\"wrapper\",Object(r.default)({},l,n,{components:t,mdxType:\"MDXLayout\"}),Object(s.mdx)(\"p\",null,\"Sauce Labs test logs are securely stored, protecting them from external access. However, there are still some groups that can see test logs, including Sauce Support, your parent account, and other accounts in your company (depending on test privacy settings).\"),Object(s.mdx)(\"h2\",{id:\"dont-use-real-credentials\"},\"Don't Use Real Credentials\"),Object(s.mdx)(\"p\",null,\"The best way to avoid this is to avoid using real credentials in tests by creating temporary accounts.\"),Object(s.mdx)(\"h2\",{id:\"transmit-session-tokens-only\"},\"Transmit Session Tokens Only\"),Object(s.mdx)(\"p\",null,\"You can avoid sensitive credentials with Selenium's ability to extract and inject cookies into accounts:\"),Object(s.mdx)(\"ol\",null,Object(s.mdx)(\"li\",{parentName:\"ol\"},\"Create a session in your environment, either directly in the application engine, or by using a local Selenium session or headless browser.\"),Object(s.mdx)(\"li\",{parentName:\"ol\"},\"Extract the session tokens (local storage objects, credentials, cookies, etc.).\"),Object(s.mdx)(\"li\",{parentName:\"ol\"},\"Use Selenium to push these objects and tokens into the browser under the control of Sauce Labs.\")),Object(s.mdx)(\"p\",null,\"This technique avoids sending plain text passwords, however, the sent tokens and cookies are still logged. If your session tokens are not time sensitive, this only provides security through obscurity. We recommend using time-sensitive session tokens.\"),Object(s.mdx)(\"h2\",{id:\"change-passwords-after-tests\"},\"Change Passwords After Tests\"),Object(s.mdx)(\"p\",null,\"If generating tokens and using unique temporary accounts is not possible, we recommend you establish test actions that your suite always takes, in order to change to a new, randomly generated password.  \"),Object(s.mdx)(\"p\",null,\"After each test, use a locally automated browser, a direct connection to your application database, or a headless browser to change your test account's password to a new, randomly generated password. Ensure this password is stored in your CI environment or a credential store, or by some other method.\"),Object(s.mdx)(\"p\",null,\"In order to prevent credential loss from blocking test suites, you may want to start each test suite by changing the password, again, either by using a headless browser or local Selenium session to perform your password recovery process, or by directly interacting with your application's database.\"))}u.isMDXComponent=!0}}]);","name":"71c8302c.6e3fef3b.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[43],{\n\n/***/ 192:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDXContext\", function() { return MDXContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDXProvider\", function() { return MDXProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mdx\", function() { return createElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useMDXComponents\", function() { return useMDXComponents; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withMDXComponents\", function() { return withMDXComponents; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = react__WEBPACK_IMPORTED_MODULE_0___default.a.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, createElementArgArray);\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, args);\n}\n\n\n\n\n/***/ }),\n\n/***/ 77:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"frontMatter\", function() { return frontMatter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"metadata\", function() { return metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rightToc\", function() { return rightToc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MDXContent; });\n/* harmony import */ var _Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);\n/* harmony import */ var _Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(192);\nvar frontMatter={id:'protecting-test-log-credentials',title:'Protecting Test Log Credentials',sidebar_label:'Protecting Test Log Credentials'};var metadata={\"unversionedId\":\"basics/best-practices/protecting-test-log-credentials\",\"id\":\"basics/best-practices/protecting-test-log-credentials\",\"isDocsHomePage\":false,\"title\":\"Protecting Test Log Credentials\",\"description\":\"Sauce Labs test logs are securely stored, protecting them from external access. However, there are still some groups that can see test logs, including Sauce Support, your parent account, and other accounts in your company (depending on test privacy settings).\",\"source\":\"@site/docs/basics/best-practices/protecting-test-log-credentials.md\",\"slug\":\"/basics/best-practices/protecting-test-log-credentials\",\"permalink\":\"/basics/best-practices/protecting-test-log-credentials\",\"editUrl\":\"https://github.com/saucelabs/sauce-docs/edit/master/docs/basics/best-practices/protecting-test-log-credentials.md\",\"version\":\"current\",\"lastUpdatedBy\":\"Laura Thomas\",\"lastUpdatedAt\":1609802497,\"sidebar_label\":\"Protecting Test Log Credentials\"};/* @jsxRuntime classic */ /* @jsx mdx */var rightToc=[{value:'Don&#39;t Use Real Credentials',id:'dont-use-real-credentials',children:[]},{value:'Transmit Session Tokens Only',id:'transmit-session-tokens-only',children:[]},{value:'Change Passwords After Tests',id:'change-passwords-after-tests',children:[]}];var layoutProps={rightToc:rightToc};var MDXLayout=\"wrapper\";function MDXContent(_ref){var components=_ref.components,props=Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_ref,[\"components\"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(MDXLayout,Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({},layoutProps,props,{components:components,mdxType:\"MDXLayout\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Sauce Labs test logs are securely stored, protecting them from external access. However, there are still some groups that can see test logs, including Sauce Support, your parent account, and other accounts in your company (depending on test privacy settings).\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\",{\"id\":\"dont-use-real-credentials\"},\"Don't Use Real Credentials\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"The best way to avoid this is to avoid using real credentials in tests by creating temporary accounts.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\",{\"id\":\"transmit-session-tokens-only\"},\"Transmit Session Tokens Only\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"You can avoid sensitive credentials with Selenium's ability to extract and inject cookies into accounts:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ol\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Create a session in your environment, either directly in the application engine, or by using a local Selenium session or headless browser.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Extract the session tokens (local storage objects, credentials, cookies, etc.).\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},\"Use Selenium to push these objects and tokens into the browser under the control of Sauce Labs.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"This technique avoids sending plain text passwords, however, the sent tokens and cookies are still logged. If your session tokens are not time sensitive, this only provides security through obscurity. We recommend using time-sensitive session tokens.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\",{\"id\":\"change-passwords-after-tests\"},\"Change Passwords After Tests\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"If generating tokens and using unique temporary accounts is not possible, we recommend you establish test actions that your suite always takes, in order to change to a new, randomly generated password.  \"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"After each test, use a locally automated browser, a direct connection to your application database, or a headless browser to change your test account's password to a new, randomly generated password. Ensure this password is stored in your CI environment or a credential store, or by some other method.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"In order to prevent credential loss from blocking test suites, you may want to start each test suite by changing the password, again, either by using a headless browser or local Selenium session to perform your password recovery process, or by directly interacting with your application's database.\"));};MDXContent.isMDXComponent=true;\n\n/***/ })\n\n}]);","inputSourceMap":null}