{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{107:function(e,t,a){\"use strict\";a.r(t),a.d(t,\"frontMatter\",(function(){return p})),a.d(t,\"metadata\",(function(){return m})),a.d(t,\"toc\",(function(){return d})),a.d(t,\"default\",(function(){return b}));var i=a(3),n=a(8),r=(a(0),a(222)),o=(a(223),a(228)),l=a.n(o),s=a(229),c=a.n(s),p={id:\"appium\",title:\"Using Appium for Automated Mobile App Testing\",sidebar_label:\"Using Appium\"},m={unversionedId:\"mobile-apps/automated-testing/appium\",id:\"mobile-apps/automated-testing/appium\",isDocsHomePage:!1,title:\"Using Appium for Automated Mobile App Testing\",description:\"This page is intended to provide you with a quick overview of how Appium works to get started with mobile application testing. For full documentation of Appium, with more examples in popular scripting languages, check out the Appium.io website.\",source:\"@site/docs/mobile-apps/automated-testing/appium.md\",slug:\"/mobile-apps/automated-testing/appium\",permalink:\"/mobile-apps/automated-testing/appium\",editUrl:\"https://github.com/saucelabs/sauce-docs/edit/master/docs/mobile-apps/automated-testing/appium.md\",version:\"current\",lastUpdatedBy:\"Kim\",lastUpdatedAt:1613209327,sidebar_label:\"Using Appium\",sidebar:\"someSidebar\",previous:{title:\"Choosing a Device for Mobile App Testing\",permalink:\"/mobile-apps/automated-testing/devices\"},next:{title:\"Appium Testing with Real Devices\",permalink:\"/mobile-apps/automated-testing/appium/real-devices\"}},d=[{value:\"Overview\",id:\"overview\",children:[]},{value:\"Appium Architecture\",id:\"appium-architecture\",children:[{value:\"Appium Client\",id:\"appium-client\",children:[]},{value:\"Appium Server\",id:\"appium-server\",children:[]}]},{value:\"The Seven Basic Steps of Testing with Appium\",id:\"the-seven-basic-steps-of-testing-with-appium\",children:[{value:\"1. Locating the Mobile Application\",id:\"1-locating-the-mobile-application\",children:[]},{value:\"2. Creating a WebDriver Instance\",id:\"2-creating-a-webdriver-instance\",children:[]},{value:\"3. Locating Application Elements\",id:\"3-locating-application-elements\",children:[]},{value:\"4. Performing Actions on the Application Elements\",id:\"4-performing-actions-on-the-application-elements\",children:[]},{value:\"5. Anticipating the Application Response\",id:\"5-anticipating-the-application-response\",children:[]},{value:\"6. Running Tests and Recording Results\",id:\"6-running-tests-and-recording-results\",children:[]},{value:\"7. Concluding the Tests\",id:\"7-concluding-the-tests\",children:[]}]},{value:\"Full Example with All Steps\",id:\"full-example-with-all-steps\",children:[]},{value:\"Additional Resources\",id:\"additional-resources\",children:[]}],u={toc:d};function b(e){var t=e.components,a=Object(n.default)(e,[\"components\"]);return Object(r.mdx)(\"wrapper\",Object(i.default)({},u,a,{components:t,mdxType:\"MDXLayout\"}),Object(r.mdx)(\"p\",null,\"This page is intended to provide you with a quick overview of how Appium works to get started with mobile application testing. For full documentation of Appium, with more examples in popular scripting languages, check out the \",Object(r.mdx)(\"a\",Object(i.default)({parentName:\"p\"},{href:\"http://appium.io\"}),\"Appium.io website\"),\".\"),Object(r.mdx)(\"h2\",{id:\"overview\"},\"Overview\"),Object(r.mdx)(\"p\",null,\"Appium was originally developed by Dan Cueller as a way to take advantage of the UIAutomation framework for Apple iOS to run tests against native mobile applications. Using the same syntax as \",Object(r.mdx)(\"a\",Object(i.default)({parentName:\"p\"},{href:\"https://www.selenium.dev\"}),\"Selenium\"),\", it shares similarities with Selenium's ability to automate interaction with a website through a mobile browser. Although Appium can test websites on a mobile device, it is more commonly used for testing native and hybrid mobile applications for both iOS and Android.\"),Object(r.mdx)(\"h2\",{id:\"appium-architecture\"},\"Appium Architecture\"),Object(r.mdx)(\"p\",null,\"Appium has a client-server architecture.\"),Object(r.mdx)(\"h3\",{id:\"appium-client\"},\"Appium Client\"),Object(r.mdx)(\"ul\",null,Object(r.mdx)(\"li\",{parentName:\"ul\"},\"Includes a \",Object(r.mdx)(\"a\",Object(i.default)({parentName:\"li\"},{href:\"http://appium.io/downloads\"}),\"set of client libraries\"),\" for various scripting languages in which you write your test scripts based on the Selenium WebDriver API.\")),Object(r.mdx)(\"h3\",{id:\"appium-server\"},\"Appium Server\"),Object(r.mdx)(\"ul\",null,Object(r.mdx)(\"li\",{parentName:\"ul\"},Object(r.mdx)(\"p\",{parentName:\"li\"},\"Includes a server component, based on node.js, which exposes the WebDriver API. In fact it exposes a superset of the WebDriver API known as the \",Object(r.mdx)(\"a\",Object(i.default)({parentName:\"p\"},{href:\"https://speakerdeck.com/jlipps/the-mobile-json-wire-protocol\"}),\"Mobile JSON Wire Protocol\"),\".\")),Object(r.mdx)(\"li\",{parentName:\"ul\"},Object(r.mdx)(\"p\",{parentName:\"li\"},\"Includes a \",Object(r.mdx)(\"a\",Object(i.default)({parentName:\"p\"},{href:\"http://appium.io/downloads.html\"}),\"desktop application\"),\", available for both OS X and Windows, that includes everything you need to run Appium bundled in a single package, as well as the ability to inspect elements in running applications.\"))),Object(r.mdx)(\"blockquote\",null,Object(r.mdx)(\"p\",{parentName:\"blockquote\"},Object(r.mdx)(\"strong\",{parentName:\"p\"},\"NOTE\"),\": Appium Desktop is currently unsupported by the Appium core team.\")),Object(r.mdx)(\"h2\",{id:\"the-seven-basic-steps-of-testing-with-appium\"},\"The Seven Basic Steps of Testing with Appium\"),Object(r.mdx)(\"p\",null,\"There are seven basic steps in creating an Appium test script for your application under test (AUT):\"),Object(r.mdx)(\"ol\",null,Object(r.mdx)(\"li\",{parentName:\"ol\"},Object(r.mdx)(\"a\",Object(i.default)({parentName:\"li\"},{href:\"/mobile-apps/automated-testing/appium#1-locating-the-mobile-application\"}),\"Set the location of the application (e.g., Sauce Storage, AWS, GitHub)\"),\".\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},Object(r.mdx)(\"a\",Object(i.default)({parentName:\"li\"},{href:\"/mobile-apps/automated-testing/appium#2-creating-a-webdriver-instance\"}),\"Create an Appium driver instance which points to a running Appium server (e.g., the servers on Sauce Labs)\"),\".\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},Object(r.mdx)(\"a\",Object(i.default)({parentName:\"li\"},{href:\"/mobile-apps/automated-testing/appium#3-locating-application-elements\"}),\"Locate an element within the application (e.g., a login button or link)\"),\".\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},Object(r.mdx)(\"a\",Object(i.default)({parentName:\"li\"},{href:\"/mobile-apps/automated-testing/appium#4-performing-actions-on-the-application-elements\"}),\"Perform an action on the element (e.g., tap the login button)\"),\".\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},Object(r.mdx)(\"a\",Object(i.default)({parentName:\"li\"},{href:\"/mobile-apps/automated-testing/appium#5-anticipating-the-application-response\"}),\"Anticipate the application response to the action (e.g., successfully logged in)\"),\".\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},Object(r.mdx)(\"a\",Object(i.default)({parentName:\"li\"},{href:\"/mobile-apps/automated-testing/appium#6-running-tests-and-recording-results\"}),\"Run tests and record test results. (e.g., log whether test passed, failed, or returned an error)\"),\".\"),Object(r.mdx)(\"li\",{parentName:\"ol\"},Object(r.mdx)(\"a\",Object(i.default)({parentName:\"li\"},{href:\"/mobile-apps/automated-testing/appium#7-concluding-the-tests\"}),\"Conclude the test (e.g., shut down connection to Sauce Labs)\"),\".\")),Object(r.mdx)(\"h3\",{id:\"1-locating-the-mobile-application\"},\"1. Locating the Mobile Application\"),Object(r.mdx)(\"p\",null,\"When you write an Appium test script, the most basic component is\\xa0the\\xa0\",Object(r.mdx)(\"a\",Object(i.default)({parentName:\"p\"},{href:\"https://wiki.saucelabs.com/pages/viewpage.action?pageId=48365693\"}),\"DesiredCapabilities\\xa0object\"),\", which sets the parameters of your test, such as the mobile platform and operating system you want to test against. Within that object,\\xa0one of the \",Object(r.mdx)(\"a\",Object(i.default)({parentName:\"p\"},{href:\"https://wiki.saucelabs.com/pages/viewpage.action?pageId=63475214\"}),\"required capabilities\"),\"\\xa0is\\xa0Application Path, or the\\xa0app\\xa0desired capability. One of the advantages of the Appium architecture is that the application you want to test can be hosted anywhere, from a local path to any other web host on the network, since the Appium server will send the commands it receives from the client to any application path you specify. Practically, you have three options.\\xa0\"),Object(r.mdx)(\"p\",null,\"See\\xa0\",Object(r.mdx)(\"a\",Object(i.default)({parentName:\"p\"},{href:\"/mobile-apps/app-storage\"}),\"Application Storage\"),\".\"),Object(r.mdx)(\"br\",null),Object(r.mdx)(\"h3\",{id:\"2-creating-a-webdriver-instance\"},\"2. Creating a WebDriver Instance\"),Object(r.mdx)(\"p\",null,\"The\\xa0WebDriver\\xa0instance is the starting point for all uses of the Mobile JSON Wire Protocol.\"),Object(r.mdx)(\"p\",null,\"You create an instance of the\\xa0WebDriver\\xa0interface using a constructor for either Android or iOS. For mobile native application tests, you set both the platform and browser to test against by setting the \",Object(r.mdx)(\"inlineCode\",{parentName:\"p\"},\"browserName\"),\"\\xa0desired capability.\\xa0\"),Object(r.mdx)(\"p\",null,\"Once you have created an instance of the\\xa0WebDriver\\xa0interface, you use this instance to invoke methods, such as tap and swipe, to access other interfaces used in basic test steps. You do so by assigning the instance to a variable when you create it, and by using that variable to invoke methods.\"),Object(r.mdx)(\"h4\",{id:\"webdriver-examples\"},\"WebDriver Examples\"),Object(r.mdx)(\"p\",null,\"These psuedo-code examples illustrate how to instantiate iOS and Android\\xa0WebDriver objects in the various Appium language bindings.\"),Object(r.mdx)(l.a,{defaultValue:\"Java\",values:[{label:\"Java\",value:\"Java\"},{label:\"Python\",value:\"Python\"},{label:\"Node.js\",value:\"Node.js\"},{label:\"Ruby\",value:\"Ruby\"},{label:\"C#\",value:\"C#\"}],mdxType:\"Tabs\"},Object(r.mdx)(c.a,{value:\"Java\",mdxType:\"TabItem\"},Object(r.mdx)(\"p\",null,\"Visit the java-client page for more information on the Java Appium language bindings.\"),Object(r.mdx)(\"p\",null,\"iOS\"),Object(r.mdx)(\"pre\",null,Object(r.mdx)(\"code\",Object(i.default)({parentName:\"pre\"},{className:\"language-java\"}),'WebDriver driver = new iOSDriver<WebElement>( new URL(\"https://ondemand.us-west-1.saucelabs.com/wd/hub\"), capabilities);\\n')),Object(r.mdx)(\"p\",null,\"Android\"),Object(r.mdx)(\"pre\",null,Object(r.mdx)(\"code\",Object(i.default)({parentName:\"pre\"},{className:\"language-java\"}),'WebDriver driver = new AndroidDriver<WebElement>( new URL(\"https://ondemand.us-west-1.saucelabs.com/wd/hub\"), capabilities);\\n'))),Object(r.mdx)(c.a,{value:\"Python\",mdxType:\"TabItem\"},Object(r.mdx)(\"p\",null,\"Visit the python-client page for more information on the Python Appium language bindings.\"),Object(r.mdx)(\"p\",null,\"iOS\"),Object(r.mdx)(\"pre\",null,Object(r.mdx)(\"code\",Object(i.default)({parentName:\"pre\"},{className:\"language-py\"}),\"desired_caps = {}\\ndesired_caps['platformName'] = 'iOS'\\ndesired_caps['app'] = PATH('../../apps/MyIOS.app.zip')\\nself.driver = webdriver.Remote('https://ondemand.us-west-1.saucelabs.com/wd/hub', desired_caps)\\n\")),Object(r.mdx)(\"p\",null,\"Android\"),Object(r.mdx)(\"pre\",null,Object(r.mdx)(\"code\",Object(i.default)({parentName:\"pre\"},{className:\"language-py\"}),\"desired_caps = {}\\ndesired_caps['platformName'] = 'Android'\\ndesired_caps['app'] = PATH('../../apps/MyIOS.apk')\\nself.driver = webdriver.Remote('https://ondemand.us-west-1.saucelabs.com/wd/hub', desired_caps)\\n\"))),Object(r.mdx)(c.a,{value:\"Node.js\",mdxType:\"TabItem\"},Object(r.mdx)(\"p\",null,\"We recommend using the webdriverio testing utility as your WebDriver testing framework for node.js. For more information, refer to the documentation.\"),Object(r.mdx)(\"p\",null,\"iOS\"),Object(r.mdx)(\"pre\",null,Object(r.mdx)(\"code\",Object(i.default)({parentName:\"pre\"},{className:\"language-js\"}),'const opts = {\\n  capabilities: {\\n    platformName: \"iOS\",\\n    app: \"/path/to/the/downloaded/MyiOS.app.zip\",\\n  }\\n};\\n\\nconst client = wdio.remote(opts);\\n')),Object(r.mdx)(\"p\",null,\"Android\"),Object(r.mdx)(\"pre\",null,Object(r.mdx)(\"code\",Object(i.default)({parentName:\"pre\"},{className:\"language-js\"}),'const opts = {\\n  capabilities: {\\n    platformName: \"Android\",\\n    app: \"/path/to/the/downloaded/MyAndroid.apk\",\\n  }\\n};\\n\\nconst client = wdio.remote(opts);\\n'))),Object(r.mdx)(c.a,{value:\"Ruby\",mdxType:\"TabItem\"},Object(r.mdx)(\"p\",null,\"Visit appium_lib for more information about the Ruby Appium language bindings.\"),Object(r.mdx)(\"p\",null,\"iOS\"),Object(r.mdx)(\"pre\",null,Object(r.mdx)(\"code\",Object(i.default)({parentName:\"pre\"},{className:\"language-ruby\"}),\"opts = { caps: { platformName: :ios, app: '/path/to/MyiOS.app'}, appium_lib: { wait_timeout: 30 }}\\nappium_driver = Appium::Driver.new(opts, true)\\nappium_driver.start_driver\\n\")),Object(r.mdx)(\"p\",null,\"Android\"),Object(r.mdx)(\"pre\",null,Object(r.mdx)(\"code\",Object(i.default)({parentName:\"pre\"},{className:\"language-ruby\"}),\"opts = { caps: { platformName: :android, app: '/path/to/MyAndroid.apk'}, appium_lib: { wait_timeout: 30 }}\\nappium_driver = Appium::Driver.new(opts, true)\\nappium_driver.start_driver\\n\"))),Object(r.mdx)(c.a,{value:\"C#\",mdxType:\"TabItem\"},Object(r.mdx)(\"p\",null,\"Visit the appium-dot-net page for more information about the C# Appium language bindings.\"),Object(r.mdx)(\"p\",null,\"iOS\"),Object(r.mdx)(\"pre\",null,Object(r.mdx)(\"code\",Object(i.default)({parentName:\"pre\"},{className:\"language-CS\"}),'var sauceURL = \"https://ondemand.us-west-1.saucelabs.com\";\\nvar driver = new IOSDriver<IWebElement>(new Uri(sauceURL));\\n')),Object(r.mdx)(\"p\",null,\"Android\"),Object(r.mdx)(\"pre\",null,Object(r.mdx)(\"code\",Object(i.default)({parentName:\"pre\"},{className:\"language-CS\"}),'var sauceURL = \"https://ondemand.us-west-1.saucelabs.com\";\\nvar driver = new AndroidDriver<IWebElement>(new Uri(sauceURL));\\n')))),Object(r.mdx)(\"br\",null),Object(r.mdx)(\"h3\",{id:\"3-locating-application-elements\"},\"3. Locating Application Elements\"),Object(r.mdx)(\"p\",null,\"In order to find elements in a mobile environment, Appium implements a number of locator strategies that are specific to, or adaptations for, the particulars of a mobile device.\\xa0Three are available for both Android and iOS:\"),Object(r.mdx)(l.a,{defaultValue:\"accessibility ID\",values:[{label:\"accessibility ID\",value:\"accessibility ID\"},{label:\"class name\",value:\"class name\"},{label:\"id\",value:\"id\"},{label:\"xpath\",value:\"xpath\"}],mdxType:\"Tabs\"},Object(r.mdx)(c.a,{value:\"accessibility ID\",mdxType:\"TabItem\"},Object(r.mdx)(\"h4\",{id:\"accessibility-id\"},\"accessibility ID\"),Object(r.mdx)(\"p\",null,\"The\\xa0\",Object(r.mdx)(\"inlineCode\",{parentName:\"p\"},\"accessibility ID\"),\"\\xa0locator strategy is designed to read a unique identifier for a UI element. This has the benefit of not changing during localization or any other process that might change text. In addition, it can be an aid in creating cross-platform tests, if elements that are functionally the same have the same accessibility id.\"),Object(r.mdx)(\"ul\",null,Object(r.mdx)(\"li\",{parentName:\"ul\"},\"For iOS, this is the\\xa0accessibility identifier\\xa0laid out by Apple\\xa0\",Object(r.mdx)(\"a\",Object(i.default)({parentName:\"li\"},{href:\"https://developer.apple.com/documentation/uikit/uiaccessibilityidentification\"}),\"here\"),\".\"),Object(r.mdx)(\"li\",{parentName:\"ul\"},\"For Android, the\\xa0accessibility id\\xa0maps to the\\xa0content-description\\xa0for the element, as described\\xa0\",Object(r.mdx)(\"a\",Object(i.default)({parentName:\"li\"},{href:\"https://developer.android.com/guide/topics/ui/accessibility/apps\"}),\"here\"),\".\")),Object(r.mdx)(\"p\",null,\"For both platforms getting an element, or multiple elements, by their\\xa0accessibility id\\xa0is usually the best method. It is also the preferred way, in replacement of the deprecated\\xa0name\\xa0strategy.\"),Object(r.mdx)(\"p\",null,\"The client libraries specific to Appium support getting elements by\\xa0\",Object(r.mdx)(\"inlineCode\",{parentName:\"p\"},\"accessibility id\"),\".\"),Object(r.mdx)(\"pre\",null,Object(r.mdx)(\"code\",Object(i.default)({parentName:\"pre\"},{className:\"language-py\"}),\"#python example\\ndriver.find_element_by_accessibility_id('my_accessibility_identifier')\\n\"))),Object(r.mdx)(c.a,{value:\"class name\",mdxType:\"TabItem\"},Object(r.mdx)(\"h4\",{id:\"class-name\"},\"class name\"),Object(r.mdx)(\"p\",null,\"The\\xa0\",Object(r.mdx)(\"inlineCode\",{parentName:\"p\"},\"class name\"),\"\\xa0strategy is a\\xa0string\\xa0representing a UI element on the current view.\"),Object(r.mdx)(\"ul\",null,Object(r.mdx)(\"li\",{parentName:\"ul\"},\"For iOS it is the full name of a\\xa0UIAutomation\\xa0class, and will begin with\\xa0UIA-, such as\\xa0UIATextField\\xa0for a text field. A full reference can be found\\xa0here.\"),Object(r.mdx)(\"li\",{parentName:\"ul\"},\"For Android it is the fully qualified name of a\\xa0UI Automator\\xa0class, such\\xa0android.widget.EditText\\xa0for a text field. A full reference can be found\\xa0here.\\nThe client libraries for Appium support getting a single element, or multiple elements, based on the\\xa0class name. This functionality is in the Selenium clients (e.g.,\\xa0Python).\")),Object(r.mdx)(\"pre\",null,Object(r.mdx)(\"code\",Object(i.default)({parentName:\"pre\"},{className:\"language-py\"}),\"#python example\\ndriver.find_element_by_class_name('android.widget.DatePicker')\\n\"))),Object(r.mdx)(c.a,{value:\"id\",mdxType:\"TabItem\"},Object(r.mdx)(\"h4\",{id:\"id\"},\"id\"),Object(r.mdx)(\"p\",null,\"In the mobile environment,\\xa0\",Object(r.mdx)(\"inlineCode\",{parentName:\"p\"},\"id\"),\"s are not, as in WebDriver, CSS ids, but rather some form of native identifier.\"),Object(r.mdx)(\"ul\",null,Object(r.mdx)(\"li\",{parentName:\"ul\"},\"For iOS the situation is complicated. Appium will first search for an\\xa0accessibility id\\xa0that matches. If there is none found, a string match will be attempted on the element labels. Finally, if the id passed in is a localization key, it will search the localized string.\"),Object(r.mdx)(\"li\",{parentName:\"ul\"},\"For Android, the\\xa0id\\xa0is the element\\u2019s\\xa0android:id.\")),Object(r.mdx)(\"p\",null,\"Example:\\xa0Locate elements for username and password\"),Object(r.mdx)(\"p\",null,\"This example (Java) invokes the\\xa0findElement\\xa0method on the\\xa0driver\\xa0variable, using the\\xa0name\\xa0attribute to locate the\\xa0username\\xa0and\\xa0password\\xa0text input elements, and (optionally) the\\xa0id\\xa0attribute to locate the\\xa0form\\xa0element.\"),Object(r.mdx)(\"pre\",null,Object(r.mdx)(\"code\",Object(i.default)({parentName:\"pre\"},{className:\"language-java\"}),'import org.openqa.selenium.By;\\nimport org.openqa.selenium.WebElement;\\nWebElement emailInput = driver.findElement(By.id(\"fbemail\"));\\n'))),Object(r.mdx)(c.a,{value:\"xpath\",mdxType:\"TabItem\"},Object(r.mdx)(\"h4\",{id:\"xpath\"},\"xpath\"),Object(r.mdx)(\"p\",null,\"The\\xa0\",Object(r.mdx)(\"inlineCode\",{parentName:\"p\"},\"xpath\"),\"\\xa0locator strategy is also available in the WebDriver protocol, and exposes the functionality of\\xa0\",Object(r.mdx)(\"a\",Object(i.default)({parentName:\"p\"},{href:\"https://www.w3.org/TR/xpath20/\"}),\"XPath\\xa0language\"),\" to locate elements within a mobile view. An XML representation of the view is created in Appium, and searches are made against that image.\"),Object(r.mdx)(\"p\",null,\"The Selenium clients have methods for retrieving elements using the\\xa0xpath\\xa0locator strategy.\"),Object(r.mdx)(\"pre\",null,Object(r.mdx)(\"code\",Object(i.default)({parentName:\"pre\"},{className:\"language-py\"}),\"#python example\\ndriver.find_element_by_xpath('//UIAApplication[1]/UIAWindow[1]/UIATextField[1]')\\n\")))),Object(r.mdx)(\"h4\",{id:\"best-practices-for-identifying-application-elements\"},\"Best Practices for Identifying Application Elements\"),Object(r.mdx)(\"p\",null,\"It is always best to use an element locator that uniquely identifies the element, like an id or an accessibility id. Class names and xpath are best used only when IDs are not available. Multiple elements can have the same class name, and using xpath searches through the entire markup to find the element, which can slow down your tests.\"),Object(r.mdx)(\"br\",null),Object(r.mdx)(\"h3\",{id:\"4-performing-actions-on-the-application-elements\"},\"4. Performing Actions on the Application Elements\"),Object(r.mdx)(\"p\",null,\"Once you've identified the mobile elements you want your test to interact with, the next step is to interact with them. You perform an action on a mobile element by invoking an interaction method on an instance of the\\xa0WebElement\\xa0interface.\"),Object(r.mdx)(\"p\",null,\"The\\xa0WebElement\\xa0interface declares basic interaction methods including:\"),Object(r.mdx)(\"ul\",null,Object(r.mdx)(\"li\",{parentName:\"ul\"},\"The\\xa0\",Object(r.mdx)(\"inlineCode\",{parentName:\"li\"},\"sendKeys\"),\"\\xa0method, to enter text\"),Object(r.mdx)(\"li\",{parentName:\"ul\"},\"The\\xa0\",Object(r.mdx)(\"inlineCode\",{parentName:\"li\"},\"clear\"),\"\\xa0method, to clear entered text\"),Object(r.mdx)(\"li\",{parentName:\"ul\"},\"The\\xa0\",Object(r.mdx)(\"inlineCode\",{parentName:\"li\"},\"submit\"),\"\\xa0method, to submit a form\\xa0\")),Object(r.mdx)(\"h4\",{id:\"example\"},\"Example\"),Object(r.mdx)(\"p\",null,\"This example first invokes the\\xa0\",Object(r.mdx)(\"inlineCode\",{parentName:\"p\"},\"sendKeys\"),\"\\xa0method to enter text in the\\xa0username\\xa0and\\xa0password\\xa0elements, and then invokes the\\xa0submit\\xa0method to submit the\\xa0login\\xa0form.\\xa0Enter a username and password:\"),Object(r.mdx)(\"pre\",null,Object(r.mdx)(\"code\",Object(i.default)({parentName:\"pre\"},{className:\"language-sh\"}),'emailInput.sendKeys(\"SauceIsAwesome@email.com\");\\n')),Object(r.mdx)(\"h4\",{id:\"submit-the-form\"},\"Submit the Form\"),Object(r.mdx)(\"p\",null,\"The\\xa0submit\\xa0method can be invoked either on any text input element on a form, or on the form element itself. Submit Text Element:\"),Object(r.mdx)(\"pre\",null,Object(r.mdx)(\"code\",Object(i.default)({parentName:\"pre\"},{className:\"language-sh\"}),\"emailInput.submit();\\n\")),Object(r.mdx)(\"br\",null),Object(r.mdx)(\"h3\",{id:\"5-anticipating-the-application-response\"},\"5. Anticipating the Application Response\"),Object(r.mdx)(\"p\",null,\"When you click a\\xa0\",Object(r.mdx)(\"strong\",{parentName:\"p\"},\"Submit\"),\"\\xa0button, you know that you have to wait a second or two for your action to reach the server, and for the server to respond, before you do anything else.\"),Object(r.mdx)(\"p\",null,\"If you're trying to test the response, and what happens afterwards, then you need to build that waiting time into your test. Otherwise, the test might fail because the elements that are expected for the next step haven't loaded into the browser you. The WebDriver API supports two basic techniques for anticipating browser response by waiting:\\xa0implicit waits\\xa0and\\xa0explicit waits.\\xa0\"),Object(r.mdx)(\"blockquote\",null,Object(r.mdx)(\"p\",{parentName:\"blockquote\"},Object(r.mdx)(\"strong\",{parentName:\"p\"},\"NOTE\"),\": Do not mix implicit and explicit waits. Doing so can cause unpredictable wait times. For example setting an implicit wait of 10s and an explicit wait of 15 seconds, could cause a timeout to occur after 20 seconds.\\xa0\")),Object(r.mdx)(\"h4\",{id:\"wait-strategies\"},Object(r.mdx)(\"strong\",{parentName:\"h4\"},\"Wait Strategies\")),Object(r.mdx)(l.a,{defaultValue:\"Implicit Waits\",values:[{label:\"Implicit Waits\",value:\"Implicit Waits\"},{label:\"Explicit Waits\",value:\"Explicit Waits\"}],mdxType:\"Tabs\"},Object(r.mdx)(c.a,{value:\"Implicit Waits\",mdxType:\"TabItem\"},Object(r.mdx)(\"p\",null,Object(r.mdx)(\"em\",{parentName:\"p\"},\"Implicit waits\"),\" set a maximum time that the Appium server will continue trying to find an element. Using implicit waits is not a best practice because application response times are not definitely predictable and fixed elapsed times are not applicable to all interactions. Using explicit waits requires more technical sophistication,\\xa0but is a Sauce Labs best practice.\"),Object(r.mdx)(\"p\",null,\"This example code (Java) illustrates how you could use an implicit wait to anticipate web browser response after submitting the login form:\"),Object(r.mdx)(\"pre\",null,Object(r.mdx)(\"code\",Object(i.default)({parentName:\"pre\"},{className:\"language-java\"}),\"driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\\n\"))),Object(r.mdx)(c.a,{value:\"Explicit Waits\",mdxType:\"TabItem\"},Object(r.mdx)(\"p\",null,Object(r.mdx)(\"em\",{parentName:\"p\"},\"Explicit waits\"),\" wait until an\\xa0expected condition\\xa0occurs on the web page, or until a maximum wait time elapses. To use an explicit wait, you create an instance of the\\xa0WebDriverWait\\xa0class with a maximum wait time, and you invoke its\\xa0until\\xa0method with an expected condition.\\xa0\"),Object(r.mdx)(\"p\",null,\"The WebDriver API provides an\\xa0ExpectedConditions\\xa0class with methods for various standard types of expected condition. These methods return an instance of an\\xa0expected condition\\xa0class. You can pass an invocation of these standard expected-condition methods as argument values to\\xa0until\\xa0method. You can also pass - in ways that your programming language and its WebDriver API support - any function, code block, or closure that returns a boolean value or an object reference to a found web element as an argument value to the\\xa0until\\xa0method. How this is done varies over programming languages. The\\xa0until\\xa0method checks repeatedly, until the maximum wait time elapses, for a\\xa0true\\xa0boolean return value or a non-null\\xa0object reference, as an indication that the expected condition has occurred.\"),Object(r.mdx)(\"p\",null,\"This example code (Java) illustrates how you could use an explicit wait to anticipate web browser response after submitting the login form.\"),Object(r.mdx)(\"pre\",null,Object(r.mdx)(\"code\",Object(i.default)({parentName:\"pre\"},{className:\"language-java\"}),'import org.openqa.selenium.support.ui.ExpectedConditions;\\xa0\\nimport org.openqa.selenium.support.ui.WebDriverWait;\\xa0\\nWebDriverWait wait = new WebDriverWait(driver, 10); WebElement messageElement = wait.until( ExpectedConditions.presenceOfElementLocated(By.id(\"loginResponse\")) );\\n')))),Object(r.mdx)(\"br\",null),Object(r.mdx)(\"h3\",{id:\"6-running-tests-and-recording-results\"},\"6. Running Tests and Recording Results\"),Object(r.mdx)(\"p\",null,\"Running tests and recording test results is the ultimate purpose of your test script: you run tests in an automated test script in order to\\xa0evaluate function and performance\\xa0in the AUT, without requiring human interaction.\"),Object(r.mdx)(\"h4\",{id:\"test-frameworks\"},\"Test Frameworks\"),Object(r.mdx)(\"p\",null,\"To run test and to record test results, you use methods of a\\xa0test framework\\xa0for your programming language. There are many available test frameworks, including the frameworks in the so-called\\xa0XUnitfamily, which includes:\"),Object(r.mdx)(\"ul\",null,Object(r.mdx)(\"li\",{parentName:\"ul\"},\"JUnit\\xa0for Java\"),Object(r.mdx)(\"li\",{parentName:\"ul\"},\"NUnit\\xa0for C#\"),Object(r.mdx)(\"li\",{parentName:\"ul\"},\"unittest\\xa0or\\xa0pyunit\\xa0for Python\"),Object(r.mdx)(\"li\",{parentName:\"ul\"},\"RSpec\\xa0for Ruby\")),Object(r.mdx)(\"p\",null,\"For some programming languages, test frameworks other than those in the XUnit family are common - for example, the\\xa0RSpec\\xa0framework for Ruby. The\\xa0Sauce Labs sample test framework repos\\xa0on GitHub contain over 60 examples of test frameworks set up to work with Sauce Labs.\\xa0\"),Object(r.mdx)(\"h4\",{id:\"test-assertions\"},\"Test Assertions\"),Object(r.mdx)(\"p\",null,\"Most test frameworks implement the basic concept of an\\xa0assertion, a method representing whether or not a logical condition holds after interaction with an AUT. Test frameworks generally declare methods whose names begin with the term\\xa0\",Object(r.mdx)(\"inlineCode\",{parentName:\"p\"},\"assert\"),\"\\xa0and end with a term for a logical condition, e.g.,\\xa0\",Object(r.mdx)(\"inlineCode\",{parentName:\"p\"},\"assertEquals\"),\"\\xa0in JUnit. Generally, when the logical condition represented by an\\xa0assert\\xa0method does not hold, an exception for the condition is thrown. There are various approaches to using exceptions in most test frameworks.\\xa0The SeleniumHQ documentation has more detailed information\\xa0on using both assertions and verifications in your tests.\\xa0\"),Object(r.mdx)(\"h4\",{id:\"recording-test-results\"},\"Recording Test Results\"),Object(r.mdx)(\"p\",null,\"Recording of test results can be done in various ways, supported by the test framework or by a logging framework for the programming language, or by both together. Selenium also supports taking screenshots of web browser windows as a helpful additional type of recording. Because of the wide variations in recording technique, this beginning section omits recording, instead emphasizing a simple approach to applying a test using an\\xa0assert\\xa0method. The scripts in\\xa0Sauce Labs Demonstration Scripts\\xa0include examples of setting up reporting of test results to Sauce Labs, as do the framework scripts in the\\xa0Sauce Labs sample test framework repos.\"),Object(r.mdx)(\"p\",null,\"The following example runs a test by asserting that the login response message is equal to an expected success message:\"),Object(r.mdx)(\"pre\",null,Object(r.mdx)(\"code\",Object(i.default)({parentName:\"pre\"},{className:\"language-sh\"}),'import junit.framework.Assert;\\nimport junit.framework.TestCase;\\n\\nWebElement messageElement     = driver.findElement(By.id(\"loginResponse\"));\\nString message                = messageElement.getText();\\nString successMsg             = \"Welcome to foo. You logged in successfully.\";\\nassertEquals (message, successMsg);\\n')),Object(r.mdx)(\"br\",null),Object(r.mdx)(\"h3\",{id:\"7-concluding-the-tests\"},\"7. Concluding the Tests\"),Object(r.mdx)(\"h4\",{id:\"the-quit-method\"},\"The\\xa0\",Object(r.mdx)(\"inlineCode\",{parentName:\"h4\"},\"quit\"),\"\\xa0Method\"),Object(r.mdx)(\"p\",null,\"You conclude a test by invoking the\\xa0\",Object(r.mdx)(\"em\",{parentName:\"p\"},Object(r.mdx)(\"inlineCode\",{parentName:\"em\"},\"quit\"),\"\\xa0method\"),\" on an instance of the\\xa0WebDriver\\xa0interface (e.g., on the\\xa0driver\\xa0variable).\\xa0\"),Object(r.mdx)(\"p\",null,\"The\\xa0\",Object(r.mdx)(\"inlineCode\",{parentName:\"p\"},\"quit\"),\"\\xa0method concludes a test by disposing of resources, which allows later tests to run without resources and application state affected by earlier tests. The\\xa0quit\\xa0method:\"),Object(r.mdx)(\"ul\",null,Object(r.mdx)(\"li\",{parentName:\"ul\"},\"quits the web browser application, closing all web pages\"),Object(r.mdx)(\"li\",{parentName:\"ul\"},\"quits the WebDriver server, which interacts with the web browser\"),Object(r.mdx)(\"li\",{parentName:\"ul\"},\"releases\\xa0driver, the variable referencing the unique instance of the\\xa0WebDriver\\xa0interface.\\xa0\")),Object(r.mdx)(\"p\",null,\"The following example invokes the\\xa0quit\\xa0method on the\\xa0driver\\xa0variable:\"),Object(r.mdx)(\"pre\",null,Object(r.mdx)(\"code\",Object(i.default)({parentName:\"pre\"},{className:\"language-sh\"}),\"driver.quit();\\n\")),Object(r.mdx)(\"br\",null),Object(r.mdx)(\"h2\",{id:\"full-example-with-all-steps\"},\"Full Example with All Steps\"),Object(r.mdx)(\"p\",null,\"The following example includes code for all steps. The example also defines a Java test class Example, and its main method, so that the code can be run.\"),Object(r.mdx)(\"p\",null,Object(r.mdx)(\"strong\",{parentName:\"p\"},\"Java Example\")),Object(r.mdx)(\"pre\",null,Object(r.mdx)(\"code\",Object(i.default)({parentName:\"pre\"},{className:\"language-java\"}),'package com.yourcompany;\\nimport org.openqa.selenium.By;\\nimport org.openqa.selenium.WebDriver;\\nimport org.openqa.selenium.WebElement;\\nimport org.openqa.selenium.remote.DesiredCapabilities;\\nimport io.appium.java_client.android.AndroidDriver;\\nimport java.net.MalformedURLException;\\nimport java.net.URL;\\nimport junit.framework.Assert;\\npublic class SampleSauceTest {\\n\\n    public static void  main() throws MalformedURLException {\\n        desiredCapabilities capabilities = new DesiredCapabilities();\\n        capabilities.setCapability(\"platformName\", \"Android\");\\n        capabilities.setCapability(\"deviceName\", \"Android GoogleAPI Emulator\");\\n        capabilities.setCapability(\"platformVersion\", \"10.0\");\\n        capabilities.setCapability(\"app\", \"storage:filename=swag-labs.apk\");\\n        capabilities.setCapability(\"browserName\", \"\");\\n        capabilities.setCapability(\"deviceOrientation\", \"portrait\");\\n        capabilities.setCapability(\"appiumVersion\", \"1.16.0\");\\n        WebDriver driver = new AndroidDriver<WebElement>( new URL(\"http://SAUCE_USERNAME:SAUCE_ACCESS_KEY@ondemand.us-west-1.saucelabs.com/wd/hub\"), capabilities);\\n\\n        WebElement emailInput = driver.findElement(By.id(\"fbemail\"));\\n        emailInput.sendKeys(\"SauceIsAwesome@email.com\");\\n        assertEquals(emailInput.getText(), \"SauceIsAwesome@email.com\");\\n\\n        driver.quit();\\n    }\\n}\\n')),Object(r.mdx)(\"h2\",{id:\"additional-resources\"},\"Additional Resources\"),Object(r.mdx)(\"p\",null,\"There are many additional resources available if you want to dive into more detail with Appium and mobile application testing.\"),Object(r.mdx)(\"ul\",null,Object(r.mdx)(\"li\",{parentName:\"ul\"},Object(r.mdx)(\"a\",Object(i.default)({parentName:\"li\"},{href:\"https://wiki.saucelabs.com/pages/viewpage.action?pageId=63480380\"}),\"Appium Bootcamp by Dave Haeffner and Matthew Edwards\")),Object(r.mdx)(\"li\",{parentName:\"ul\"},Object(r.mdx)(\"a\",Object(i.default)({parentName:\"li\"},{href:\"http://appium.io\"}),\"Official Appium website and documentation\")),Object(r.mdx)(\"li\",{parentName:\"ul\"},Object(r.mdx)(\"a\",Object(i.default)({parentName:\"li\"},{href:\"https://youtu.be/1J0aXDbjiUE?list=PLSIUOFhnxEiCODb8XQB-RUQ0RGNZ2yW7d\"}),\"An Introduction to Appium\"),\", presented by Jonathan Lipps of Sauce Labs and the Appium project given at the 2013 Google Test Automation Conference\"),Object(r.mdx)(\"li\",{parentName:\"ul\"},Object(r.mdx)(\"a\",Object(i.default)({parentName:\"li\"},{href:\"https://confengine.com/selenium-conf-2015/proposal/1319/the-mobile-json-wire-protocol\"}),\"A talk on the mobile JSON wire protocol\"),\", presented by Jonathan Lipps at the 2015 Selenium Conference\"),Object(r.mdx)(\"li\",{parentName:\"ul\"},Object(r.mdx)(\"a\",Object(i.default)({parentName:\"li\"},{href:\"http://stackshare.io/sauce-labs/mobile-automation-with-appium-and-sauce-labs\"}),\"An in-depth tutorial\"),\", by Jonathan Lipps covering Appium basics using Ruby and Sauce Labs\")))}b.isMDXComponent=!0},222:function(e,t,a){\"use strict\";a.r(t),a.d(t,\"MDXContext\",(function(){return p})),a.d(t,\"MDXProvider\",(function(){return u})),a.d(t,\"mdx\",(function(){return f})),a.d(t,\"useMDXComponents\",(function(){return d})),a.d(t,\"withMDXComponents\",(function(){return m}));var i=a(0),n=a.n(i);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var i in a)Object.prototype.hasOwnProperty.call(a,i)&&(e[i]=a[i])}return e}).apply(this,arguments)}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,i,n=function(e,t){if(null==e)return{};var a,i,n={},r=Object.keys(e);for(i=0;i<r.length;i++)a=r[i],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)a=r[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=n.a.createContext({}),m=function(e){return function(t){var a=d(t.components);return n.a.createElement(e,o({},t,{components:a}))}},d=function(e){var t=n.a.useContext(p),a=t;return e&&(a=\"function\"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=d(e.components);return n.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:\"code\",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},h=n.a.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,l=c(e,[\"components\",\"mdxType\",\"originalType\",\"parentName\"]),p=d(a),m=i,u=p[\"\".concat(o,\".\").concat(m)]||p[m]||b[m]||r;return a?n.a.createElement(u,s(s({ref:t},l),{},{components:a})):n.a.createElement(u,s({ref:t},l))}));function f(e,t){var a=arguments,i=t&&t.mdxType;if(\"string\"==typeof e||i){var r=a.length,o=new Array(r);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType=\"string\"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=a[c];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,a)}h.displayName=\"MDXCreateElement\"},223:function(e,t,a){\"use strict\";var i=a(4);Object.defineProperty(t,\"__esModule\",{value:!0}),t.useBaseUrlUtils=o,t.default=function(e,t){void 0===t&&(t={});return(0,o().withBaseUrl)(e,t)};var n=i(a(29)),r=a(224);function o(){var e=(0,n.default)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,a=void 0===t?\"/\":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,a,i){var n=void 0===i?{}:i,o=n.forcePrependBaseUrl,l=void 0!==o&&o,s=n.absolute,c=void 0!==s&&s;if(!a)return a;if(a.startsWith(\"#\"))return a;if((0,r.hasProtocol)(a))return a;if(l)return t+a;var p=a.startsWith(t)?a:t+a.replace(/^\\//,\"\");return c?e+p:p}(i,a,e,t)}}}},224:function(e,t,a){\"use strict\";function i(e){return!0===/^(\\w*:|\\/\\/)/.test(e)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.hasProtocol=i,t.default=function(e){return void 0!==e&&!i(e)}},225:function(e,t,a){\"use strict\";function i(e){var t,a,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=i(e[t]))&&(n&&(n+=\" \"),n+=a);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}a.r(t),t.default=function(){for(var e,t,a=0,n=\"\";a<arguments.length;)(e=arguments[a++])&&(t=i(e))&&(n&&(n+=\" \"),n+=t);return n}},226:function(e,t,a){\"use strict\";var i=a(4);Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var n=a(0),r=i(a(227));var o=function(){var e=(0,n.useContext)(r.default);if(null==e)throw new Error(\"`useUserPreferencesContext` is used outside of `Layout` Component.\");return e};t.default=o},227:function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var i=(0,a(0).createContext)(void 0);t.default=i},228:function(e,t,a){\"use strict\";var i=a(4),n=a(30);Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var r=n(a(0)),o=i(a(226)),l=i(a(225)),s=i(a(198)),c=37,p=39;var m=function(e){var t=e.lazy,a=e.block,i=e.defaultValue,n=e.values,m=e.groupId,d=e.className,u=(0,o.default)(),b=u.tabGroupChoices,h=u.setTabGroupChoices,f=(0,r.useState)(i),g=f[0],x=f[1],O=r.Children.toArray(e.children);if(null!=m){var j=b[m];null!=j&&j!==g&&n.some((function(e){return e.value===j}))&&x(j)}var v=function(e){x(e),null!=m&&h(m,e)},w=[];return r.default.createElement(\"div\",null,r.default.createElement(\"ul\",{role:\"tablist\",\"aria-orientation\":\"horizontal\",className:(0,l.default)(\"tabs\",{\"tabs--block\":a},d)},n.map((function(e){var t=e.value,a=e.label;return r.default.createElement(\"li\",{role:\"tab\",tabIndex:0,\"aria-selected\":g===t,className:(0,l.default)(\"tabs__item\",s.default.tabItem,{\"tabs__item--active\":g===t}),key:t,ref:function(e){return w.push(e)},onKeyDown:function(e){!function(e,t,a){switch(a.keyCode){case p:!function(e,t){var a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()}(e,t);break;case c:!function(e,t){var a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()}(e,t)}}(w,e.target,e)},onFocus:function(){return v(t)},onClick:function(){v(t)}},a)}))),t?(0,r.cloneElement)(O.filter((function(e){return e.props.value===g}))[0],{className:\"margin-vert--md\"}):r.default.createElement(\"div\",{className:\"margin-vert--md\"},O.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==g})}))))};t.default=m},229:function(e,t,a){\"use strict\";var i=a(4);Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=void 0;var n=i(a(3)),r=i(a(0));var o=function(e){var t=e.children,a=e.hidden,i=e.className;return r.default.createElement(\"div\",(0,n.default)({role:\"tabpanel\"},{hidden:a,className:i}),t)};t.default=o}}]);","name":"8d92f975.20f08cc7.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[70],{\n\n/***/ 107:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"frontMatter\", function() { return frontMatter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"metadata\", function() { return metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toc\", function() { return toc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MDXContent; });\n/* harmony import */ var _Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);\n/* harmony import */ var _Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(222);\n/* harmony import */ var _docusaurus_useBaseUrl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(223);\n/* harmony import */ var _docusaurus_useBaseUrl__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_docusaurus_useBaseUrl__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _theme_Tabs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(228);\n/* harmony import */ var _theme_Tabs__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_theme_Tabs__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _theme_TabItem__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(229);\n/* harmony import */ var _theme_TabItem__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_theme_TabItem__WEBPACK_IMPORTED_MODULE_6__);\nvar frontMatter={id:'appium',title:'Using Appium for Automated Mobile App Testing',sidebar_label:'Using Appium'};var metadata={\"unversionedId\":\"mobile-apps/automated-testing/appium\",\"id\":\"mobile-apps/automated-testing/appium\",\"isDocsHomePage\":false,\"title\":\"Using Appium for Automated Mobile App Testing\",\"description\":\"This page is intended to provide you with a quick overview of how Appium works to get started with mobile application testing. For full documentation of Appium, with more examples in popular scripting languages, check out the Appium.io website.\",\"source\":\"@site/docs/mobile-apps/automated-testing/appium.md\",\"slug\":\"/mobile-apps/automated-testing/appium\",\"permalink\":\"/mobile-apps/automated-testing/appium\",\"editUrl\":\"https://github.com/saucelabs/sauce-docs/edit/master/docs/mobile-apps/automated-testing/appium.md\",\"version\":\"current\",\"lastUpdatedBy\":\"Kim\",\"lastUpdatedAt\":1613209327,\"sidebar_label\":\"Using Appium\",\"sidebar\":\"someSidebar\",\"previous\":{\"title\":\"Choosing a Device for Mobile App Testing\",\"permalink\":\"/mobile-apps/automated-testing/devices\"},\"next\":{\"title\":\"Appium Testing with Real Devices\",\"permalink\":\"/mobile-apps/automated-testing/appium/real-devices\"}};/* @jsxRuntime classic */ /* @jsx mdx */var toc=[{value:'Overview',id:'overview',children:[]},{value:'Appium Architecture',id:'appium-architecture',children:[{value:'Appium Client',id:'appium-client',children:[]},{value:'Appium Server',id:'appium-server',children:[]}]},{value:'The Seven Basic Steps of Testing with Appium',id:'the-seven-basic-steps-of-testing-with-appium',children:[{value:'1. Locating the Mobile Application',id:'1-locating-the-mobile-application',children:[]},{value:'2. Creating a WebDriver Instance',id:'2-creating-a-webdriver-instance',children:[]},{value:'3. Locating Application Elements',id:'3-locating-application-elements',children:[]},{value:'4. Performing Actions on the Application Elements',id:'4-performing-actions-on-the-application-elements',children:[]},{value:'5. Anticipating the Application Response',id:'5-anticipating-the-application-response',children:[]},{value:'6. Running Tests and Recording Results',id:'6-running-tests-and-recording-results',children:[]},{value:'7. Concluding the Tests',id:'7-concluding-the-tests',children:[]}]},{value:'Full Example with All Steps',id:'full-example-with-all-steps',children:[]},{value:'Additional Resources',id:'additional-resources',children:[]}];var layoutProps={toc:toc};var MDXLayout=\"wrapper\";function MDXContent(_ref){var components=_ref.components,props=Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_ref,[\"components\"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(MDXLayout,Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({},layoutProps,props,{components:components,mdxType:\"MDXLayout\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"This page is intended to provide you with a quick overview of how Appium works to get started with mobile application testing. For full documentation of Appium, with more examples in popular scripting languages, check out the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"http://appium.io\"}),\"Appium.io website\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\",{\"id\":\"overview\"},\"Overview\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Appium was originally developed by Dan Cueller as a way to take advantage of the UIAutomation framework for Apple iOS to run tests against native mobile applications. Using the same syntax as \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"https://www.selenium.dev\"}),\"Selenium\"),\", it shares similarities with Selenium's ability to automate interaction with a website through a mobile browser. Although Appium can test websites on a mobile device, it is more commonly used for testing native and hybrid mobile applications for both iOS and Android.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\",{\"id\":\"appium-architecture\"},\"Appium Architecture\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Appium has a client-server architecture.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h3\",{\"id\":\"appium-client\"},\"Appium Client\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"Includes a \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"li\"},{\"href\":\"http://appium.io/downloads\"}),\"set of client libraries\"),\" for various scripting languages in which you write your test scripts based on the Selenium WebDriver API.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h3\",{\"id\":\"appium-server\"},\"Appium Server\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",{parentName:\"li\"},\"Includes a server component, based on node.js, which exposes the WebDriver API. In fact it exposes a superset of the WebDriver API known as the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"https://speakerdeck.com/jlipps/the-mobile-json-wire-protocol\"}),\"Mobile JSON Wire Protocol\"),\".\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",{parentName:\"li\"},\"Includes a \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"http://appium.io/downloads.html\"}),\"desktop application\"),\", available for both OS X and Windows, that includes everything you need to run Appium bundled in a single package, as well as the ability to inspect elements in running applications.\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"blockquote\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",{parentName:\"blockquote\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"NOTE\"),\": Appium Desktop is currently unsupported by the Appium core team.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\",{\"id\":\"the-seven-basic-steps-of-testing-with-appium\"},\"The Seven Basic Steps of Testing with Appium\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"There are seven basic steps in creating an Appium test script for your application under test (AUT):\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ol\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"li\"},{\"href\":\"/mobile-apps/automated-testing/appium#1-locating-the-mobile-application\"}),\"Set the location of the application (e.g., Sauce Storage, AWS, GitHub)\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"li\"},{\"href\":\"/mobile-apps/automated-testing/appium#2-creating-a-webdriver-instance\"}),\"Create an Appium driver instance which points to a running Appium server (e.g., the servers on Sauce Labs)\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"li\"},{\"href\":\"/mobile-apps/automated-testing/appium#3-locating-application-elements\"}),\"Locate an element within the application (e.g., a login button or link)\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"li\"},{\"href\":\"/mobile-apps/automated-testing/appium#4-performing-actions-on-the-application-elements\"}),\"Perform an action on the element (e.g., tap the login button)\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"li\"},{\"href\":\"/mobile-apps/automated-testing/appium#5-anticipating-the-application-response\"}),\"Anticipate the application response to the action (e.g., successfully logged in)\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"li\"},{\"href\":\"/mobile-apps/automated-testing/appium#6-running-tests-and-recording-results\"}),\"Run tests and record test results. (e.g., log whether test passed, failed, or returned an error)\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ol\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"li\"},{\"href\":\"/mobile-apps/automated-testing/appium#7-concluding-the-tests\"}),\"Conclude the test (e.g., shut down connection to Sauce Labs)\"),\".\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h3\",{\"id\":\"1-locating-the-mobile-application\"},\"1. Locating the Mobile Application\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"When you write an Appium test script, the most basic component is\\xA0the\\xA0\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"https://wiki.saucelabs.com/pages/viewpage.action?pageId=48365693\"}),\"DesiredCapabilities\\xA0object\"),\", which sets the parameters of your test, such as the mobile platform and operating system you want to test against. Within that object,\\xA0one of the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"https://wiki.saucelabs.com/pages/viewpage.action?pageId=63475214\"}),\"required capabilities\"),\"\\xA0is\\xA0Application Path, or the\\xA0app\\xA0desired capability. One of the advantages of the Appium architecture is that the application you want to test can be hosted anywhere, from a local path to any other web host on the network, since the Appium server will send the commands it receives from the client to any application path you specify. Practically, you have three options.\\xA0\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"See\\xA0\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"/mobile-apps/app-storage\"}),\"Application Storage\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"br\",null),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h3\",{\"id\":\"2-creating-a-webdriver-instance\"},\"2. Creating a WebDriver Instance\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"The\\xA0WebDriver\\xA0instance is the starting point for all uses of the Mobile JSON Wire Protocol.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"You create an instance of the\\xA0WebDriver\\xA0interface using a constructor for either Android or iOS. For mobile native application tests, you set both the platform and browser to test against by setting the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"p\"},\"browserName\"),\"\\xA0desired capability.\\xA0\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Once you have created an instance of the\\xA0WebDriver\\xA0interface, you use this instance to invoke methods, such as tap and swipe, to access other interfaces used in basic test steps. You do so by assigning the instance to a variable when you create it, and by using that variable to invoke methods.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h4\",{\"id\":\"webdriver-examples\"},\"WebDriver Examples\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"These psuedo-code examples illustrate how to instantiate iOS and Android\\xA0WebDriver objects in the various Appium language bindings.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(_theme_Tabs__WEBPACK_IMPORTED_MODULE_5___default.a,{defaultValue:\"Java\",values:[{label:'Java',value:'Java'},{label:'Python',value:'Python'},{label:'Node.js',value:'Node.js'},{label:'Ruby',value:'Ruby'},{label:'C#',value:'C#'}],mdxType:\"Tabs\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(_theme_TabItem__WEBPACK_IMPORTED_MODULE_6___default.a,{value:\"Java\",mdxType:\"TabItem\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Visit the java-client page for more information on the Java Appium language bindings.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"iOS\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"code\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"pre\"},{\"className\":\"language-java\"}),\"WebDriver driver = new iOSDriver<WebElement>( new URL(\\\"https://ondemand.us-west-1.saucelabs.com/wd/hub\\\"), capabilities);\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Android\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"code\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"pre\"},{\"className\":\"language-java\"}),\"WebDriver driver = new AndroidDriver<WebElement>( new URL(\\\"https://ondemand.us-west-1.saucelabs.com/wd/hub\\\"), capabilities);\\n\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(_theme_TabItem__WEBPACK_IMPORTED_MODULE_6___default.a,{value:\"Python\",mdxType:\"TabItem\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Visit the python-client page for more information on the Python Appium language bindings.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"iOS\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"code\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"pre\"},{\"className\":\"language-py\"}),\"desired_caps = {}\\ndesired_caps['platformName'] = 'iOS'\\ndesired_caps['app'] = PATH('../../apps/MyIOS.app.zip')\\nself.driver = webdriver.Remote('https://ondemand.us-west-1.saucelabs.com/wd/hub', desired_caps)\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Android\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"code\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"pre\"},{\"className\":\"language-py\"}),\"desired_caps = {}\\ndesired_caps['platformName'] = 'Android'\\ndesired_caps['app'] = PATH('../../apps/MyIOS.apk')\\nself.driver = webdriver.Remote('https://ondemand.us-west-1.saucelabs.com/wd/hub', desired_caps)\\n\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(_theme_TabItem__WEBPACK_IMPORTED_MODULE_6___default.a,{value:\"Node.js\",mdxType:\"TabItem\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"We recommend using the webdriverio testing utility as your WebDriver testing framework for node.js. For more information, refer to the documentation.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"iOS\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"code\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"pre\"},{\"className\":\"language-js\"}),\"const opts = {\\n  capabilities: {\\n    platformName: \\\"iOS\\\",\\n    app: \\\"/path/to/the/downloaded/MyiOS.app.zip\\\",\\n  }\\n};\\n\\nconst client = wdio.remote(opts);\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Android\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"code\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"pre\"},{\"className\":\"language-js\"}),\"const opts = {\\n  capabilities: {\\n    platformName: \\\"Android\\\",\\n    app: \\\"/path/to/the/downloaded/MyAndroid.apk\\\",\\n  }\\n};\\n\\nconst client = wdio.remote(opts);\\n\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(_theme_TabItem__WEBPACK_IMPORTED_MODULE_6___default.a,{value:\"Ruby\",mdxType:\"TabItem\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Visit appium_lib for more information about the Ruby Appium language bindings.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"iOS\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"code\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"pre\"},{\"className\":\"language-ruby\"}),\"opts = { caps: { platformName: :ios, app: '/path/to/MyiOS.app'}, appium_lib: { wait_timeout: 30 }}\\nappium_driver = Appium::Driver.new(opts, true)\\nappium_driver.start_driver\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Android\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"code\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"pre\"},{\"className\":\"language-ruby\"}),\"opts = { caps: { platformName: :android, app: '/path/to/MyAndroid.apk'}, appium_lib: { wait_timeout: 30 }}\\nappium_driver = Appium::Driver.new(opts, true)\\nappium_driver.start_driver\\n\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(_theme_TabItem__WEBPACK_IMPORTED_MODULE_6___default.a,{value:\"C#\",mdxType:\"TabItem\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Visit the appium-dot-net page for more information about the C# Appium language bindings.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"iOS\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"code\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"pre\"},{\"className\":\"language-CS\"}),\"var sauceURL = \\\"https://ondemand.us-west-1.saucelabs.com\\\";\\nvar driver = new IOSDriver<IWebElement>(new Uri(sauceURL));\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Android\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"code\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"pre\"},{\"className\":\"language-CS\"}),\"var sauceURL = \\\"https://ondemand.us-west-1.saucelabs.com\\\";\\nvar driver = new AndroidDriver<IWebElement>(new Uri(sauceURL));\\n\")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"br\",null),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h3\",{\"id\":\"3-locating-application-elements\"},\"3. Locating Application Elements\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"In order to find elements in a mobile environment, Appium implements a number of locator strategies that are specific to, or adaptations for, the particulars of a mobile device.\\xA0Three are available for both Android and iOS:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(_theme_Tabs__WEBPACK_IMPORTED_MODULE_5___default.a,{defaultValue:\"accessibility ID\",values:[{label:'accessibility ID',value:'accessibility ID'},{label:'class name',value:'class name'},{label:'id',value:'id'},{label:'xpath',value:'xpath'}],mdxType:\"Tabs\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(_theme_TabItem__WEBPACK_IMPORTED_MODULE_6___default.a,{value:\"accessibility ID\",mdxType:\"TabItem\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h4\",{\"id\":\"accessibility-id\"},\"accessibility ID\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"The\\xA0\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"p\"},\"accessibility ID\"),\"\\xA0locator strategy is designed to read a unique identifier for a UI element. This has the benefit of not changing during localization or any other process that might change text. In addition, it can be an aid in creating cross-platform tests, if elements that are functionally the same have the same accessibility id.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"For iOS, this is the\\xA0accessibility identifier\\xA0laid out by Apple\\xA0\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"li\"},{\"href\":\"https://developer.apple.com/documentation/uikit/uiaccessibilityidentification\"}),\"here\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"For Android, the\\xA0accessibility id\\xA0maps to the\\xA0content-description\\xA0for the element, as described\\xA0\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"li\"},{\"href\":\"https://developer.android.com/guide/topics/ui/accessibility/apps\"}),\"here\"),\".\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"For both platforms getting an element, or multiple elements, by their\\xA0accessibility id\\xA0is usually the best method. It is also the preferred way, in replacement of the deprecated\\xA0name\\xA0strategy.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"The client libraries specific to Appium support getting elements by\\xA0\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"p\"},\"accessibility id\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"code\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"pre\"},{\"className\":\"language-py\"}),\"#python example\\ndriver.find_element_by_accessibility_id('my_accessibility_identifier')\\n\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(_theme_TabItem__WEBPACK_IMPORTED_MODULE_6___default.a,{value:\"class name\",mdxType:\"TabItem\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h4\",{\"id\":\"class-name\"},\"class name\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"The\\xA0\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"p\"},\"class name\"),\"\\xA0strategy is a\\xA0string\\xA0representing a UI element on the current view.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"For iOS it is the full name of a\\xA0UIAutomation\\xA0class, and will begin with\\xA0UIA-, such as\\xA0UIATextField\\xA0for a text field. A full reference can be found\\xA0here.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"For Android it is the fully qualified name of a\\xA0UI Automator\\xA0class, such\\xA0android.widget.EditText\\xA0for a text field. A full reference can be found\\xA0here.\\nThe client libraries for Appium support getting a single element, or multiple elements, based on the\\xA0class name. This functionality is in the Selenium clients (e.g.,\\xA0Python).\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"code\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"pre\"},{\"className\":\"language-py\"}),\"#python example\\ndriver.find_element_by_class_name('android.widget.DatePicker')\\n\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(_theme_TabItem__WEBPACK_IMPORTED_MODULE_6___default.a,{value:\"id\",mdxType:\"TabItem\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h4\",{\"id\":\"id\"},\"id\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"In the mobile environment,\\xA0\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"p\"},\"id\"),\"s are not, as in WebDriver, CSS ids, but rather some form of native identifier.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"For iOS the situation is complicated. Appium will first search for an\\xA0accessibility id\\xA0that matches. If there is none found, a string match will be attempted on the element labels. Finally, if the id passed in is a localization key, it will search the localized string.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"For Android, the\\xA0id\\xA0is the element\\u2019s\\xA0android:id.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Example:\\xA0Locate elements for username and password\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"This example (Java) invokes the\\xA0findElement\\xA0method on the\\xA0driver\\xA0variable, using the\\xA0name\\xA0attribute to locate the\\xA0username\\xA0and\\xA0password\\xA0text input elements, and (optionally) the\\xA0id\\xA0attribute to locate the\\xA0form\\xA0element.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"code\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"pre\"},{\"className\":\"language-java\"}),\"import org.openqa.selenium.By;\\nimport org.openqa.selenium.WebElement;\\nWebElement emailInput = driver.findElement(By.id(\\\"fbemail\\\"));\\n\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(_theme_TabItem__WEBPACK_IMPORTED_MODULE_6___default.a,{value:\"xpath\",mdxType:\"TabItem\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h4\",{\"id\":\"xpath\"},\"xpath\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"The\\xA0\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"p\"},\"xpath\"),\"\\xA0locator strategy is also available in the WebDriver protocol, and exposes the functionality of\\xA0\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"p\"},{\"href\":\"https://www.w3.org/TR/xpath20/\"}),\"XPath\\xA0language\"),\" to locate elements within a mobile view. An XML representation of the view is created in Appium, and searches are made against that image.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"The Selenium clients have methods for retrieving elements using the\\xA0xpath\\xA0locator strategy.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"code\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"pre\"},{\"className\":\"language-py\"}),\"#python example\\ndriver.find_element_by_xpath('//UIAApplication[1]/UIAWindow[1]/UIATextField[1]')\\n\")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h4\",{\"id\":\"best-practices-for-identifying-application-elements\"},\"Best Practices for Identifying Application Elements\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"It is always best to use an element locator that uniquely identifies the element, like an id or an accessibility id. Class names and xpath are best used only when IDs are not available. Multiple elements can have the same class name, and using xpath searches through the entire markup to find the element, which can slow down your tests.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"br\",null),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h3\",{\"id\":\"4-performing-actions-on-the-application-elements\"},\"4. Performing Actions on the Application Elements\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Once you've identified the mobile elements you want your test to interact with, the next step is to interact with them. You perform an action on a mobile element by invoking an interaction method on an instance of the\\xA0WebElement\\xA0interface.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"The\\xA0WebElement\\xA0interface declares basic interaction methods including:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"The\\xA0\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"li\"},\"sendKeys\"),\"\\xA0method, to enter text\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"The\\xA0\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"li\"},\"clear\"),\"\\xA0method, to clear entered text\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"The\\xA0\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"li\"},\"submit\"),\"\\xA0method, to submit a form\\xA0\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h4\",{\"id\":\"example\"},\"Example\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"This example first invokes the\\xA0\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"p\"},\"sendKeys\"),\"\\xA0method to enter text in the\\xA0username\\xA0and\\xA0password\\xA0elements, and then invokes the\\xA0submit\\xA0method to submit the\\xA0login\\xA0form.\\xA0Enter a username and password:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"code\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"pre\"},{\"className\":\"language-sh\"}),\"emailInput.sendKeys(\\\"SauceIsAwesome@email.com\\\");\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h4\",{\"id\":\"submit-the-form\"},\"Submit the Form\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"The\\xA0submit\\xA0method can be invoked either on any text input element on a form, or on the form element itself. Submit Text Element:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"code\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"pre\"},{\"className\":\"language-sh\"}),\"emailInput.submit();\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"br\",null),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h3\",{\"id\":\"5-anticipating-the-application-response\"},\"5. Anticipating the Application Response\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"When you click a\\xA0\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"Submit\"),\"\\xA0button, you know that you have to wait a second or two for your action to reach the server, and for the server to respond, before you do anything else.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"If you're trying to test the response, and what happens afterwards, then you need to build that waiting time into your test. Otherwise, the test might fail because the elements that are expected for the next step haven't loaded into the browser you. The WebDriver API supports two basic techniques for anticipating browser response by waiting:\\xA0implicit waits\\xA0and\\xA0explicit waits.\\xA0\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"blockquote\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",{parentName:\"blockquote\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"NOTE\"),\": Do not mix implicit and explicit waits. Doing so can cause unpredictable wait times. For example setting an implicit wait of 10s and an explicit wait of 15 seconds, could cause a timeout to occur after 20 seconds.\\xA0\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h4\",{\"id\":\"wait-strategies\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"h4\"},\"Wait Strategies\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(_theme_Tabs__WEBPACK_IMPORTED_MODULE_5___default.a,{defaultValue:\"Implicit Waits\",values:[{label:'Implicit Waits',value:'Implicit Waits'},{label:'Explicit Waits',value:'Explicit Waits'}],mdxType:\"Tabs\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(_theme_TabItem__WEBPACK_IMPORTED_MODULE_6___default.a,{value:\"Implicit Waits\",mdxType:\"TabItem\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"em\",{parentName:\"p\"},\"Implicit waits\"),\" set a maximum time that the Appium server will continue trying to find an element. Using implicit waits is not a best practice because application response times are not definitely predictable and fixed elapsed times are not applicable to all interactions. Using explicit waits requires more technical sophistication,\\xA0but is a Sauce Labs best practice.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"This example code (Java) illustrates how you could use an implicit wait to anticipate web browser response after submitting the login form:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"code\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"pre\"},{\"className\":\"language-java\"}),\"driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\\n\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(_theme_TabItem__WEBPACK_IMPORTED_MODULE_6___default.a,{value:\"Explicit Waits\",mdxType:\"TabItem\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"em\",{parentName:\"p\"},\"Explicit waits\"),\" wait until an\\xA0expected condition\\xA0occurs on the web page, or until a maximum wait time elapses. To use an explicit wait, you create an instance of the\\xA0WebDriverWait\\xA0class with a maximum wait time, and you invoke its\\xA0until\\xA0method with an expected condition.\\xA0\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"The WebDriver API provides an\\xA0ExpectedConditions\\xA0class with methods for various standard types of expected condition. These methods return an instance of an\\xA0expected condition\\xA0class. You can pass an invocation of these standard expected-condition methods as argument values to\\xA0until\\xA0method. You can also pass - in ways that your programming language and its WebDriver API support - any function, code block, or closure that returns a boolean value or an object reference to a found web element as an argument value to the\\xA0until\\xA0method. How this is done varies over programming languages. The\\xA0until\\xA0method checks repeatedly, until the maximum wait time elapses, for a\\xA0true\\xA0boolean return value or a non-null\\xA0object reference, as an indication that the expected condition has occurred.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"This example code (Java) illustrates how you could use an explicit wait to anticipate web browser response after submitting the login form.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"code\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"pre\"},{\"className\":\"language-java\"}),\"import org.openqa.selenium.support.ui.ExpectedConditions;\\xA0\\nimport org.openqa.selenium.support.ui.WebDriverWait;\\xA0\\nWebDriverWait wait = new WebDriverWait(driver, 10); WebElement messageElement = wait.until( ExpectedConditions.presenceOfElementLocated(By.id(\\\"loginResponse\\\")) );\\n\")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"br\",null),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h3\",{\"id\":\"6-running-tests-and-recording-results\"},\"6. Running Tests and Recording Results\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Running tests and recording test results is the ultimate purpose of your test script: you run tests in an automated test script in order to\\xA0evaluate function and performance\\xA0in the AUT, without requiring human interaction.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h4\",{\"id\":\"test-frameworks\"},\"Test Frameworks\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"To run test and to record test results, you use methods of a\\xA0test framework\\xA0for your programming language. There are many available test frameworks, including the frameworks in the so-called\\xA0XUnitfamily, which includes:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"JUnit\\xA0for Java\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"NUnit\\xA0for C#\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"unittest\\xA0or\\xA0pyunit\\xA0for Python\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"RSpec\\xA0for Ruby\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"For some programming languages, test frameworks other than those in the XUnit family are common - for example, the\\xA0RSpec\\xA0framework for Ruby. The\\xA0Sauce Labs sample test framework repos\\xA0on GitHub contain over 60 examples of test frameworks set up to work with Sauce Labs.\\xA0\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h4\",{\"id\":\"test-assertions\"},\"Test Assertions\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Most test frameworks implement the basic concept of an\\xA0assertion, a method representing whether or not a logical condition holds after interaction with an AUT. Test frameworks generally declare methods whose names begin with the term\\xA0\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"p\"},\"assert\"),\"\\xA0and end with a term for a logical condition, e.g.,\\xA0\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"p\"},\"assertEquals\"),\"\\xA0in JUnit. Generally, when the logical condition represented by an\\xA0assert\\xA0method does not hold, an exception for the condition is thrown. There are various approaches to using exceptions in most test frameworks.\\xA0The SeleniumHQ documentation has more detailed information\\xA0on using both assertions and verifications in your tests.\\xA0\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h4\",{\"id\":\"recording-test-results\"},\"Recording Test Results\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"Recording of test results can be done in various ways, supported by the test framework or by a logging framework for the programming language, or by both together. Selenium also supports taking screenshots of web browser windows as a helpful additional type of recording. Because of the wide variations in recording technique, this beginning section omits recording, instead emphasizing a simple approach to applying a test using an\\xA0assert\\xA0method. The scripts in\\xA0Sauce Labs Demonstration Scripts\\xA0include examples of setting up reporting of test results to Sauce Labs, as do the framework scripts in the\\xA0Sauce Labs sample test framework repos.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"The following example runs a test by asserting that the login response message is equal to an expected success message:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"code\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"pre\"},{\"className\":\"language-sh\"}),\"import junit.framework.Assert;\\nimport junit.framework.TestCase;\\n\\nWebElement messageElement     = driver.findElement(By.id(\\\"loginResponse\\\"));\\nString message                = messageElement.getText();\\nString successMsg             = \\\"Welcome to foo. You logged in successfully.\\\";\\nassertEquals (message, successMsg);\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"br\",null),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h3\",{\"id\":\"7-concluding-the-tests\"},\"7. Concluding the Tests\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h4\",{\"id\":\"the-quit-method\"},\"The\\xA0\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"h4\"},\"quit\"),\"\\xA0Method\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"You conclude a test by invoking the\\xA0\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"em\",{parentName:\"p\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"em\"},\"quit\"),\"\\xA0method\"),\" on an instance of the\\xA0WebDriver\\xA0interface (e.g., on the\\xA0driver\\xA0variable).\\xA0\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"The\\xA0\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"inlineCode\",{parentName:\"p\"},\"quit\"),\"\\xA0method concludes a test by disposing of resources, which allows later tests to run without resources and application state affected by earlier tests. The\\xA0quit\\xA0method:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"quits the web browser application, closing all web pages\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"quits the WebDriver server, which interacts with the web browser\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},\"releases\\xA0driver, the variable referencing the unique instance of the\\xA0WebDriver\\xA0interface.\\xA0\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"The following example invokes the\\xA0quit\\xA0method on the\\xA0driver\\xA0variable:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"code\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"pre\"},{\"className\":\"language-sh\"}),\"driver.quit();\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"br\",null),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\",{\"id\":\"full-example-with-all-steps\"},\"Full Example with All Steps\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"The following example includes code for all steps. The example also defines a Java test class Example, and its main method, so that the code can be run.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"strong\",{parentName:\"p\"},\"Java Example\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"code\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"pre\"},{\"className\":\"language-java\"}),\"package com.yourcompany;\\nimport org.openqa.selenium.By;\\nimport org.openqa.selenium.WebDriver;\\nimport org.openqa.selenium.WebElement;\\nimport org.openqa.selenium.remote.DesiredCapabilities;\\nimport io.appium.java_client.android.AndroidDriver;\\nimport java.net.MalformedURLException;\\nimport java.net.URL;\\nimport junit.framework.Assert;\\npublic class SampleSauceTest {\\n\\n    public static void  main() throws MalformedURLException {\\n        desiredCapabilities capabilities = new DesiredCapabilities();\\n        capabilities.setCapability(\\\"platformName\\\", \\\"Android\\\");\\n        capabilities.setCapability(\\\"deviceName\\\", \\\"Android GoogleAPI Emulator\\\");\\n        capabilities.setCapability(\\\"platformVersion\\\", \\\"10.0\\\");\\n        capabilities.setCapability(\\\"app\\\", \\\"storage:filename=swag-labs.apk\\\");\\n        capabilities.setCapability(\\\"browserName\\\", \\\"\\\");\\n        capabilities.setCapability(\\\"deviceOrientation\\\", \\\"portrait\\\");\\n        capabilities.setCapability(\\\"appiumVersion\\\", \\\"1.16.0\\\");\\n        WebDriver driver = new AndroidDriver<WebElement>( new URL(\\\"http://SAUCE_USERNAME:SAUCE_ACCESS_KEY@ondemand.us-west-1.saucelabs.com/wd/hub\\\"), capabilities);\\n\\n        WebElement emailInput = driver.findElement(By.id(\\\"fbemail\\\"));\\n        emailInput.sendKeys(\\\"SauceIsAwesome@email.com\\\");\\n        assertEquals(emailInput.getText(), \\\"SauceIsAwesome@email.com\\\");\\n\\n        driver.quit();\\n    }\\n}\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"h2\",{\"id\":\"additional-resources\"},\"Additional Resources\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"p\",null,\"There are many additional resources available if you want to dive into more detail with Appium and mobile application testing.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"li\"},{\"href\":\"https://wiki.saucelabs.com/pages/viewpage.action?pageId=63480380\"}),\"Appium Bootcamp by Dave Haeffner and Matthew Edwards\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"li\"},{\"href\":\"http://appium.io\"}),\"Official Appium website and documentation\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"li\"},{\"href\":\"https://youtu.be/1J0aXDbjiUE?list=PLSIUOFhnxEiCODb8XQB-RUQ0RGNZ2yW7d\"}),\"An Introduction to Appium\"),\", presented by Jonathan Lipps of Sauce Labs and the Appium project given at the 2013 Google Test Automation Conference\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"li\"},{\"href\":\"https://confengine.com/selenium-conf-2015/proposal/1319/the-mobile-json-wire-protocol\"}),\"A talk on the mobile JSON wire protocol\"),\", presented by Jonathan Lipps at the 2015 Selenium Conference\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[\"mdx\"])(\"a\",Object(_Users_nancysweeney_GH_sauce_docs_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({parentName:\"li\"},{\"href\":\"http://stackshare.io/sauce-labs/mobile-automation-with-appium-and-sauce-labs\"}),\"An in-depth tutorial\"),\", by Jonathan Lipps covering Appium basics using Ruby and Sauce Labs\")));};MDXContent.isMDXComponent=true;\n\n/***/ }),\n\n/***/ 222:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDXContext\", function() { return MDXContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDXProvider\", function() { return MDXProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mdx\", function() { return createElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useMDXComponents\", function() { return useMDXComponents; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withMDXComponents\", function() { return withMDXComponents; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = react__WEBPACK_IMPORTED_MODULE_0___default.a.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, createElementArgArray);\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, args);\n}\n\n\n\n\n/***/ }),\n\n/***/ 223:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar _interopRequireDefault=__webpack_require__(4);Object.defineProperty(exports,\"__esModule\",{value:true});exports.useBaseUrlUtils=useBaseUrlUtils;exports.default=useBaseUrl;var _useDocusaurusContext4=_interopRequireDefault(__webpack_require__(29));var _isInternalUrl=__webpack_require__(224);/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */function addBaseUrl(siteUrl,baseUrl,url,_temp){var _ref=_temp===void 0?{}:_temp,_ref$forcePrependBase=_ref.forcePrependBaseUrl,forcePrependBaseUrl=_ref$forcePrependBase===void 0?false:_ref$forcePrependBase,_ref$absolute=_ref.absolute,absolute=_ref$absolute===void 0?false:_ref$absolute;if(!url){return url;}// it never makes sense to add a base url to a local anchor url\nif(url.startsWith('#')){return url;}// it never makes sense to add a base url to an url with a protocol\nif((0,_isInternalUrl.hasProtocol)(url)){return url;}if(forcePrependBaseUrl){return baseUrl+url;}// We should avoid adding the baseurl twice if it's already there\nvar shouldAddBaseUrl=!url.startsWith(baseUrl);var basePath=shouldAddBaseUrl?baseUrl+url.replace(/^\\//,''):url;return absolute?siteUrl+basePath:basePath;}function useBaseUrlUtils(){var _useDocusaurusContext=(0,_useDocusaurusContext4.default)(),_useDocusaurusContext2=_useDocusaurusContext.siteConfig;_useDocusaurusContext2=_useDocusaurusContext2===void 0?{}:_useDocusaurusContext2;var _useDocusaurusContext3=_useDocusaurusContext2.baseUrl,baseUrl=_useDocusaurusContext3===void 0?'/':_useDocusaurusContext3,siteUrl=_useDocusaurusContext2.url;return{withBaseUrl:function withBaseUrl(url,options){return addBaseUrl(siteUrl,baseUrl,url,options);}};}function useBaseUrl(url,options){if(options===void 0){options={};}var _useBaseUrlUtils=useBaseUrlUtils(),withBaseUrl=_useBaseUrlUtils.withBaseUrl;return withBaseUrl(url,options);}\n\n/***/ }),\n\n/***/ 224:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.hasProtocol=hasProtocol;exports.default=isInternalUrl;/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */function hasProtocol(url){return /^(\\w*:|\\/\\/)/.test(url)===true;}function isInternalUrl(url){return typeof url!=='undefined'&&!hasProtocol(url);}\n\n/***/ }),\n\n/***/ 225:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\nfunction toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n});\n\n\n/***/ }),\n\n/***/ 226:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar _interopRequireDefault=__webpack_require__(4);Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _react=__webpack_require__(0);var _UserPreferencesContext=_interopRequireDefault(__webpack_require__(227));/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */function useUserPreferencesContext(){var context=(0,_react.useContext)(_UserPreferencesContext.default);if(context==null){throw new Error('`useUserPreferencesContext` is used outside of `Layout` Component.');}return context;}var _default=useUserPreferencesContext;exports.default=_default;\n\n/***/ }),\n\n/***/ 227:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _react=__webpack_require__(0);/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */var UserPreferencesContext=/*#__PURE__*/(0,_react.createContext)(undefined);var _default=UserPreferencesContext;exports.default=_default;\n\n/***/ }),\n\n/***/ 228:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar _interopRequireDefault=__webpack_require__(4);var _interopRequireWildcard=__webpack_require__(30);Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _react=_interopRequireWildcard(__webpack_require__(0));var _useUserPreferencesContext=_interopRequireDefault(__webpack_require__(226));var _clsx=_interopRequireDefault(__webpack_require__(225));var _stylesModule=_interopRequireDefault(__webpack_require__(198));/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */var keys={left:37,right:39};function Tabs(props){var lazy=props.lazy,block=props.block,defaultValue=props.defaultValue,values=props.values,groupId=props.groupId,className=props.className;var _useUserPreferencesCo=(0,_useUserPreferencesContext.default)(),tabGroupChoices=_useUserPreferencesCo.tabGroupChoices,setTabGroupChoices=_useUserPreferencesCo.setTabGroupChoices;var _useState=(0,_react.useState)(defaultValue),selectedValue=_useState[0],setSelectedValue=_useState[1];var children=_react.Children.toArray(props.children);if(groupId!=null){var relevantTabGroupChoice=tabGroupChoices[groupId];if(relevantTabGroupChoice!=null&&relevantTabGroupChoice!==selectedValue&&values.some(function(value){return value.value===relevantTabGroupChoice;})){setSelectedValue(relevantTabGroupChoice);}}var changeSelectedValue=function changeSelectedValue(newValue){setSelectedValue(newValue);if(groupId!=null){setTabGroupChoices(groupId,newValue);}};var tabRefs=[];var focusNextTab=function focusNextTab(tabs,target){var next=tabs.indexOf(target)+1;if(!tabs[next]){tabs[0].focus();}else{tabs[next].focus();}};var focusPreviousTab=function focusPreviousTab(tabs,target){var prev=tabs.indexOf(target)-1;if(!tabs[prev]){tabs[tabs.length-1].focus();}else{tabs[prev].focus();}};var handleKeydown=function handleKeydown(tabs,target,event){switch(event.keyCode){case keys.right:focusNextTab(tabs,target);break;case keys.left:focusPreviousTab(tabs,target);break;default:break;}};return/*#__PURE__*/_react.default.createElement(\"div\",null,/*#__PURE__*/_react.default.createElement(\"ul\",{role:\"tablist\",\"aria-orientation\":\"horizontal\",className:(0,_clsx.default)('tabs',{'tabs--block':block},className)},values.map(function(_ref){var value=_ref.value,label=_ref.label;return/*#__PURE__*/_react.default.createElement(\"li\",{role:\"tab\",tabIndex:0,\"aria-selected\":selectedValue===value,className:(0,_clsx.default)('tabs__item',_stylesModule.default.tabItem,{'tabs__item--active':selectedValue===value}),key:value,ref:function ref(tabControl){return tabRefs.push(tabControl);},onKeyDown:function onKeyDown(event){handleKeydown(tabRefs,event.target,event);},onFocus:function onFocus(){return changeSelectedValue(value);},onClick:function onClick(){changeSelectedValue(value);}},label);})),lazy?/*#__PURE__*/(0,_react.cloneElement)(children.filter(function(tabItem){return tabItem.props.value===selectedValue;})[0],{className:'margin-vert--md'}):/*#__PURE__*/_react.default.createElement(\"div\",{className:\"margin-vert--md\"},children.map(function(tabItem,i){return/*#__PURE__*/(0,_react.cloneElement)(tabItem,{key:i,hidden:tabItem.props.value!==selectedValue});})));}var _default=Tabs;exports.default=_default;\n\n/***/ }),\n\n/***/ 229:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar _interopRequireDefault=__webpack_require__(4);Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(__webpack_require__(3));var _react=_interopRequireDefault(__webpack_require__(0));/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */function TabItem(_ref){var children=_ref.children,hidden=_ref.hidden,className=_ref.className;return/*#__PURE__*/_react.default.createElement(\"div\",(0,_extends2.default)({role:\"tabpanel\"},{hidden:hidden,className:className}),children);}var _default=TabItem;exports.default=_default;\n\n/***/ })\n\n}]);","inputSourceMap":null}